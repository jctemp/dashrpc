// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: platform.proto

#include "platform.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace org {
namespace dash {
namespace platform {
namespace dapi {
namespace v0 {
constexpr StoreTreeProofs::StoreTreeProofs(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : identities_proof_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , public_key_hashes_to_identity_ids_proof_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , data_contracts_proof_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , documents_proof_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct StoreTreeProofsDefaultTypeInternal {
  constexpr StoreTreeProofsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StoreTreeProofsDefaultTypeInternal() {}
  union {
    StoreTreeProofs _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StoreTreeProofsDefaultTypeInternal _StoreTreeProofs_default_instance_;
constexpr Proof::Proof(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : root_tree_proof_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , signature_llmq_hash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , signature_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , store_tree_proofs_(nullptr){}
struct ProofDefaultTypeInternal {
  constexpr ProofDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProofDefaultTypeInternal() {}
  union {
    Proof _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProofDefaultTypeInternal _Proof_default_instance_;
constexpr ResponseMetadata::ResponseMetadata(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : height_(int64_t{0})
  , core_chain_locked_height_(0u){}
struct ResponseMetadataDefaultTypeInternal {
  constexpr ResponseMetadataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResponseMetadataDefaultTypeInternal() {}
  union {
    ResponseMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResponseMetadataDefaultTypeInternal _ResponseMetadata_default_instance_;
constexpr StateTransitionBroadcastError::StateTransitionBroadcastError(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , code_(0u){}
struct StateTransitionBroadcastErrorDefaultTypeInternal {
  constexpr StateTransitionBroadcastErrorDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StateTransitionBroadcastErrorDefaultTypeInternal() {}
  union {
    StateTransitionBroadcastError _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StateTransitionBroadcastErrorDefaultTypeInternal _StateTransitionBroadcastError_default_instance_;
constexpr BroadcastStateTransitionRequest::BroadcastStateTransitionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : state_transition_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct BroadcastStateTransitionRequestDefaultTypeInternal {
  constexpr BroadcastStateTransitionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BroadcastStateTransitionRequestDefaultTypeInternal() {}
  union {
    BroadcastStateTransitionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BroadcastStateTransitionRequestDefaultTypeInternal _BroadcastStateTransitionRequest_default_instance_;
constexpr BroadcastStateTransitionResponse::BroadcastStateTransitionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct BroadcastStateTransitionResponseDefaultTypeInternal {
  constexpr BroadcastStateTransitionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BroadcastStateTransitionResponseDefaultTypeInternal() {}
  union {
    BroadcastStateTransitionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BroadcastStateTransitionResponseDefaultTypeInternal _BroadcastStateTransitionResponse_default_instance_;
constexpr GetIdentityRequest::GetIdentityRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , prove_(false){}
struct GetIdentityRequestDefaultTypeInternal {
  constexpr GetIdentityRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetIdentityRequestDefaultTypeInternal() {}
  union {
    GetIdentityRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetIdentityRequestDefaultTypeInternal _GetIdentityRequest_default_instance_;
constexpr GetIdentityResponse::GetIdentityResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : identity_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , proof_(nullptr)
  , metadata_(nullptr){}
struct GetIdentityResponseDefaultTypeInternal {
  constexpr GetIdentityResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetIdentityResponseDefaultTypeInternal() {}
  union {
    GetIdentityResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetIdentityResponseDefaultTypeInternal _GetIdentityResponse_default_instance_;
constexpr GetDataContractRequest::GetDataContractRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , prove_(false){}
struct GetDataContractRequestDefaultTypeInternal {
  constexpr GetDataContractRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetDataContractRequestDefaultTypeInternal() {}
  union {
    GetDataContractRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetDataContractRequestDefaultTypeInternal _GetDataContractRequest_default_instance_;
constexpr GetDataContractResponse::GetDataContractResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_contract_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , proof_(nullptr)
  , metadata_(nullptr){}
struct GetDataContractResponseDefaultTypeInternal {
  constexpr GetDataContractResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetDataContractResponseDefaultTypeInternal() {}
  union {
    GetDataContractResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetDataContractResponseDefaultTypeInternal _GetDataContractResponse_default_instance_;
constexpr GetDocumentsRequest::GetDocumentsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_contract_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , document_type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , where_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , order_by_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , limit_(0u)
  , prove_(false)
  , _oneof_case_{}{}
struct GetDocumentsRequestDefaultTypeInternal {
  constexpr GetDocumentsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetDocumentsRequestDefaultTypeInternal() {}
  union {
    GetDocumentsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetDocumentsRequestDefaultTypeInternal _GetDocumentsRequest_default_instance_;
constexpr GetDocumentsResponse::GetDocumentsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : documents_()
  , proof_(nullptr)
  , metadata_(nullptr){}
struct GetDocumentsResponseDefaultTypeInternal {
  constexpr GetDocumentsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetDocumentsResponseDefaultTypeInternal() {}
  union {
    GetDocumentsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetDocumentsResponseDefaultTypeInternal _GetDocumentsResponse_default_instance_;
constexpr GetIdentitiesByPublicKeyHashesRequest::GetIdentitiesByPublicKeyHashesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : public_key_hashes_()
  , prove_(false){}
struct GetIdentitiesByPublicKeyHashesRequestDefaultTypeInternal {
  constexpr GetIdentitiesByPublicKeyHashesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetIdentitiesByPublicKeyHashesRequestDefaultTypeInternal() {}
  union {
    GetIdentitiesByPublicKeyHashesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetIdentitiesByPublicKeyHashesRequestDefaultTypeInternal _GetIdentitiesByPublicKeyHashesRequest_default_instance_;
constexpr GetIdentitiesByPublicKeyHashesResponse::GetIdentitiesByPublicKeyHashesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : identities_()
  , proof_(nullptr)
  , metadata_(nullptr){}
struct GetIdentitiesByPublicKeyHashesResponseDefaultTypeInternal {
  constexpr GetIdentitiesByPublicKeyHashesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetIdentitiesByPublicKeyHashesResponseDefaultTypeInternal() {}
  union {
    GetIdentitiesByPublicKeyHashesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetIdentitiesByPublicKeyHashesResponseDefaultTypeInternal _GetIdentitiesByPublicKeyHashesResponse_default_instance_;
constexpr GetIdentityIdsByPublicKeyHashesRequest::GetIdentityIdsByPublicKeyHashesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : public_key_hashes_()
  , prove_(false){}
struct GetIdentityIdsByPublicKeyHashesRequestDefaultTypeInternal {
  constexpr GetIdentityIdsByPublicKeyHashesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetIdentityIdsByPublicKeyHashesRequestDefaultTypeInternal() {}
  union {
    GetIdentityIdsByPublicKeyHashesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetIdentityIdsByPublicKeyHashesRequestDefaultTypeInternal _GetIdentityIdsByPublicKeyHashesRequest_default_instance_;
constexpr GetIdentityIdsByPublicKeyHashesResponse::GetIdentityIdsByPublicKeyHashesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : identity_ids_()
  , proof_(nullptr)
  , metadata_(nullptr){}
struct GetIdentityIdsByPublicKeyHashesResponseDefaultTypeInternal {
  constexpr GetIdentityIdsByPublicKeyHashesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetIdentityIdsByPublicKeyHashesResponseDefaultTypeInternal() {}
  union {
    GetIdentityIdsByPublicKeyHashesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetIdentityIdsByPublicKeyHashesResponseDefaultTypeInternal _GetIdentityIdsByPublicKeyHashesResponse_default_instance_;
constexpr WaitForStateTransitionResultRequest::WaitForStateTransitionResultRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : state_transition_hash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , prove_(false){}
struct WaitForStateTransitionResultRequestDefaultTypeInternal {
  constexpr WaitForStateTransitionResultRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WaitForStateTransitionResultRequestDefaultTypeInternal() {}
  union {
    WaitForStateTransitionResultRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WaitForStateTransitionResultRequestDefaultTypeInternal _WaitForStateTransitionResultRequest_default_instance_;
constexpr WaitForStateTransitionResultResponse::WaitForStateTransitionResultResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : metadata_(nullptr)
  , _oneof_case_{}{}
struct WaitForStateTransitionResultResponseDefaultTypeInternal {
  constexpr WaitForStateTransitionResultResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WaitForStateTransitionResultResponseDefaultTypeInternal() {}
  union {
    WaitForStateTransitionResultResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WaitForStateTransitionResultResponseDefaultTypeInternal _WaitForStateTransitionResultResponse_default_instance_;
constexpr ConsensusParamsBlock::ConsensusParamsBlock(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : max_bytes_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , max_gas_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , time_iota_ms_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ConsensusParamsBlockDefaultTypeInternal {
  constexpr ConsensusParamsBlockDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ConsensusParamsBlockDefaultTypeInternal() {}
  union {
    ConsensusParamsBlock _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ConsensusParamsBlockDefaultTypeInternal _ConsensusParamsBlock_default_instance_;
constexpr ConsensusParamsEvidence::ConsensusParamsEvidence(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : max_age_num_blocks_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , max_age_duration_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , max_bytes_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ConsensusParamsEvidenceDefaultTypeInternal {
  constexpr ConsensusParamsEvidenceDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ConsensusParamsEvidenceDefaultTypeInternal() {}
  union {
    ConsensusParamsEvidence _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ConsensusParamsEvidenceDefaultTypeInternal _ConsensusParamsEvidence_default_instance_;
constexpr GetConsensusParamsRequest::GetConsensusParamsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : height_(int64_t{0})
  , prove_(false){}
struct GetConsensusParamsRequestDefaultTypeInternal {
  constexpr GetConsensusParamsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetConsensusParamsRequestDefaultTypeInternal() {}
  union {
    GetConsensusParamsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetConsensusParamsRequestDefaultTypeInternal _GetConsensusParamsRequest_default_instance_;
constexpr GetConsensusParamsResponse::GetConsensusParamsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : block_(nullptr)
  , evidence_(nullptr){}
struct GetConsensusParamsResponseDefaultTypeInternal {
  constexpr GetConsensusParamsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetConsensusParamsResponseDefaultTypeInternal() {}
  union {
    GetConsensusParamsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetConsensusParamsResponseDefaultTypeInternal _GetConsensusParamsResponse_default_instance_;
}  // namespace v0
}  // namespace dapi
}  // namespace platform
}  // namespace dash
}  // namespace org
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_platform_2eproto[22];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_platform_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_platform_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_platform_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::StoreTreeProofs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::StoreTreeProofs, identities_proof_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::StoreTreeProofs, public_key_hashes_to_identity_ids_proof_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::StoreTreeProofs, data_contracts_proof_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::StoreTreeProofs, documents_proof_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::Proof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::Proof, root_tree_proof_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::Proof, store_tree_proofs_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::Proof, signature_llmq_hash_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::Proof, signature_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::ResponseMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::ResponseMetadata, height_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::ResponseMetadata, core_chain_locked_height_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::StateTransitionBroadcastError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::StateTransitionBroadcastError, code_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::StateTransitionBroadcastError, message_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::StateTransitionBroadcastError, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest, state_transition_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetIdentityRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetIdentityRequest, id_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetIdentityRequest, prove_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetIdentityResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetIdentityResponse, identity_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetIdentityResponse, proof_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetIdentityResponse, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetDataContractRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetDataContractRequest, id_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetDataContractRequest, prove_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetDataContractResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetDataContractResponse, data_contract_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetDataContractResponse, proof_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetDataContractResponse, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetDocumentsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetDocumentsRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetDocumentsRequest, data_contract_id_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetDocumentsRequest, document_type_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetDocumentsRequest, where_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetDocumentsRequest, order_by_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetDocumentsRequest, limit_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetDocumentsRequest, prove_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetDocumentsRequest, start_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetDocumentsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetDocumentsResponse, documents_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetDocumentsResponse, proof_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetDocumentsResponse, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest, public_key_hashes_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest, prove_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse, identities_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse, proof_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest, public_key_hashes_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest, prove_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse, identity_ids_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse, proof_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest, state_transition_hash_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest, prove_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse, metadata_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse, responses_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::ConsensusParamsBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::ConsensusParamsBlock, max_bytes_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::ConsensusParamsBlock, max_gas_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::ConsensusParamsBlock, time_iota_ms_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::ConsensusParamsEvidence, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::ConsensusParamsEvidence, max_age_num_blocks_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::ConsensusParamsEvidence, max_age_duration_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::ConsensusParamsEvidence, max_bytes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetConsensusParamsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetConsensusParamsRequest, height_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetConsensusParamsRequest, prove_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetConsensusParamsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetConsensusParamsResponse, block_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetConsensusParamsResponse, evidence_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::org::dash::platform::dapi::v0::StoreTreeProofs)},
  { 9, -1, sizeof(::org::dash::platform::dapi::v0::Proof)},
  { 18, -1, sizeof(::org::dash::platform::dapi::v0::ResponseMetadata)},
  { 25, -1, sizeof(::org::dash::platform::dapi::v0::StateTransitionBroadcastError)},
  { 33, -1, sizeof(::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest)},
  { 39, -1, sizeof(::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse)},
  { 44, -1, sizeof(::org::dash::platform::dapi::v0::GetIdentityRequest)},
  { 51, -1, sizeof(::org::dash::platform::dapi::v0::GetIdentityResponse)},
  { 59, -1, sizeof(::org::dash::platform::dapi::v0::GetDataContractRequest)},
  { 66, -1, sizeof(::org::dash::platform::dapi::v0::GetDataContractResponse)},
  { 74, -1, sizeof(::org::dash::platform::dapi::v0::GetDocumentsRequest)},
  { 88, -1, sizeof(::org::dash::platform::dapi::v0::GetDocumentsResponse)},
  { 96, -1, sizeof(::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest)},
  { 103, -1, sizeof(::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse)},
  { 111, -1, sizeof(::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest)},
  { 118, -1, sizeof(::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse)},
  { 126, -1, sizeof(::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest)},
  { 133, -1, sizeof(::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse)},
  { 142, -1, sizeof(::org::dash::platform::dapi::v0::ConsensusParamsBlock)},
  { 150, -1, sizeof(::org::dash::platform::dapi::v0::ConsensusParamsEvidence)},
  { 158, -1, sizeof(::org::dash::platform::dapi::v0::GetConsensusParamsRequest)},
  { 165, -1, sizeof(::org::dash::platform::dapi::v0::GetConsensusParamsResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_StoreTreeProofs_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_Proof_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_ResponseMetadata_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_StateTransitionBroadcastError_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_BroadcastStateTransitionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_BroadcastStateTransitionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetIdentityRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetIdentityResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetDataContractRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetDataContractResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetDocumentsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetDocumentsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetIdentitiesByPublicKeyHashesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetIdentitiesByPublicKeyHashesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetIdentityIdsByPublicKeyHashesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetIdentityIdsByPublicKeyHashesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_WaitForStateTransitionResultRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_WaitForStateTransitionResultResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_ConsensusParamsBlock_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_ConsensusParamsEvidence_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetConsensusParamsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetConsensusParamsResponse_default_instance_),
};

const char descriptor_table_protodef_platform_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016platform.proto\022\031org.dash.platform.dapi"
  ".v0\"\223\001\n\017StoreTreeProofs\022\030\n\020identities_pr"
  "oof\030\001 \001(\014\022/\n\'public_key_hashes_to_identi"
  "ty_ids_proof\030\002 \001(\014\022\034\n\024data_contracts_pro"
  "of\030\003 \001(\014\022\027\n\017documents_proof\030\004 \001(\014\"\227\001\n\005Pr"
  "oof\022\027\n\017root_tree_proof\030\001 \001(\014\022E\n\021store_tr"
  "ee_proofs\030\002 \001(\0132*.org.dash.platform.dapi"
  ".v0.StoreTreeProofs\022\033\n\023signature_llmq_ha"
  "sh\030\003 \001(\014\022\021\n\tsignature\030\004 \001(\014\"D\n\020ResponseM"
  "etadata\022\016\n\006height\030\001 \001(\003\022 \n\030core_chain_lo"
  "cked_height\030\002 \001(\r\"L\n\035StateTransitionBroa"
  "dcastError\022\014\n\004code\030\001 \001(\r\022\017\n\007message\030\002 \001("
  "\t\022\014\n\004data\030\003 \001(\014\";\n\037BroadcastStateTransit"
  "ionRequest\022\030\n\020state_transition\030\001 \001(\014\"\"\n "
  "BroadcastStateTransitionResponse\"/\n\022GetI"
  "dentityRequest\022\n\n\002id\030\001 \001(\014\022\r\n\005prove\030\002 \001("
  "\010\"\227\001\n\023GetIdentityResponse\022\020\n\010identity\030\001 "
  "\001(\014\022/\n\005proof\030\002 \001(\0132 .org.dash.platform.d"
  "api.v0.Proof\022=\n\010metadata\030\003 \001(\0132+.org.das"
  "h.platform.dapi.v0.ResponseMetadata\"3\n\026G"
  "etDataContractRequest\022\n\n\002id\030\001 \001(\014\022\r\n\005pro"
  "ve\030\002 \001(\010\"\240\001\n\027GetDataContractResponse\022\025\n\r"
  "data_contract\030\001 \001(\014\022/\n\005proof\030\002 \001(\0132 .org"
  ".dash.platform.dapi.v0.Proof\022=\n\010metadata"
  "\030\003 \001(\0132+.org.dash.platform.dapi.v0.Respo"
  "nseMetadata\"\271\001\n\023GetDocumentsRequest\022\030\n\020d"
  "ata_contract_id\030\001 \001(\014\022\025\n\rdocument_type\030\002"
  " \001(\t\022\r\n\005where\030\003 \001(\014\022\020\n\010order_by\030\004 \001(\014\022\r\n"
  "\005limit\030\005 \001(\r\022\025\n\013start_after\030\006 \001(\rH\000\022\022\n\010s"
  "tart_at\030\007 \001(\rH\000\022\r\n\005prove\030\010 \001(\010B\007\n\005start\""
  "\231\001\n\024GetDocumentsResponse\022\021\n\tdocuments\030\001 "
  "\003(\014\022/\n\005proof\030\002 \001(\0132 .org.dash.platform.d"
  "api.v0.Proof\022=\n\010metadata\030\003 \001(\0132+.org.das"
  "h.platform.dapi.v0.ResponseMetadata\"Q\n%G"
  "etIdentitiesByPublicKeyHashesRequest\022\031\n\021"
  "public_key_hashes\030\001 \003(\014\022\r\n\005prove\030\002 \001(\010\"\254"
  "\001\n&GetIdentitiesByPublicKeyHashesRespons"
  "e\022\022\n\nidentities\030\001 \003(\014\022/\n\005proof\030\002 \001(\0132 .o"
  "rg.dash.platform.dapi.v0.Proof\022=\n\010metada"
  "ta\030\003 \001(\0132+.org.dash.platform.dapi.v0.Res"
  "ponseMetadata\"R\n&GetIdentityIdsByPublicK"
  "eyHashesRequest\022\031\n\021public_key_hashes\030\001 \003"
  "(\014\022\r\n\005prove\030\002 \001(\010\"\257\001\n\'GetIdentityIdsByPu"
  "blicKeyHashesResponse\022\024\n\014identity_ids\030\001 "
  "\003(\014\022/\n\005proof\030\002 \001(\0132 .org.dash.platform.d"
  "api.v0.Proof\022=\n\010metadata\030\003 \001(\0132+.org.das"
  "h.platform.dapi.v0.ResponseMetadata\"S\n#W"
  "aitForStateTransitionResultRequest\022\035\n\025st"
  "ate_transition_hash\030\001 \001(\014\022\r\n\005prove\030\002 \001(\010"
  "\"\360\001\n$WaitForStateTransitionResultRespons"
  "e\022I\n\005error\030\001 \001(\01328.org.dash.platform.dap"
  "i.v0.StateTransitionBroadcastErrorH\000\0221\n\005"
  "proof\030\002 \001(\0132 .org.dash.platform.dapi.v0."
  "ProofH\000\022=\n\010metadata\030\003 \001(\0132+.org.dash.pla"
  "tform.dapi.v0.ResponseMetadataB\013\n\trespon"
  "ses\"P\n\024ConsensusParamsBlock\022\021\n\tmax_bytes"
  "\030\001 \001(\t\022\017\n\007max_gas\030\002 \001(\t\022\024\n\014time_iota_ms\030"
  "\003 \001(\t\"b\n\027ConsensusParamsEvidence\022\032\n\022max_"
  "age_num_blocks\030\001 \001(\t\022\030\n\020max_age_duration"
  "\030\002 \001(\t\022\021\n\tmax_bytes\030\003 \001(\t\":\n\031GetConsensu"
  "sParamsRequest\022\016\n\006height\030\001 \001(\003\022\r\n\005prove\030"
  "\002 \001(\010\"\242\001\n\032GetConsensusParamsResponse\022>\n\005"
  "block\030\001 \001(\0132/.org.dash.platform.dapi.v0."
  "ConsensusParamsBlock\022D\n\010evidence\030\002 \001(\01322"
  ".org.dash.platform.dapi.v0.ConsensusPara"
  "msEvidence2\362\010\n\010Platform\022\223\001\n\030broadcastSta"
  "teTransition\022:.org.dash.platform.dapi.v0"
  ".BroadcastStateTransitionRequest\032;.org.d"
  "ash.platform.dapi.v0.BroadcastStateTrans"
  "itionResponse\022l\n\013getIdentity\022-.org.dash."
  "platform.dapi.v0.GetIdentityRequest\032..or"
  "g.dash.platform.dapi.v0.GetIdentityRespo"
  "nse\022x\n\017getDataContract\0221.org.dash.platfo"
  "rm.dapi.v0.GetDataContractRequest\0322.org."
  "dash.platform.dapi.v0.GetDataContractRes"
  "ponse\022o\n\014getDocuments\022..org.dash.platfor"
  "m.dapi.v0.GetDocumentsRequest\032/.org.dash"
  ".platform.dapi.v0.GetDocumentsResponse\022\245"
  "\001\n\036getIdentitiesByPublicKeyHashes\022@.org."
  "dash.platform.dapi.v0.GetIdentitiesByPub"
  "licKeyHashesRequest\032A.org.dash.platform."
  "dapi.v0.GetIdentitiesByPublicKeyHashesRe"
  "sponse\022\250\001\n\037getIdentityIdsByPublicKeyHash"
  "es\022A.org.dash.platform.dapi.v0.GetIdenti"
  "tyIdsByPublicKeyHashesRequest\032B.org.dash"
  ".platform.dapi.v0.GetIdentityIdsByPublic"
  "KeyHashesResponse\022\237\001\n\034waitForStateTransi"
  "tionResult\022>.org.dash.platform.dapi.v0.W"
  "aitForStateTransitionResultRequest\032\?.org"
  ".dash.platform.dapi.v0.WaitForStateTrans"
  "itionResultResponse\022\201\001\n\022getConsensusPara"
  "ms\0224.org.dash.platform.dapi.v0.GetConsen"
  "susParamsRequest\0325.org.dash.platform.dap"
  "i.v0.GetConsensusParamsResponseb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_platform_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_platform_2eproto = {
  false, false, 3759, descriptor_table_protodef_platform_2eproto, "platform.proto", 
  &descriptor_table_platform_2eproto_once, nullptr, 0, 22,
  schemas, file_default_instances, TableStruct_platform_2eproto::offsets,
  file_level_metadata_platform_2eproto, file_level_enum_descriptors_platform_2eproto, file_level_service_descriptors_platform_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_platform_2eproto_getter() {
  return &descriptor_table_platform_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_platform_2eproto(&descriptor_table_platform_2eproto);
namespace org {
namespace dash {
namespace platform {
namespace dapi {
namespace v0 {

// ===================================================================

class StoreTreeProofs::_Internal {
 public:
};

StoreTreeProofs::StoreTreeProofs(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.StoreTreeProofs)
}
StoreTreeProofs::StoreTreeProofs(const StoreTreeProofs& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  identities_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identities_proof().empty()) {
    identities_proof_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_identities_proof(), 
      GetArenaForAllocation());
  }
  public_key_hashes_to_identity_ids_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_public_key_hashes_to_identity_ids_proof().empty()) {
    public_key_hashes_to_identity_ids_proof_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_public_key_hashes_to_identity_ids_proof(), 
      GetArenaForAllocation());
  }
  data_contracts_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data_contracts_proof().empty()) {
    data_contracts_proof_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data_contracts_proof(), 
      GetArenaForAllocation());
  }
  documents_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_documents_proof().empty()) {
    documents_proof_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_documents_proof(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.StoreTreeProofs)
}

void StoreTreeProofs::SharedCtor() {
identities_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
public_key_hashes_to_identity_ids_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
data_contracts_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
documents_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StoreTreeProofs::~StoreTreeProofs() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.StoreTreeProofs)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StoreTreeProofs::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  identities_proof_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  public_key_hashes_to_identity_ids_proof_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_contracts_proof_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  documents_proof_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StoreTreeProofs::ArenaDtor(void* object) {
  StoreTreeProofs* _this = reinterpret_cast< StoreTreeProofs* >(object);
  (void)_this;
}
void StoreTreeProofs::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StoreTreeProofs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StoreTreeProofs::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.StoreTreeProofs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identities_proof_.ClearToEmpty();
  public_key_hashes_to_identity_ids_proof_.ClearToEmpty();
  data_contracts_proof_.ClearToEmpty();
  documents_proof_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StoreTreeProofs::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes identities_proof = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_identities_proof();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes public_key_hashes_to_identity_ids_proof = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_public_key_hashes_to_identity_ids_proof();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data_contracts_proof = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_data_contracts_proof();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes documents_proof = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_documents_proof();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StoreTreeProofs::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.StoreTreeProofs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes identities_proof = 1;
  if (!this->identities_proof().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_identities_proof(), target);
  }

  // bytes public_key_hashes_to_identity_ids_proof = 2;
  if (!this->public_key_hashes_to_identity_ids_proof().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_public_key_hashes_to_identity_ids_proof(), target);
  }

  // bytes data_contracts_proof = 3;
  if (!this->data_contracts_proof().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_data_contracts_proof(), target);
  }

  // bytes documents_proof = 4;
  if (!this->documents_proof().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_documents_proof(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.StoreTreeProofs)
  return target;
}

size_t StoreTreeProofs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.StoreTreeProofs)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes identities_proof = 1;
  if (!this->identities_proof().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_identities_proof());
  }

  // bytes public_key_hashes_to_identity_ids_proof = 2;
  if (!this->public_key_hashes_to_identity_ids_proof().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_public_key_hashes_to_identity_ids_proof());
  }

  // bytes data_contracts_proof = 3;
  if (!this->data_contracts_proof().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data_contracts_proof());
  }

  // bytes documents_proof = 4;
  if (!this->documents_proof().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_documents_proof());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StoreTreeProofs::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.StoreTreeProofs)
  GOOGLE_DCHECK_NE(&from, this);
  const StoreTreeProofs* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StoreTreeProofs>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.StoreTreeProofs)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.StoreTreeProofs)
    MergeFrom(*source);
  }
}

void StoreTreeProofs::MergeFrom(const StoreTreeProofs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.StoreTreeProofs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.identities_proof().empty()) {
    _internal_set_identities_proof(from._internal_identities_proof());
  }
  if (!from.public_key_hashes_to_identity_ids_proof().empty()) {
    _internal_set_public_key_hashes_to_identity_ids_proof(from._internal_public_key_hashes_to_identity_ids_proof());
  }
  if (!from.data_contracts_proof().empty()) {
    _internal_set_data_contracts_proof(from._internal_data_contracts_proof());
  }
  if (!from.documents_proof().empty()) {
    _internal_set_documents_proof(from._internal_documents_proof());
  }
}

void StoreTreeProofs::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.StoreTreeProofs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreTreeProofs::CopyFrom(const StoreTreeProofs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.StoreTreeProofs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreTreeProofs::IsInitialized() const {
  return true;
}

void StoreTreeProofs::InternalSwap(StoreTreeProofs* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &identities_proof_, GetArenaForAllocation(),
      &other->identities_proof_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &public_key_hashes_to_identity_ids_proof_, GetArenaForAllocation(),
      &other->public_key_hashes_to_identity_ids_proof_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_contracts_proof_, GetArenaForAllocation(),
      &other->data_contracts_proof_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &documents_proof_, GetArenaForAllocation(),
      &other->documents_proof_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StoreTreeProofs::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_platform_2eproto_getter, &descriptor_table_platform_2eproto_once,
      file_level_metadata_platform_2eproto[0]);
}

// ===================================================================

class Proof::_Internal {
 public:
  static const ::org::dash::platform::dapi::v0::StoreTreeProofs& store_tree_proofs(const Proof* msg);
};

const ::org::dash::platform::dapi::v0::StoreTreeProofs&
Proof::_Internal::store_tree_proofs(const Proof* msg) {
  return *msg->store_tree_proofs_;
}
Proof::Proof(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.Proof)
}
Proof::Proof(const Proof& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  root_tree_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_root_tree_proof().empty()) {
    root_tree_proof_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_root_tree_proof(), 
      GetArenaForAllocation());
  }
  signature_llmq_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_signature_llmq_hash().empty()) {
    signature_llmq_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_signature_llmq_hash(), 
      GetArenaForAllocation());
  }
  signature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_signature().empty()) {
    signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_signature(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_store_tree_proofs()) {
    store_tree_proofs_ = new ::org::dash::platform::dapi::v0::StoreTreeProofs(*from.store_tree_proofs_);
  } else {
    store_tree_proofs_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.Proof)
}

void Proof::SharedCtor() {
root_tree_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
signature_llmq_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
signature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
store_tree_proofs_ = nullptr;
}

Proof::~Proof() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.Proof)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Proof::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  root_tree_proof_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  signature_llmq_hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete store_tree_proofs_;
}

void Proof::ArenaDtor(void* object) {
  Proof* _this = reinterpret_cast< Proof* >(object);
  (void)_this;
}
void Proof::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Proof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Proof::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.Proof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  root_tree_proof_.ClearToEmpty();
  signature_llmq_hash_.ClearToEmpty();
  signature_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && store_tree_proofs_ != nullptr) {
    delete store_tree_proofs_;
  }
  store_tree_proofs_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Proof::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes root_tree_proof = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_root_tree_proof();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .org.dash.platform.dapi.v0.StoreTreeProofs store_tree_proofs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_store_tree_proofs(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes signature_llmq_hash = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_signature_llmq_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes signature = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_signature();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Proof::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.Proof)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes root_tree_proof = 1;
  if (!this->root_tree_proof().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_root_tree_proof(), target);
  }

  // .org.dash.platform.dapi.v0.StoreTreeProofs store_tree_proofs = 2;
  if (this->has_store_tree_proofs()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::store_tree_proofs(this), target, stream);
  }

  // bytes signature_llmq_hash = 3;
  if (!this->signature_llmq_hash().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_signature_llmq_hash(), target);
  }

  // bytes signature = 4;
  if (!this->signature().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_signature(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.Proof)
  return target;
}

size_t Proof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.Proof)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes root_tree_proof = 1;
  if (!this->root_tree_proof().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_root_tree_proof());
  }

  // bytes signature_llmq_hash = 3;
  if (!this->signature_llmq_hash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_signature_llmq_hash());
  }

  // bytes signature = 4;
  if (!this->signature().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_signature());
  }

  // .org.dash.platform.dapi.v0.StoreTreeProofs store_tree_proofs = 2;
  if (this->has_store_tree_proofs()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *store_tree_proofs_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proof::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.Proof)
  GOOGLE_DCHECK_NE(&from, this);
  const Proof* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Proof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.Proof)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.Proof)
    MergeFrom(*source);
  }
}

void Proof::MergeFrom(const Proof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.Proof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.root_tree_proof().empty()) {
    _internal_set_root_tree_proof(from._internal_root_tree_proof());
  }
  if (!from.signature_llmq_hash().empty()) {
    _internal_set_signature_llmq_hash(from._internal_signature_llmq_hash());
  }
  if (!from.signature().empty()) {
    _internal_set_signature(from._internal_signature());
  }
  if (from.has_store_tree_proofs()) {
    _internal_mutable_store_tree_proofs()->::org::dash::platform::dapi::v0::StoreTreeProofs::MergeFrom(from._internal_store_tree_proofs());
  }
}

void Proof::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.Proof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proof::CopyFrom(const Proof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.Proof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proof::IsInitialized() const {
  return true;
}

void Proof::InternalSwap(Proof* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &root_tree_proof_, GetArenaForAllocation(),
      &other->root_tree_proof_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &signature_llmq_hash_, GetArenaForAllocation(),
      &other->signature_llmq_hash_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &signature_, GetArenaForAllocation(),
      &other->signature_, other->GetArenaForAllocation()
  );
  swap(store_tree_proofs_, other->store_tree_proofs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Proof::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_platform_2eproto_getter, &descriptor_table_platform_2eproto_once,
      file_level_metadata_platform_2eproto[1]);
}

// ===================================================================

class ResponseMetadata::_Internal {
 public:
};

ResponseMetadata::ResponseMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.ResponseMetadata)
}
ResponseMetadata::ResponseMetadata(const ResponseMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&height_, &from.height_,
    static_cast<size_t>(reinterpret_cast<char*>(&core_chain_locked_height_) -
    reinterpret_cast<char*>(&height_)) + sizeof(core_chain_locked_height_));
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.ResponseMetadata)
}

void ResponseMetadata::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&height_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&core_chain_locked_height_) -
    reinterpret_cast<char*>(&height_)) + sizeof(core_chain_locked_height_));
}

ResponseMetadata::~ResponseMetadata() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.ResponseMetadata)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResponseMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResponseMetadata::ArenaDtor(void* object) {
  ResponseMetadata* _this = reinterpret_cast< ResponseMetadata* >(object);
  (void)_this;
}
void ResponseMetadata::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResponseMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResponseMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.ResponseMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&core_chain_locked_height_) -
      reinterpret_cast<char*>(&height_)) + sizeof(core_chain_locked_height_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseMetadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 height = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 core_chain_locked_height = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          core_chain_locked_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResponseMetadata::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.ResponseMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 height = 1;
  if (this->height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_height(), target);
  }

  // uint32 core_chain_locked_height = 2;
  if (this->core_chain_locked_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_core_chain_locked_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.ResponseMetadata)
  return target;
}

size_t ResponseMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.ResponseMetadata)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 height = 1;
  if (this->height() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_height());
  }

  // uint32 core_chain_locked_height = 2;
  if (this->core_chain_locked_height() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_core_chain_locked_height());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResponseMetadata::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.ResponseMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseMetadata* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResponseMetadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.ResponseMetadata)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.ResponseMetadata)
    MergeFrom(*source);
  }
}

void ResponseMetadata::MergeFrom(const ResponseMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.ResponseMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.height() != 0) {
    _internal_set_height(from._internal_height());
  }
  if (from.core_chain_locked_height() != 0) {
    _internal_set_core_chain_locked_height(from._internal_core_chain_locked_height());
  }
}

void ResponseMetadata::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.ResponseMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseMetadata::CopyFrom(const ResponseMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.ResponseMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseMetadata::IsInitialized() const {
  return true;
}

void ResponseMetadata::InternalSwap(ResponseMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResponseMetadata, core_chain_locked_height_)
      + sizeof(ResponseMetadata::core_chain_locked_height_)
      - PROTOBUF_FIELD_OFFSET(ResponseMetadata, height_)>(
          reinterpret_cast<char*>(&height_),
          reinterpret_cast<char*>(&other->height_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseMetadata::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_platform_2eproto_getter, &descriptor_table_platform_2eproto_once,
      file_level_metadata_platform_2eproto[2]);
}

// ===================================================================

class StateTransitionBroadcastError::_Internal {
 public:
};

StateTransitionBroadcastError::StateTransitionBroadcastError(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.StateTransitionBroadcastError)
}
StateTransitionBroadcastError::StateTransitionBroadcastError(const StateTransitionBroadcastError& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.StateTransitionBroadcastError)
}

void StateTransitionBroadcastError::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
code_ = 0u;
}

StateTransitionBroadcastError::~StateTransitionBroadcastError() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.StateTransitionBroadcastError)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StateTransitionBroadcastError::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StateTransitionBroadcastError::ArenaDtor(void* object) {
  StateTransitionBroadcastError* _this = reinterpret_cast< StateTransitionBroadcastError* >(object);
  (void)_this;
}
void StateTransitionBroadcastError::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StateTransitionBroadcastError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StateTransitionBroadcastError::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.StateTransitionBroadcastError)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  data_.ClearToEmpty();
  code_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StateTransitionBroadcastError::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "org.dash.platform.dapi.v0.StateTransitionBroadcastError.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StateTransitionBroadcastError::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.StateTransitionBroadcastError)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_code(), target);
  }

  // string message = 2;
  if (!this->message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "org.dash.platform.dapi.v0.StateTransitionBroadcastError.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // bytes data = 3;
  if (!this->data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.StateTransitionBroadcastError)
  return target;
}

size_t StateTransitionBroadcastError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.StateTransitionBroadcastError)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // bytes data = 3;
  if (!this->data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // uint32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StateTransitionBroadcastError::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.StateTransitionBroadcastError)
  GOOGLE_DCHECK_NE(&from, this);
  const StateTransitionBroadcastError* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StateTransitionBroadcastError>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.StateTransitionBroadcastError)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.StateTransitionBroadcastError)
    MergeFrom(*source);
  }
}

void StateTransitionBroadcastError::MergeFrom(const StateTransitionBroadcastError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.StateTransitionBroadcastError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (!from.data().empty()) {
    _internal_set_data(from._internal_data());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void StateTransitionBroadcastError::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.StateTransitionBroadcastError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateTransitionBroadcastError::CopyFrom(const StateTransitionBroadcastError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.StateTransitionBroadcastError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateTransitionBroadcastError::IsInitialized() const {
  return true;
}

void StateTransitionBroadcastError::InternalSwap(StateTransitionBroadcastError* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, GetArenaForAllocation(),
      &other->message_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, GetArenaForAllocation(),
      &other->data_, other->GetArenaForAllocation()
  );
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StateTransitionBroadcastError::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_platform_2eproto_getter, &descriptor_table_platform_2eproto_once,
      file_level_metadata_platform_2eproto[3]);
}

// ===================================================================

class BroadcastStateTransitionRequest::_Internal {
 public:
};

BroadcastStateTransitionRequest::BroadcastStateTransitionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.BroadcastStateTransitionRequest)
}
BroadcastStateTransitionRequest::BroadcastStateTransitionRequest(const BroadcastStateTransitionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  state_transition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_state_transition().empty()) {
    state_transition_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_state_transition(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.BroadcastStateTransitionRequest)
}

void BroadcastStateTransitionRequest::SharedCtor() {
state_transition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

BroadcastStateTransitionRequest::~BroadcastStateTransitionRequest() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.BroadcastStateTransitionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BroadcastStateTransitionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  state_transition_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BroadcastStateTransitionRequest::ArenaDtor(void* object) {
  BroadcastStateTransitionRequest* _this = reinterpret_cast< BroadcastStateTransitionRequest* >(object);
  (void)_this;
}
void BroadcastStateTransitionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BroadcastStateTransitionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BroadcastStateTransitionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.BroadcastStateTransitionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_transition_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BroadcastStateTransitionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes state_transition = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_state_transition();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BroadcastStateTransitionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.BroadcastStateTransitionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes state_transition = 1;
  if (!this->state_transition().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_state_transition(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.BroadcastStateTransitionRequest)
  return target;
}

size_t BroadcastStateTransitionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.BroadcastStateTransitionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes state_transition = 1;
  if (!this->state_transition().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_state_transition());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BroadcastStateTransitionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.BroadcastStateTransitionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BroadcastStateTransitionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BroadcastStateTransitionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.BroadcastStateTransitionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.BroadcastStateTransitionRequest)
    MergeFrom(*source);
  }
}

void BroadcastStateTransitionRequest::MergeFrom(const BroadcastStateTransitionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.BroadcastStateTransitionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.state_transition().empty()) {
    _internal_set_state_transition(from._internal_state_transition());
  }
}

void BroadcastStateTransitionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.BroadcastStateTransitionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BroadcastStateTransitionRequest::CopyFrom(const BroadcastStateTransitionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.BroadcastStateTransitionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadcastStateTransitionRequest::IsInitialized() const {
  return true;
}

void BroadcastStateTransitionRequest::InternalSwap(BroadcastStateTransitionRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &state_transition_, GetArenaForAllocation(),
      &other->state_transition_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata BroadcastStateTransitionRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_platform_2eproto_getter, &descriptor_table_platform_2eproto_once,
      file_level_metadata_platform_2eproto[4]);
}

// ===================================================================

class BroadcastStateTransitionResponse::_Internal {
 public:
};

BroadcastStateTransitionResponse::BroadcastStateTransitionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.BroadcastStateTransitionResponse)
}
BroadcastStateTransitionResponse::BroadcastStateTransitionResponse(const BroadcastStateTransitionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.BroadcastStateTransitionResponse)
}

void BroadcastStateTransitionResponse::SharedCtor() {
}

BroadcastStateTransitionResponse::~BroadcastStateTransitionResponse() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.BroadcastStateTransitionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BroadcastStateTransitionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BroadcastStateTransitionResponse::ArenaDtor(void* object) {
  BroadcastStateTransitionResponse* _this = reinterpret_cast< BroadcastStateTransitionResponse* >(object);
  (void)_this;
}
void BroadcastStateTransitionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BroadcastStateTransitionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BroadcastStateTransitionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.BroadcastStateTransitionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BroadcastStateTransitionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BroadcastStateTransitionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.BroadcastStateTransitionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.BroadcastStateTransitionResponse)
  return target;
}

size_t BroadcastStateTransitionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.BroadcastStateTransitionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BroadcastStateTransitionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.BroadcastStateTransitionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BroadcastStateTransitionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BroadcastStateTransitionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.BroadcastStateTransitionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.BroadcastStateTransitionResponse)
    MergeFrom(*source);
  }
}

void BroadcastStateTransitionResponse::MergeFrom(const BroadcastStateTransitionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.BroadcastStateTransitionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BroadcastStateTransitionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.BroadcastStateTransitionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BroadcastStateTransitionResponse::CopyFrom(const BroadcastStateTransitionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.BroadcastStateTransitionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadcastStateTransitionResponse::IsInitialized() const {
  return true;
}

void BroadcastStateTransitionResponse::InternalSwap(BroadcastStateTransitionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BroadcastStateTransitionResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_platform_2eproto_getter, &descriptor_table_platform_2eproto_once,
      file_level_metadata_platform_2eproto[5]);
}

// ===================================================================

class GetIdentityRequest::_Internal {
 public:
};

GetIdentityRequest::GetIdentityRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetIdentityRequest)
}
GetIdentityRequest::GetIdentityRequest(const GetIdentityRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  prove_ = from.prove_;
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetIdentityRequest)
}

void GetIdentityRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
prove_ = false;
}

GetIdentityRequest::~GetIdentityRequest() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetIdentityRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdentityRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetIdentityRequest::ArenaDtor(void* object) {
  GetIdentityRequest* _this = reinterpret_cast< GetIdentityRequest* >(object);
  (void)_this;
}
void GetIdentityRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdentityRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetIdentityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetIdentityRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  prove_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdentityRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool prove = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          prove_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdentityRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetIdentityRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes id = 1;
  if (!this->id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_id(), target);
  }

  // bool prove = 2;
  if (this->prove() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_prove(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetIdentityRequest)
  return target;
}

size_t GetIdentityRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetIdentityRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes id = 1;
  if (!this->id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_id());
  }

  // bool prove = 2;
  if (this->prove() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdentityRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetIdentityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdentityRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdentityRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetIdentityRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetIdentityRequest)
    MergeFrom(*source);
  }
}

void GetIdentityRequest::MergeFrom(const GetIdentityRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetIdentityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (from.prove() != 0) {
    _internal_set_prove(from._internal_prove());
  }
}

void GetIdentityRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetIdentityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdentityRequest::CopyFrom(const GetIdentityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetIdentityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdentityRequest::IsInitialized() const {
  return true;
}

void GetIdentityRequest::InternalSwap(GetIdentityRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
  swap(prove_, other->prove_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdentityRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_platform_2eproto_getter, &descriptor_table_platform_2eproto_once,
      file_level_metadata_platform_2eproto[6]);
}

// ===================================================================

class GetIdentityResponse::_Internal {
 public:
  static const ::org::dash::platform::dapi::v0::Proof& proof(const GetIdentityResponse* msg);
  static const ::org::dash::platform::dapi::v0::ResponseMetadata& metadata(const GetIdentityResponse* msg);
};

const ::org::dash::platform::dapi::v0::Proof&
GetIdentityResponse::_Internal::proof(const GetIdentityResponse* msg) {
  return *msg->proof_;
}
const ::org::dash::platform::dapi::v0::ResponseMetadata&
GetIdentityResponse::_Internal::metadata(const GetIdentityResponse* msg) {
  return *msg->metadata_;
}
GetIdentityResponse::GetIdentityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetIdentityResponse)
}
GetIdentityResponse::GetIdentityResponse(const GetIdentityResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  identity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identity().empty()) {
    identity_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_identity(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_proof()) {
    proof_ = new ::org::dash::platform::dapi::v0::Proof(*from.proof_);
  } else {
    proof_ = nullptr;
  }
  if (from._internal_has_metadata()) {
    metadata_ = new ::org::dash::platform::dapi::v0::ResponseMetadata(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetIdentityResponse)
}

void GetIdentityResponse::SharedCtor() {
identity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&proof_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&metadata_) -
    reinterpret_cast<char*>(&proof_)) + sizeof(metadata_));
}

GetIdentityResponse::~GetIdentityResponse() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetIdentityResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdentityResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  identity_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete proof_;
  if (this != internal_default_instance()) delete metadata_;
}

void GetIdentityResponse::ArenaDtor(void* object) {
  GetIdentityResponse* _this = reinterpret_cast< GetIdentityResponse* >(object);
  (void)_this;
}
void GetIdentityResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdentityResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetIdentityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetIdentityResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identity_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && proof_ != nullptr) {
    delete proof_;
  }
  proof_ = nullptr;
  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdentityResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes identity = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_identity();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .org.dash.platform.dapi.v0.Proof proof = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_proof(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .org.dash.platform.dapi.v0.ResponseMetadata metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdentityResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetIdentityResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes identity = 1;
  if (!this->identity().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_identity(), target);
  }

  // .org.dash.platform.dapi.v0.Proof proof = 2;
  if (this->has_proof()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::proof(this), target, stream);
  }

  // .org.dash.platform.dapi.v0.ResponseMetadata metadata = 3;
  if (this->has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::metadata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetIdentityResponse)
  return target;
}

size_t GetIdentityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetIdentityResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes identity = 1;
  if (!this->identity().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_identity());
  }

  // .org.dash.platform.dapi.v0.Proof proof = 2;
  if (this->has_proof()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *proof_);
  }

  // .org.dash.platform.dapi.v0.ResponseMetadata metadata = 3;
  if (this->has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdentityResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetIdentityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdentityResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdentityResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetIdentityResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetIdentityResponse)
    MergeFrom(*source);
  }
}

void GetIdentityResponse::MergeFrom(const GetIdentityResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetIdentityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.identity().empty()) {
    _internal_set_identity(from._internal_identity());
  }
  if (from.has_proof()) {
    _internal_mutable_proof()->::org::dash::platform::dapi::v0::Proof::MergeFrom(from._internal_proof());
  }
  if (from.has_metadata()) {
    _internal_mutable_metadata()->::org::dash::platform::dapi::v0::ResponseMetadata::MergeFrom(from._internal_metadata());
  }
}

void GetIdentityResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetIdentityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdentityResponse::CopyFrom(const GetIdentityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetIdentityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdentityResponse::IsInitialized() const {
  return true;
}

void GetIdentityResponse::InternalSwap(GetIdentityResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &identity_, GetArenaForAllocation(),
      &other->identity_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetIdentityResponse, metadata_)
      + sizeof(GetIdentityResponse::metadata_)
      - PROTOBUF_FIELD_OFFSET(GetIdentityResponse, proof_)>(
          reinterpret_cast<char*>(&proof_),
          reinterpret_cast<char*>(&other->proof_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdentityResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_platform_2eproto_getter, &descriptor_table_platform_2eproto_once,
      file_level_metadata_platform_2eproto[7]);
}

// ===================================================================

class GetDataContractRequest::_Internal {
 public:
};

GetDataContractRequest::GetDataContractRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetDataContractRequest)
}
GetDataContractRequest::GetDataContractRequest(const GetDataContractRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  prove_ = from.prove_;
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetDataContractRequest)
}

void GetDataContractRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
prove_ = false;
}

GetDataContractRequest::~GetDataContractRequest() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetDataContractRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetDataContractRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetDataContractRequest::ArenaDtor(void* object) {
  GetDataContractRequest* _this = reinterpret_cast< GetDataContractRequest* >(object);
  (void)_this;
}
void GetDataContractRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetDataContractRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetDataContractRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetDataContractRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  prove_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDataContractRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool prove = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          prove_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetDataContractRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetDataContractRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes id = 1;
  if (!this->id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_id(), target);
  }

  // bool prove = 2;
  if (this->prove() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_prove(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetDataContractRequest)
  return target;
}

size_t GetDataContractRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetDataContractRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes id = 1;
  if (!this->id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_id());
  }

  // bool prove = 2;
  if (this->prove() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDataContractRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetDataContractRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDataContractRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetDataContractRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetDataContractRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetDataContractRequest)
    MergeFrom(*source);
  }
}

void GetDataContractRequest::MergeFrom(const GetDataContractRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetDataContractRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (from.prove() != 0) {
    _internal_set_prove(from._internal_prove());
  }
}

void GetDataContractRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetDataContractRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDataContractRequest::CopyFrom(const GetDataContractRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetDataContractRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDataContractRequest::IsInitialized() const {
  return true;
}

void GetDataContractRequest::InternalSwap(GetDataContractRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
  swap(prove_, other->prove_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDataContractRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_platform_2eproto_getter, &descriptor_table_platform_2eproto_once,
      file_level_metadata_platform_2eproto[8]);
}

// ===================================================================

class GetDataContractResponse::_Internal {
 public:
  static const ::org::dash::platform::dapi::v0::Proof& proof(const GetDataContractResponse* msg);
  static const ::org::dash::platform::dapi::v0::ResponseMetadata& metadata(const GetDataContractResponse* msg);
};

const ::org::dash::platform::dapi::v0::Proof&
GetDataContractResponse::_Internal::proof(const GetDataContractResponse* msg) {
  return *msg->proof_;
}
const ::org::dash::platform::dapi::v0::ResponseMetadata&
GetDataContractResponse::_Internal::metadata(const GetDataContractResponse* msg) {
  return *msg->metadata_;
}
GetDataContractResponse::GetDataContractResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetDataContractResponse)
}
GetDataContractResponse::GetDataContractResponse(const GetDataContractResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_contract_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data_contract().empty()) {
    data_contract_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data_contract(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_proof()) {
    proof_ = new ::org::dash::platform::dapi::v0::Proof(*from.proof_);
  } else {
    proof_ = nullptr;
  }
  if (from._internal_has_metadata()) {
    metadata_ = new ::org::dash::platform::dapi::v0::ResponseMetadata(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetDataContractResponse)
}

void GetDataContractResponse::SharedCtor() {
data_contract_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&proof_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&metadata_) -
    reinterpret_cast<char*>(&proof_)) + sizeof(metadata_));
}

GetDataContractResponse::~GetDataContractResponse() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetDataContractResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetDataContractResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  data_contract_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete proof_;
  if (this != internal_default_instance()) delete metadata_;
}

void GetDataContractResponse::ArenaDtor(void* object) {
  GetDataContractResponse* _this = reinterpret_cast< GetDataContractResponse* >(object);
  (void)_this;
}
void GetDataContractResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetDataContractResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetDataContractResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetDataContractResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_contract_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && proof_ != nullptr) {
    delete proof_;
  }
  proof_ = nullptr;
  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDataContractResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes data_contract = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_data_contract();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .org.dash.platform.dapi.v0.Proof proof = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_proof(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .org.dash.platform.dapi.v0.ResponseMetadata metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetDataContractResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetDataContractResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data_contract = 1;
  if (!this->data_contract().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_data_contract(), target);
  }

  // .org.dash.platform.dapi.v0.Proof proof = 2;
  if (this->has_proof()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::proof(this), target, stream);
  }

  // .org.dash.platform.dapi.v0.ResponseMetadata metadata = 3;
  if (this->has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::metadata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetDataContractResponse)
  return target;
}

size_t GetDataContractResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetDataContractResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data_contract = 1;
  if (!this->data_contract().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data_contract());
  }

  // .org.dash.platform.dapi.v0.Proof proof = 2;
  if (this->has_proof()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *proof_);
  }

  // .org.dash.platform.dapi.v0.ResponseMetadata metadata = 3;
  if (this->has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDataContractResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetDataContractResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDataContractResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetDataContractResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetDataContractResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetDataContractResponse)
    MergeFrom(*source);
  }
}

void GetDataContractResponse::MergeFrom(const GetDataContractResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetDataContractResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.data_contract().empty()) {
    _internal_set_data_contract(from._internal_data_contract());
  }
  if (from.has_proof()) {
    _internal_mutable_proof()->::org::dash::platform::dapi::v0::Proof::MergeFrom(from._internal_proof());
  }
  if (from.has_metadata()) {
    _internal_mutable_metadata()->::org::dash::platform::dapi::v0::ResponseMetadata::MergeFrom(from._internal_metadata());
  }
}

void GetDataContractResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetDataContractResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDataContractResponse::CopyFrom(const GetDataContractResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetDataContractResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDataContractResponse::IsInitialized() const {
  return true;
}

void GetDataContractResponse::InternalSwap(GetDataContractResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_contract_, GetArenaForAllocation(),
      &other->data_contract_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetDataContractResponse, metadata_)
      + sizeof(GetDataContractResponse::metadata_)
      - PROTOBUF_FIELD_OFFSET(GetDataContractResponse, proof_)>(
          reinterpret_cast<char*>(&proof_),
          reinterpret_cast<char*>(&other->proof_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDataContractResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_platform_2eproto_getter, &descriptor_table_platform_2eproto_once,
      file_level_metadata_platform_2eproto[9]);
}

// ===================================================================

class GetDocumentsRequest::_Internal {
 public:
};

GetDocumentsRequest::GetDocumentsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetDocumentsRequest)
}
GetDocumentsRequest::GetDocumentsRequest(const GetDocumentsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_contract_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data_contract_id().empty()) {
    data_contract_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data_contract_id(), 
      GetArenaForAllocation());
  }
  document_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_document_type().empty()) {
    document_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_document_type(), 
      GetArenaForAllocation());
  }
  where_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_where().empty()) {
    where_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_where(), 
      GetArenaForAllocation());
  }
  order_by_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_order_by().empty()) {
    order_by_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_order_by(), 
      GetArenaForAllocation());
  }
  ::memcpy(&limit_, &from.limit_,
    static_cast<size_t>(reinterpret_cast<char*>(&prove_) -
    reinterpret_cast<char*>(&limit_)) + sizeof(prove_));
  clear_has_start();
  switch (from.start_case()) {
    case kStartAfter: {
      _internal_set_start_after(from._internal_start_after());
      break;
    }
    case kStartAt: {
      _internal_set_start_at(from._internal_start_at());
      break;
    }
    case START_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetDocumentsRequest)
}

void GetDocumentsRequest::SharedCtor() {
data_contract_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
document_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
where_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
order_by_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&limit_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&prove_) -
    reinterpret_cast<char*>(&limit_)) + sizeof(prove_));
clear_has_start();
}

GetDocumentsRequest::~GetDocumentsRequest() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetDocumentsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetDocumentsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  data_contract_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  document_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  where_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_by_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_start()) {
    clear_start();
  }
}

void GetDocumentsRequest::ArenaDtor(void* object) {
  GetDocumentsRequest* _this = reinterpret_cast< GetDocumentsRequest* >(object);
  (void)_this;
}
void GetDocumentsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetDocumentsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetDocumentsRequest::clear_start() {
// @@protoc_insertion_point(one_of_clear_start:org.dash.platform.dapi.v0.GetDocumentsRequest)
  switch (start_case()) {
    case kStartAfter: {
      // No need to clear
      break;
    }
    case kStartAt: {
      // No need to clear
      break;
    }
    case START_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = START_NOT_SET;
}


void GetDocumentsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetDocumentsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_contract_id_.ClearToEmpty();
  document_type_.ClearToEmpty();
  where_.ClearToEmpty();
  order_by_.ClearToEmpty();
  ::memset(&limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prove_) -
      reinterpret_cast<char*>(&limit_)) + sizeof(prove_));
  clear_start();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDocumentsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes data_contract_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_data_contract_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string document_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_document_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "org.dash.platform.dapi.v0.GetDocumentsRequest.document_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes where = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_where();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes order_by = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_order_by();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 limit = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 start_after = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _internal_set_start_after(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 start_at = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _internal_set_start_at(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool prove = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          prove_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetDocumentsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetDocumentsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data_contract_id = 1;
  if (!this->data_contract_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_data_contract_id(), target);
  }

  // string document_type = 2;
  if (!this->document_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_document_type().data(), static_cast<int>(this->_internal_document_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "org.dash.platform.dapi.v0.GetDocumentsRequest.document_type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_document_type(), target);
  }

  // bytes where = 3;
  if (!this->where().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_where(), target);
  }

  // bytes order_by = 4;
  if (!this->order_by().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_order_by(), target);
  }

  // uint32 limit = 5;
  if (this->limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_limit(), target);
  }

  // uint32 start_after = 6;
  if (_internal_has_start_after()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_start_after(), target);
  }

  // uint32 start_at = 7;
  if (_internal_has_start_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_start_at(), target);
  }

  // bool prove = 8;
  if (this->prove() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_prove(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetDocumentsRequest)
  return target;
}

size_t GetDocumentsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetDocumentsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data_contract_id = 1;
  if (!this->data_contract_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data_contract_id());
  }

  // string document_type = 2;
  if (!this->document_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_document_type());
  }

  // bytes where = 3;
  if (!this->where().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_where());
  }

  // bytes order_by = 4;
  if (!this->order_by().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_order_by());
  }

  // uint32 limit = 5;
  if (this->limit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_limit());
  }

  // bool prove = 8;
  if (this->prove() != 0) {
    total_size += 1 + 1;
  }

  switch (start_case()) {
    // uint32 start_after = 6;
    case kStartAfter: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_start_after());
      break;
    }
    // uint32 start_at = 7;
    case kStartAt: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_start_at());
      break;
    }
    case START_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDocumentsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetDocumentsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDocumentsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetDocumentsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetDocumentsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetDocumentsRequest)
    MergeFrom(*source);
  }
}

void GetDocumentsRequest::MergeFrom(const GetDocumentsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetDocumentsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.data_contract_id().empty()) {
    _internal_set_data_contract_id(from._internal_data_contract_id());
  }
  if (!from.document_type().empty()) {
    _internal_set_document_type(from._internal_document_type());
  }
  if (!from.where().empty()) {
    _internal_set_where(from._internal_where());
  }
  if (!from.order_by().empty()) {
    _internal_set_order_by(from._internal_order_by());
  }
  if (from.limit() != 0) {
    _internal_set_limit(from._internal_limit());
  }
  if (from.prove() != 0) {
    _internal_set_prove(from._internal_prove());
  }
  switch (from.start_case()) {
    case kStartAfter: {
      _internal_set_start_after(from._internal_start_after());
      break;
    }
    case kStartAt: {
      _internal_set_start_at(from._internal_start_at());
      break;
    }
    case START_NOT_SET: {
      break;
    }
  }
}

void GetDocumentsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetDocumentsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDocumentsRequest::CopyFrom(const GetDocumentsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetDocumentsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDocumentsRequest::IsInitialized() const {
  return true;
}

void GetDocumentsRequest::InternalSwap(GetDocumentsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_contract_id_, GetArenaForAllocation(),
      &other->data_contract_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &document_type_, GetArenaForAllocation(),
      &other->document_type_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &where_, GetArenaForAllocation(),
      &other->where_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &order_by_, GetArenaForAllocation(),
      &other->order_by_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetDocumentsRequest, prove_)
      + sizeof(GetDocumentsRequest::prove_)
      - PROTOBUF_FIELD_OFFSET(GetDocumentsRequest, limit_)>(
          reinterpret_cast<char*>(&limit_),
          reinterpret_cast<char*>(&other->limit_));
  swap(start_, other->start_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDocumentsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_platform_2eproto_getter, &descriptor_table_platform_2eproto_once,
      file_level_metadata_platform_2eproto[10]);
}

// ===================================================================

class GetDocumentsResponse::_Internal {
 public:
  static const ::org::dash::platform::dapi::v0::Proof& proof(const GetDocumentsResponse* msg);
  static const ::org::dash::platform::dapi::v0::ResponseMetadata& metadata(const GetDocumentsResponse* msg);
};

const ::org::dash::platform::dapi::v0::Proof&
GetDocumentsResponse::_Internal::proof(const GetDocumentsResponse* msg) {
  return *msg->proof_;
}
const ::org::dash::platform::dapi::v0::ResponseMetadata&
GetDocumentsResponse::_Internal::metadata(const GetDocumentsResponse* msg) {
  return *msg->metadata_;
}
GetDocumentsResponse::GetDocumentsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  documents_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetDocumentsResponse)
}
GetDocumentsResponse::GetDocumentsResponse(const GetDocumentsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      documents_(from.documents_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_proof()) {
    proof_ = new ::org::dash::platform::dapi::v0::Proof(*from.proof_);
  } else {
    proof_ = nullptr;
  }
  if (from._internal_has_metadata()) {
    metadata_ = new ::org::dash::platform::dapi::v0::ResponseMetadata(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetDocumentsResponse)
}

void GetDocumentsResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&proof_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&metadata_) -
    reinterpret_cast<char*>(&proof_)) + sizeof(metadata_));
}

GetDocumentsResponse::~GetDocumentsResponse() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetDocumentsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetDocumentsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete proof_;
  if (this != internal_default_instance()) delete metadata_;
}

void GetDocumentsResponse::ArenaDtor(void* object) {
  GetDocumentsResponse* _this = reinterpret_cast< GetDocumentsResponse* >(object);
  (void)_this;
}
void GetDocumentsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetDocumentsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetDocumentsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetDocumentsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  documents_.Clear();
  if (GetArenaForAllocation() == nullptr && proof_ != nullptr) {
    delete proof_;
  }
  proof_ = nullptr;
  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDocumentsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated bytes documents = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_documents();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .org.dash.platform.dapi.v0.Proof proof = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_proof(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .org.dash.platform.dapi.v0.ResponseMetadata metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetDocumentsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetDocumentsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes documents = 1;
  for (int i = 0, n = this->_internal_documents_size(); i < n; i++) {
    const auto& s = this->_internal_documents(i);
    target = stream->WriteBytes(1, s, target);
  }

  // .org.dash.platform.dapi.v0.Proof proof = 2;
  if (this->has_proof()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::proof(this), target, stream);
  }

  // .org.dash.platform.dapi.v0.ResponseMetadata metadata = 3;
  if (this->has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::metadata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetDocumentsResponse)
  return target;
}

size_t GetDocumentsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetDocumentsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes documents = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(documents_.size());
  for (int i = 0, n = documents_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      documents_.Get(i));
  }

  // .org.dash.platform.dapi.v0.Proof proof = 2;
  if (this->has_proof()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *proof_);
  }

  // .org.dash.platform.dapi.v0.ResponseMetadata metadata = 3;
  if (this->has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDocumentsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetDocumentsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDocumentsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetDocumentsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetDocumentsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetDocumentsResponse)
    MergeFrom(*source);
  }
}

void GetDocumentsResponse::MergeFrom(const GetDocumentsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetDocumentsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  documents_.MergeFrom(from.documents_);
  if (from.has_proof()) {
    _internal_mutable_proof()->::org::dash::platform::dapi::v0::Proof::MergeFrom(from._internal_proof());
  }
  if (from.has_metadata()) {
    _internal_mutable_metadata()->::org::dash::platform::dapi::v0::ResponseMetadata::MergeFrom(from._internal_metadata());
  }
}

void GetDocumentsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetDocumentsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDocumentsResponse::CopyFrom(const GetDocumentsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetDocumentsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDocumentsResponse::IsInitialized() const {
  return true;
}

void GetDocumentsResponse::InternalSwap(GetDocumentsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  documents_.InternalSwap(&other->documents_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetDocumentsResponse, metadata_)
      + sizeof(GetDocumentsResponse::metadata_)
      - PROTOBUF_FIELD_OFFSET(GetDocumentsResponse, proof_)>(
          reinterpret_cast<char*>(&proof_),
          reinterpret_cast<char*>(&other->proof_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDocumentsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_platform_2eproto_getter, &descriptor_table_platform_2eproto_once,
      file_level_metadata_platform_2eproto[11]);
}

// ===================================================================

class GetIdentitiesByPublicKeyHashesRequest::_Internal {
 public:
};

GetIdentitiesByPublicKeyHashesRequest::GetIdentitiesByPublicKeyHashesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  public_key_hashes_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesRequest)
}
GetIdentitiesByPublicKeyHashesRequest::GetIdentitiesByPublicKeyHashesRequest(const GetIdentitiesByPublicKeyHashesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      public_key_hashes_(from.public_key_hashes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  prove_ = from.prove_;
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesRequest)
}

void GetIdentitiesByPublicKeyHashesRequest::SharedCtor() {
prove_ = false;
}

GetIdentitiesByPublicKeyHashesRequest::~GetIdentitiesByPublicKeyHashesRequest() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdentitiesByPublicKeyHashesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetIdentitiesByPublicKeyHashesRequest::ArenaDtor(void* object) {
  GetIdentitiesByPublicKeyHashesRequest* _this = reinterpret_cast< GetIdentitiesByPublicKeyHashesRequest* >(object);
  (void)_this;
}
void GetIdentitiesByPublicKeyHashesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdentitiesByPublicKeyHashesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetIdentitiesByPublicKeyHashesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  public_key_hashes_.Clear();
  prove_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdentitiesByPublicKeyHashesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated bytes public_key_hashes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_public_key_hashes();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // bool prove = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          prove_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdentitiesByPublicKeyHashesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes public_key_hashes = 1;
  for (int i = 0, n = this->_internal_public_key_hashes_size(); i < n; i++) {
    const auto& s = this->_internal_public_key_hashes(i);
    target = stream->WriteBytes(1, s, target);
  }

  // bool prove = 2;
  if (this->prove() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_prove(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesRequest)
  return target;
}

size_t GetIdentitiesByPublicKeyHashesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes public_key_hashes = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(public_key_hashes_.size());
  for (int i = 0, n = public_key_hashes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      public_key_hashes_.Get(i));
  }

  // bool prove = 2;
  if (this->prove() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdentitiesByPublicKeyHashesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdentitiesByPublicKeyHashesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdentitiesByPublicKeyHashesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesRequest)
    MergeFrom(*source);
  }
}

void GetIdentitiesByPublicKeyHashesRequest::MergeFrom(const GetIdentitiesByPublicKeyHashesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  public_key_hashes_.MergeFrom(from.public_key_hashes_);
  if (from.prove() != 0) {
    _internal_set_prove(from._internal_prove());
  }
}

void GetIdentitiesByPublicKeyHashesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdentitiesByPublicKeyHashesRequest::CopyFrom(const GetIdentitiesByPublicKeyHashesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdentitiesByPublicKeyHashesRequest::IsInitialized() const {
  return true;
}

void GetIdentitiesByPublicKeyHashesRequest::InternalSwap(GetIdentitiesByPublicKeyHashesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  public_key_hashes_.InternalSwap(&other->public_key_hashes_);
  swap(prove_, other->prove_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdentitiesByPublicKeyHashesRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_platform_2eproto_getter, &descriptor_table_platform_2eproto_once,
      file_level_metadata_platform_2eproto[12]);
}

// ===================================================================

class GetIdentitiesByPublicKeyHashesResponse::_Internal {
 public:
  static const ::org::dash::platform::dapi::v0::Proof& proof(const GetIdentitiesByPublicKeyHashesResponse* msg);
  static const ::org::dash::platform::dapi::v0::ResponseMetadata& metadata(const GetIdentitiesByPublicKeyHashesResponse* msg);
};

const ::org::dash::platform::dapi::v0::Proof&
GetIdentitiesByPublicKeyHashesResponse::_Internal::proof(const GetIdentitiesByPublicKeyHashesResponse* msg) {
  return *msg->proof_;
}
const ::org::dash::platform::dapi::v0::ResponseMetadata&
GetIdentitiesByPublicKeyHashesResponse::_Internal::metadata(const GetIdentitiesByPublicKeyHashesResponse* msg) {
  return *msg->metadata_;
}
GetIdentitiesByPublicKeyHashesResponse::GetIdentitiesByPublicKeyHashesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  identities_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesResponse)
}
GetIdentitiesByPublicKeyHashesResponse::GetIdentitiesByPublicKeyHashesResponse(const GetIdentitiesByPublicKeyHashesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      identities_(from.identities_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_proof()) {
    proof_ = new ::org::dash::platform::dapi::v0::Proof(*from.proof_);
  } else {
    proof_ = nullptr;
  }
  if (from._internal_has_metadata()) {
    metadata_ = new ::org::dash::platform::dapi::v0::ResponseMetadata(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesResponse)
}

void GetIdentitiesByPublicKeyHashesResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&proof_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&metadata_) -
    reinterpret_cast<char*>(&proof_)) + sizeof(metadata_));
}

GetIdentitiesByPublicKeyHashesResponse::~GetIdentitiesByPublicKeyHashesResponse() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdentitiesByPublicKeyHashesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete proof_;
  if (this != internal_default_instance()) delete metadata_;
}

void GetIdentitiesByPublicKeyHashesResponse::ArenaDtor(void* object) {
  GetIdentitiesByPublicKeyHashesResponse* _this = reinterpret_cast< GetIdentitiesByPublicKeyHashesResponse* >(object);
  (void)_this;
}
void GetIdentitiesByPublicKeyHashesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdentitiesByPublicKeyHashesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetIdentitiesByPublicKeyHashesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identities_.Clear();
  if (GetArenaForAllocation() == nullptr && proof_ != nullptr) {
    delete proof_;
  }
  proof_ = nullptr;
  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdentitiesByPublicKeyHashesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated bytes identities = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_identities();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .org.dash.platform.dapi.v0.Proof proof = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_proof(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .org.dash.platform.dapi.v0.ResponseMetadata metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdentitiesByPublicKeyHashesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes identities = 1;
  for (int i = 0, n = this->_internal_identities_size(); i < n; i++) {
    const auto& s = this->_internal_identities(i);
    target = stream->WriteBytes(1, s, target);
  }

  // .org.dash.platform.dapi.v0.Proof proof = 2;
  if (this->has_proof()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::proof(this), target, stream);
  }

  // .org.dash.platform.dapi.v0.ResponseMetadata metadata = 3;
  if (this->has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::metadata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesResponse)
  return target;
}

size_t GetIdentitiesByPublicKeyHashesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes identities = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(identities_.size());
  for (int i = 0, n = identities_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      identities_.Get(i));
  }

  // .org.dash.platform.dapi.v0.Proof proof = 2;
  if (this->has_proof()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *proof_);
  }

  // .org.dash.platform.dapi.v0.ResponseMetadata metadata = 3;
  if (this->has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdentitiesByPublicKeyHashesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdentitiesByPublicKeyHashesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdentitiesByPublicKeyHashesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesResponse)
    MergeFrom(*source);
  }
}

void GetIdentitiesByPublicKeyHashesResponse::MergeFrom(const GetIdentitiesByPublicKeyHashesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  identities_.MergeFrom(from.identities_);
  if (from.has_proof()) {
    _internal_mutable_proof()->::org::dash::platform::dapi::v0::Proof::MergeFrom(from._internal_proof());
  }
  if (from.has_metadata()) {
    _internal_mutable_metadata()->::org::dash::platform::dapi::v0::ResponseMetadata::MergeFrom(from._internal_metadata());
  }
}

void GetIdentitiesByPublicKeyHashesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdentitiesByPublicKeyHashesResponse::CopyFrom(const GetIdentitiesByPublicKeyHashesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetIdentitiesByPublicKeyHashesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdentitiesByPublicKeyHashesResponse::IsInitialized() const {
  return true;
}

void GetIdentitiesByPublicKeyHashesResponse::InternalSwap(GetIdentitiesByPublicKeyHashesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  identities_.InternalSwap(&other->identities_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetIdentitiesByPublicKeyHashesResponse, metadata_)
      + sizeof(GetIdentitiesByPublicKeyHashesResponse::metadata_)
      - PROTOBUF_FIELD_OFFSET(GetIdentitiesByPublicKeyHashesResponse, proof_)>(
          reinterpret_cast<char*>(&proof_),
          reinterpret_cast<char*>(&other->proof_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdentitiesByPublicKeyHashesResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_platform_2eproto_getter, &descriptor_table_platform_2eproto_once,
      file_level_metadata_platform_2eproto[13]);
}

// ===================================================================

class GetIdentityIdsByPublicKeyHashesRequest::_Internal {
 public:
};

GetIdentityIdsByPublicKeyHashesRequest::GetIdentityIdsByPublicKeyHashesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  public_key_hashes_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesRequest)
}
GetIdentityIdsByPublicKeyHashesRequest::GetIdentityIdsByPublicKeyHashesRequest(const GetIdentityIdsByPublicKeyHashesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      public_key_hashes_(from.public_key_hashes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  prove_ = from.prove_;
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesRequest)
}

void GetIdentityIdsByPublicKeyHashesRequest::SharedCtor() {
prove_ = false;
}

GetIdentityIdsByPublicKeyHashesRequest::~GetIdentityIdsByPublicKeyHashesRequest() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdentityIdsByPublicKeyHashesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetIdentityIdsByPublicKeyHashesRequest::ArenaDtor(void* object) {
  GetIdentityIdsByPublicKeyHashesRequest* _this = reinterpret_cast< GetIdentityIdsByPublicKeyHashesRequest* >(object);
  (void)_this;
}
void GetIdentityIdsByPublicKeyHashesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdentityIdsByPublicKeyHashesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetIdentityIdsByPublicKeyHashesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  public_key_hashes_.Clear();
  prove_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdentityIdsByPublicKeyHashesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated bytes public_key_hashes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_public_key_hashes();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // bool prove = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          prove_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdentityIdsByPublicKeyHashesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes public_key_hashes = 1;
  for (int i = 0, n = this->_internal_public_key_hashes_size(); i < n; i++) {
    const auto& s = this->_internal_public_key_hashes(i);
    target = stream->WriteBytes(1, s, target);
  }

  // bool prove = 2;
  if (this->prove() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_prove(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesRequest)
  return target;
}

size_t GetIdentityIdsByPublicKeyHashesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes public_key_hashes = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(public_key_hashes_.size());
  for (int i = 0, n = public_key_hashes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      public_key_hashes_.Get(i));
  }

  // bool prove = 2;
  if (this->prove() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdentityIdsByPublicKeyHashesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdentityIdsByPublicKeyHashesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdentityIdsByPublicKeyHashesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesRequest)
    MergeFrom(*source);
  }
}

void GetIdentityIdsByPublicKeyHashesRequest::MergeFrom(const GetIdentityIdsByPublicKeyHashesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  public_key_hashes_.MergeFrom(from.public_key_hashes_);
  if (from.prove() != 0) {
    _internal_set_prove(from._internal_prove());
  }
}

void GetIdentityIdsByPublicKeyHashesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdentityIdsByPublicKeyHashesRequest::CopyFrom(const GetIdentityIdsByPublicKeyHashesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdentityIdsByPublicKeyHashesRequest::IsInitialized() const {
  return true;
}

void GetIdentityIdsByPublicKeyHashesRequest::InternalSwap(GetIdentityIdsByPublicKeyHashesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  public_key_hashes_.InternalSwap(&other->public_key_hashes_);
  swap(prove_, other->prove_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdentityIdsByPublicKeyHashesRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_platform_2eproto_getter, &descriptor_table_platform_2eproto_once,
      file_level_metadata_platform_2eproto[14]);
}

// ===================================================================

class GetIdentityIdsByPublicKeyHashesResponse::_Internal {
 public:
  static const ::org::dash::platform::dapi::v0::Proof& proof(const GetIdentityIdsByPublicKeyHashesResponse* msg);
  static const ::org::dash::platform::dapi::v0::ResponseMetadata& metadata(const GetIdentityIdsByPublicKeyHashesResponse* msg);
};

const ::org::dash::platform::dapi::v0::Proof&
GetIdentityIdsByPublicKeyHashesResponse::_Internal::proof(const GetIdentityIdsByPublicKeyHashesResponse* msg) {
  return *msg->proof_;
}
const ::org::dash::platform::dapi::v0::ResponseMetadata&
GetIdentityIdsByPublicKeyHashesResponse::_Internal::metadata(const GetIdentityIdsByPublicKeyHashesResponse* msg) {
  return *msg->metadata_;
}
GetIdentityIdsByPublicKeyHashesResponse::GetIdentityIdsByPublicKeyHashesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  identity_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesResponse)
}
GetIdentityIdsByPublicKeyHashesResponse::GetIdentityIdsByPublicKeyHashesResponse(const GetIdentityIdsByPublicKeyHashesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      identity_ids_(from.identity_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_proof()) {
    proof_ = new ::org::dash::platform::dapi::v0::Proof(*from.proof_);
  } else {
    proof_ = nullptr;
  }
  if (from._internal_has_metadata()) {
    metadata_ = new ::org::dash::platform::dapi::v0::ResponseMetadata(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesResponse)
}

void GetIdentityIdsByPublicKeyHashesResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&proof_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&metadata_) -
    reinterpret_cast<char*>(&proof_)) + sizeof(metadata_));
}

GetIdentityIdsByPublicKeyHashesResponse::~GetIdentityIdsByPublicKeyHashesResponse() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetIdentityIdsByPublicKeyHashesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete proof_;
  if (this != internal_default_instance()) delete metadata_;
}

void GetIdentityIdsByPublicKeyHashesResponse::ArenaDtor(void* object) {
  GetIdentityIdsByPublicKeyHashesResponse* _this = reinterpret_cast< GetIdentityIdsByPublicKeyHashesResponse* >(object);
  (void)_this;
}
void GetIdentityIdsByPublicKeyHashesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetIdentityIdsByPublicKeyHashesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetIdentityIdsByPublicKeyHashesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identity_ids_.Clear();
  if (GetArenaForAllocation() == nullptr && proof_ != nullptr) {
    delete proof_;
  }
  proof_ = nullptr;
  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIdentityIdsByPublicKeyHashesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated bytes identity_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_identity_ids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .org.dash.platform.dapi.v0.Proof proof = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_proof(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .org.dash.platform.dapi.v0.ResponseMetadata metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetIdentityIdsByPublicKeyHashesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes identity_ids = 1;
  for (int i = 0, n = this->_internal_identity_ids_size(); i < n; i++) {
    const auto& s = this->_internal_identity_ids(i);
    target = stream->WriteBytes(1, s, target);
  }

  // .org.dash.platform.dapi.v0.Proof proof = 2;
  if (this->has_proof()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::proof(this), target, stream);
  }

  // .org.dash.platform.dapi.v0.ResponseMetadata metadata = 3;
  if (this->has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::metadata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesResponse)
  return target;
}

size_t GetIdentityIdsByPublicKeyHashesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes identity_ids = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(identity_ids_.size());
  for (int i = 0, n = identity_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      identity_ids_.Get(i));
  }

  // .org.dash.platform.dapi.v0.Proof proof = 2;
  if (this->has_proof()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *proof_);
  }

  // .org.dash.platform.dapi.v0.ResponseMetadata metadata = 3;
  if (this->has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIdentityIdsByPublicKeyHashesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIdentityIdsByPublicKeyHashesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetIdentityIdsByPublicKeyHashesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesResponse)
    MergeFrom(*source);
  }
}

void GetIdentityIdsByPublicKeyHashesResponse::MergeFrom(const GetIdentityIdsByPublicKeyHashesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  identity_ids_.MergeFrom(from.identity_ids_);
  if (from.has_proof()) {
    _internal_mutable_proof()->::org::dash::platform::dapi::v0::Proof::MergeFrom(from._internal_proof());
  }
  if (from.has_metadata()) {
    _internal_mutable_metadata()->::org::dash::platform::dapi::v0::ResponseMetadata::MergeFrom(from._internal_metadata());
  }
}

void GetIdentityIdsByPublicKeyHashesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIdentityIdsByPublicKeyHashesResponse::CopyFrom(const GetIdentityIdsByPublicKeyHashesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetIdentityIdsByPublicKeyHashesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIdentityIdsByPublicKeyHashesResponse::IsInitialized() const {
  return true;
}

void GetIdentityIdsByPublicKeyHashesResponse::InternalSwap(GetIdentityIdsByPublicKeyHashesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  identity_ids_.InternalSwap(&other->identity_ids_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetIdentityIdsByPublicKeyHashesResponse, metadata_)
      + sizeof(GetIdentityIdsByPublicKeyHashesResponse::metadata_)
      - PROTOBUF_FIELD_OFFSET(GetIdentityIdsByPublicKeyHashesResponse, proof_)>(
          reinterpret_cast<char*>(&proof_),
          reinterpret_cast<char*>(&other->proof_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIdentityIdsByPublicKeyHashesResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_platform_2eproto_getter, &descriptor_table_platform_2eproto_once,
      file_level_metadata_platform_2eproto[15]);
}

// ===================================================================

class WaitForStateTransitionResultRequest::_Internal {
 public:
};

WaitForStateTransitionResultRequest::WaitForStateTransitionResultRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.WaitForStateTransitionResultRequest)
}
WaitForStateTransitionResultRequest::WaitForStateTransitionResultRequest(const WaitForStateTransitionResultRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  state_transition_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_state_transition_hash().empty()) {
    state_transition_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_state_transition_hash(), 
      GetArenaForAllocation());
  }
  prove_ = from.prove_;
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.WaitForStateTransitionResultRequest)
}

void WaitForStateTransitionResultRequest::SharedCtor() {
state_transition_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
prove_ = false;
}

WaitForStateTransitionResultRequest::~WaitForStateTransitionResultRequest() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.WaitForStateTransitionResultRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WaitForStateTransitionResultRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  state_transition_hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WaitForStateTransitionResultRequest::ArenaDtor(void* object) {
  WaitForStateTransitionResultRequest* _this = reinterpret_cast< WaitForStateTransitionResultRequest* >(object);
  (void)_this;
}
void WaitForStateTransitionResultRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WaitForStateTransitionResultRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WaitForStateTransitionResultRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.WaitForStateTransitionResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_transition_hash_.ClearToEmpty();
  prove_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WaitForStateTransitionResultRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes state_transition_hash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_state_transition_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool prove = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          prove_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WaitForStateTransitionResultRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.WaitForStateTransitionResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes state_transition_hash = 1;
  if (!this->state_transition_hash().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_state_transition_hash(), target);
  }

  // bool prove = 2;
  if (this->prove() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_prove(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.WaitForStateTransitionResultRequest)
  return target;
}

size_t WaitForStateTransitionResultRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.WaitForStateTransitionResultRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes state_transition_hash = 1;
  if (!this->state_transition_hash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_state_transition_hash());
  }

  // bool prove = 2;
  if (this->prove() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WaitForStateTransitionResultRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.WaitForStateTransitionResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WaitForStateTransitionResultRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WaitForStateTransitionResultRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.WaitForStateTransitionResultRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.WaitForStateTransitionResultRequest)
    MergeFrom(*source);
  }
}

void WaitForStateTransitionResultRequest::MergeFrom(const WaitForStateTransitionResultRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.WaitForStateTransitionResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.state_transition_hash().empty()) {
    _internal_set_state_transition_hash(from._internal_state_transition_hash());
  }
  if (from.prove() != 0) {
    _internal_set_prove(from._internal_prove());
  }
}

void WaitForStateTransitionResultRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.WaitForStateTransitionResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaitForStateTransitionResultRequest::CopyFrom(const WaitForStateTransitionResultRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.WaitForStateTransitionResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WaitForStateTransitionResultRequest::IsInitialized() const {
  return true;
}

void WaitForStateTransitionResultRequest::InternalSwap(WaitForStateTransitionResultRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &state_transition_hash_, GetArenaForAllocation(),
      &other->state_transition_hash_, other->GetArenaForAllocation()
  );
  swap(prove_, other->prove_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WaitForStateTransitionResultRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_platform_2eproto_getter, &descriptor_table_platform_2eproto_once,
      file_level_metadata_platform_2eproto[16]);
}

// ===================================================================

class WaitForStateTransitionResultResponse::_Internal {
 public:
  static const ::org::dash::platform::dapi::v0::StateTransitionBroadcastError& error(const WaitForStateTransitionResultResponse* msg);
  static const ::org::dash::platform::dapi::v0::Proof& proof(const WaitForStateTransitionResultResponse* msg);
  static const ::org::dash::platform::dapi::v0::ResponseMetadata& metadata(const WaitForStateTransitionResultResponse* msg);
};

const ::org::dash::platform::dapi::v0::StateTransitionBroadcastError&
WaitForStateTransitionResultResponse::_Internal::error(const WaitForStateTransitionResultResponse* msg) {
  return *msg->responses_.error_;
}
const ::org::dash::platform::dapi::v0::Proof&
WaitForStateTransitionResultResponse::_Internal::proof(const WaitForStateTransitionResultResponse* msg) {
  return *msg->responses_.proof_;
}
const ::org::dash::platform::dapi::v0::ResponseMetadata&
WaitForStateTransitionResultResponse::_Internal::metadata(const WaitForStateTransitionResultResponse* msg) {
  return *msg->metadata_;
}
void WaitForStateTransitionResultResponse::set_allocated_error(::org::dash::platform::dapi::v0::StateTransitionBroadcastError* error) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_responses();
  if (error) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::org::dash::platform::dapi::v0::StateTransitionBroadcastError>::GetOwningArena(error);
    if (message_arena != submessage_arena) {
      error = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    set_has_error();
    responses_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.WaitForStateTransitionResultResponse.error)
}
void WaitForStateTransitionResultResponse::set_allocated_proof(::org::dash::platform::dapi::v0::Proof* proof) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_responses();
  if (proof) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::org::dash::platform::dapi::v0::Proof>::GetOwningArena(proof);
    if (message_arena != submessage_arena) {
      proof = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, proof, submessage_arena);
    }
    set_has_proof();
    responses_.proof_ = proof;
  }
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.WaitForStateTransitionResultResponse.proof)
}
WaitForStateTransitionResultResponse::WaitForStateTransitionResultResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.WaitForStateTransitionResultResponse)
}
WaitForStateTransitionResultResponse::WaitForStateTransitionResultResponse(const WaitForStateTransitionResultResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metadata()) {
    metadata_ = new ::org::dash::platform::dapi::v0::ResponseMetadata(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  clear_has_responses();
  switch (from.responses_case()) {
    case kError: {
      _internal_mutable_error()->::org::dash::platform::dapi::v0::StateTransitionBroadcastError::MergeFrom(from._internal_error());
      break;
    }
    case kProof: {
      _internal_mutable_proof()->::org::dash::platform::dapi::v0::Proof::MergeFrom(from._internal_proof());
      break;
    }
    case RESPONSES_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.WaitForStateTransitionResultResponse)
}

void WaitForStateTransitionResultResponse::SharedCtor() {
metadata_ = nullptr;
clear_has_responses();
}

WaitForStateTransitionResultResponse::~WaitForStateTransitionResultResponse() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.WaitForStateTransitionResultResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WaitForStateTransitionResultResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete metadata_;
  if (has_responses()) {
    clear_responses();
  }
}

void WaitForStateTransitionResultResponse::ArenaDtor(void* object) {
  WaitForStateTransitionResultResponse* _this = reinterpret_cast< WaitForStateTransitionResultResponse* >(object);
  (void)_this;
}
void WaitForStateTransitionResultResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WaitForStateTransitionResultResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WaitForStateTransitionResultResponse::clear_responses() {
// @@protoc_insertion_point(one_of_clear_start:org.dash.platform.dapi.v0.WaitForStateTransitionResultResponse)
  switch (responses_case()) {
    case kError: {
      if (GetArenaForAllocation() == nullptr) {
        delete responses_.error_;
      }
      break;
    }
    case kProof: {
      if (GetArenaForAllocation() == nullptr) {
        delete responses_.proof_;
      }
      break;
    }
    case RESPONSES_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RESPONSES_NOT_SET;
}


void WaitForStateTransitionResultResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.WaitForStateTransitionResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  clear_responses();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WaitForStateTransitionResultResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .org.dash.platform.dapi.v0.StateTransitionBroadcastError error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .org.dash.platform.dapi.v0.Proof proof = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_proof(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .org.dash.platform.dapi.v0.ResponseMetadata metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WaitForStateTransitionResultResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.WaitForStateTransitionResultResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .org.dash.platform.dapi.v0.StateTransitionBroadcastError error = 1;
  if (_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::error(this), target, stream);
  }

  // .org.dash.platform.dapi.v0.Proof proof = 2;
  if (_internal_has_proof()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::proof(this), target, stream);
  }

  // .org.dash.platform.dapi.v0.ResponseMetadata metadata = 3;
  if (this->has_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::metadata(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.WaitForStateTransitionResultResponse)
  return target;
}

size_t WaitForStateTransitionResultResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.WaitForStateTransitionResultResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .org.dash.platform.dapi.v0.ResponseMetadata metadata = 3;
  if (this->has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  switch (responses_case()) {
    // .org.dash.platform.dapi.v0.StateTransitionBroadcastError error = 1;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *responses_.error_);
      break;
    }
    // .org.dash.platform.dapi.v0.Proof proof = 2;
    case kProof: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *responses_.proof_);
      break;
    }
    case RESPONSES_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WaitForStateTransitionResultResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.WaitForStateTransitionResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WaitForStateTransitionResultResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WaitForStateTransitionResultResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.WaitForStateTransitionResultResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.WaitForStateTransitionResultResponse)
    MergeFrom(*source);
  }
}

void WaitForStateTransitionResultResponse::MergeFrom(const WaitForStateTransitionResultResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.WaitForStateTransitionResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_metadata()) {
    _internal_mutable_metadata()->::org::dash::platform::dapi::v0::ResponseMetadata::MergeFrom(from._internal_metadata());
  }
  switch (from.responses_case()) {
    case kError: {
      _internal_mutable_error()->::org::dash::platform::dapi::v0::StateTransitionBroadcastError::MergeFrom(from._internal_error());
      break;
    }
    case kProof: {
      _internal_mutable_proof()->::org::dash::platform::dapi::v0::Proof::MergeFrom(from._internal_proof());
      break;
    }
    case RESPONSES_NOT_SET: {
      break;
    }
  }
}

void WaitForStateTransitionResultResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.WaitForStateTransitionResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaitForStateTransitionResultResponse::CopyFrom(const WaitForStateTransitionResultResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.WaitForStateTransitionResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WaitForStateTransitionResultResponse::IsInitialized() const {
  return true;
}

void WaitForStateTransitionResultResponse::InternalSwap(WaitForStateTransitionResultResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(metadata_, other->metadata_);
  swap(responses_, other->responses_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata WaitForStateTransitionResultResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_platform_2eproto_getter, &descriptor_table_platform_2eproto_once,
      file_level_metadata_platform_2eproto[17]);
}

// ===================================================================

class ConsensusParamsBlock::_Internal {
 public:
};

ConsensusParamsBlock::ConsensusParamsBlock(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.ConsensusParamsBlock)
}
ConsensusParamsBlock::ConsensusParamsBlock(const ConsensusParamsBlock& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  max_bytes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_max_bytes().empty()) {
    max_bytes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_max_bytes(), 
      GetArenaForAllocation());
  }
  max_gas_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_max_gas().empty()) {
    max_gas_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_max_gas(), 
      GetArenaForAllocation());
  }
  time_iota_ms_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_time_iota_ms().empty()) {
    time_iota_ms_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_time_iota_ms(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.ConsensusParamsBlock)
}

void ConsensusParamsBlock::SharedCtor() {
max_bytes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
max_gas_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
time_iota_ms_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ConsensusParamsBlock::~ConsensusParamsBlock() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.ConsensusParamsBlock)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ConsensusParamsBlock::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  max_bytes_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  max_gas_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  time_iota_ms_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ConsensusParamsBlock::ArenaDtor(void* object) {
  ConsensusParamsBlock* _this = reinterpret_cast< ConsensusParamsBlock* >(object);
  (void)_this;
}
void ConsensusParamsBlock::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConsensusParamsBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ConsensusParamsBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.ConsensusParamsBlock)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  max_bytes_.ClearToEmpty();
  max_gas_.ClearToEmpty();
  time_iota_ms_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConsensusParamsBlock::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string max_bytes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_max_bytes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "org.dash.platform.dapi.v0.ConsensusParamsBlock.max_bytes"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string max_gas = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_max_gas();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "org.dash.platform.dapi.v0.ConsensusParamsBlock.max_gas"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string time_iota_ms = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_time_iota_ms();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "org.dash.platform.dapi.v0.ConsensusParamsBlock.time_iota_ms"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConsensusParamsBlock::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.ConsensusParamsBlock)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string max_bytes = 1;
  if (!this->max_bytes().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_max_bytes().data(), static_cast<int>(this->_internal_max_bytes().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "org.dash.platform.dapi.v0.ConsensusParamsBlock.max_bytes");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_max_bytes(), target);
  }

  // string max_gas = 2;
  if (!this->max_gas().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_max_gas().data(), static_cast<int>(this->_internal_max_gas().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "org.dash.platform.dapi.v0.ConsensusParamsBlock.max_gas");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_max_gas(), target);
  }

  // string time_iota_ms = 3;
  if (!this->time_iota_ms().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_time_iota_ms().data(), static_cast<int>(this->_internal_time_iota_ms().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "org.dash.platform.dapi.v0.ConsensusParamsBlock.time_iota_ms");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_time_iota_ms(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.ConsensusParamsBlock)
  return target;
}

size_t ConsensusParamsBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.ConsensusParamsBlock)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string max_bytes = 1;
  if (!this->max_bytes().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_max_bytes());
  }

  // string max_gas = 2;
  if (!this->max_gas().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_max_gas());
  }

  // string time_iota_ms = 3;
  if (!this->time_iota_ms().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_time_iota_ms());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConsensusParamsBlock::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.ConsensusParamsBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const ConsensusParamsBlock* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConsensusParamsBlock>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.ConsensusParamsBlock)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.ConsensusParamsBlock)
    MergeFrom(*source);
  }
}

void ConsensusParamsBlock::MergeFrom(const ConsensusParamsBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.ConsensusParamsBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.max_bytes().empty()) {
    _internal_set_max_bytes(from._internal_max_bytes());
  }
  if (!from.max_gas().empty()) {
    _internal_set_max_gas(from._internal_max_gas());
  }
  if (!from.time_iota_ms().empty()) {
    _internal_set_time_iota_ms(from._internal_time_iota_ms());
  }
}

void ConsensusParamsBlock::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.ConsensusParamsBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConsensusParamsBlock::CopyFrom(const ConsensusParamsBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.ConsensusParamsBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConsensusParamsBlock::IsInitialized() const {
  return true;
}

void ConsensusParamsBlock::InternalSwap(ConsensusParamsBlock* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &max_bytes_, GetArenaForAllocation(),
      &other->max_bytes_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &max_gas_, GetArenaForAllocation(),
      &other->max_gas_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &time_iota_ms_, GetArenaForAllocation(),
      &other->time_iota_ms_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ConsensusParamsBlock::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_platform_2eproto_getter, &descriptor_table_platform_2eproto_once,
      file_level_metadata_platform_2eproto[18]);
}

// ===================================================================

class ConsensusParamsEvidence::_Internal {
 public:
};

ConsensusParamsEvidence::ConsensusParamsEvidence(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.ConsensusParamsEvidence)
}
ConsensusParamsEvidence::ConsensusParamsEvidence(const ConsensusParamsEvidence& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  max_age_num_blocks_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_max_age_num_blocks().empty()) {
    max_age_num_blocks_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_max_age_num_blocks(), 
      GetArenaForAllocation());
  }
  max_age_duration_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_max_age_duration().empty()) {
    max_age_duration_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_max_age_duration(), 
      GetArenaForAllocation());
  }
  max_bytes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_max_bytes().empty()) {
    max_bytes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_max_bytes(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.ConsensusParamsEvidence)
}

void ConsensusParamsEvidence::SharedCtor() {
max_age_num_blocks_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
max_age_duration_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
max_bytes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ConsensusParamsEvidence::~ConsensusParamsEvidence() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.ConsensusParamsEvidence)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ConsensusParamsEvidence::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  max_age_num_blocks_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  max_age_duration_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  max_bytes_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ConsensusParamsEvidence::ArenaDtor(void* object) {
  ConsensusParamsEvidence* _this = reinterpret_cast< ConsensusParamsEvidence* >(object);
  (void)_this;
}
void ConsensusParamsEvidence::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConsensusParamsEvidence::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ConsensusParamsEvidence::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.ConsensusParamsEvidence)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  max_age_num_blocks_.ClearToEmpty();
  max_age_duration_.ClearToEmpty();
  max_bytes_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConsensusParamsEvidence::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string max_age_num_blocks = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_max_age_num_blocks();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "org.dash.platform.dapi.v0.ConsensusParamsEvidence.max_age_num_blocks"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string max_age_duration = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_max_age_duration();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "org.dash.platform.dapi.v0.ConsensusParamsEvidence.max_age_duration"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string max_bytes = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_max_bytes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "org.dash.platform.dapi.v0.ConsensusParamsEvidence.max_bytes"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConsensusParamsEvidence::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.ConsensusParamsEvidence)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string max_age_num_blocks = 1;
  if (!this->max_age_num_blocks().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_max_age_num_blocks().data(), static_cast<int>(this->_internal_max_age_num_blocks().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "org.dash.platform.dapi.v0.ConsensusParamsEvidence.max_age_num_blocks");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_max_age_num_blocks(), target);
  }

  // string max_age_duration = 2;
  if (!this->max_age_duration().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_max_age_duration().data(), static_cast<int>(this->_internal_max_age_duration().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "org.dash.platform.dapi.v0.ConsensusParamsEvidence.max_age_duration");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_max_age_duration(), target);
  }

  // string max_bytes = 3;
  if (!this->max_bytes().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_max_bytes().data(), static_cast<int>(this->_internal_max_bytes().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "org.dash.platform.dapi.v0.ConsensusParamsEvidence.max_bytes");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_max_bytes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.ConsensusParamsEvidence)
  return target;
}

size_t ConsensusParamsEvidence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.ConsensusParamsEvidence)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string max_age_num_blocks = 1;
  if (!this->max_age_num_blocks().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_max_age_num_blocks());
  }

  // string max_age_duration = 2;
  if (!this->max_age_duration().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_max_age_duration());
  }

  // string max_bytes = 3;
  if (!this->max_bytes().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_max_bytes());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConsensusParamsEvidence::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.ConsensusParamsEvidence)
  GOOGLE_DCHECK_NE(&from, this);
  const ConsensusParamsEvidence* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConsensusParamsEvidence>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.ConsensusParamsEvidence)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.ConsensusParamsEvidence)
    MergeFrom(*source);
  }
}

void ConsensusParamsEvidence::MergeFrom(const ConsensusParamsEvidence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.ConsensusParamsEvidence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.max_age_num_blocks().empty()) {
    _internal_set_max_age_num_blocks(from._internal_max_age_num_blocks());
  }
  if (!from.max_age_duration().empty()) {
    _internal_set_max_age_duration(from._internal_max_age_duration());
  }
  if (!from.max_bytes().empty()) {
    _internal_set_max_bytes(from._internal_max_bytes());
  }
}

void ConsensusParamsEvidence::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.ConsensusParamsEvidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConsensusParamsEvidence::CopyFrom(const ConsensusParamsEvidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.ConsensusParamsEvidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConsensusParamsEvidence::IsInitialized() const {
  return true;
}

void ConsensusParamsEvidence::InternalSwap(ConsensusParamsEvidence* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &max_age_num_blocks_, GetArenaForAllocation(),
      &other->max_age_num_blocks_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &max_age_duration_, GetArenaForAllocation(),
      &other->max_age_duration_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &max_bytes_, GetArenaForAllocation(),
      &other->max_bytes_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ConsensusParamsEvidence::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_platform_2eproto_getter, &descriptor_table_platform_2eproto_once,
      file_level_metadata_platform_2eproto[19]);
}

// ===================================================================

class GetConsensusParamsRequest::_Internal {
 public:
};

GetConsensusParamsRequest::GetConsensusParamsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetConsensusParamsRequest)
}
GetConsensusParamsRequest::GetConsensusParamsRequest(const GetConsensusParamsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&height_, &from.height_,
    static_cast<size_t>(reinterpret_cast<char*>(&prove_) -
    reinterpret_cast<char*>(&height_)) + sizeof(prove_));
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetConsensusParamsRequest)
}

void GetConsensusParamsRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&height_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&prove_) -
    reinterpret_cast<char*>(&height_)) + sizeof(prove_));
}

GetConsensusParamsRequest::~GetConsensusParamsRequest() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetConsensusParamsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetConsensusParamsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetConsensusParamsRequest::ArenaDtor(void* object) {
  GetConsensusParamsRequest* _this = reinterpret_cast< GetConsensusParamsRequest* >(object);
  (void)_this;
}
void GetConsensusParamsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetConsensusParamsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetConsensusParamsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetConsensusParamsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prove_) -
      reinterpret_cast<char*>(&height_)) + sizeof(prove_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetConsensusParamsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 height = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool prove = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          prove_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetConsensusParamsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetConsensusParamsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 height = 1;
  if (this->height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_height(), target);
  }

  // bool prove = 2;
  if (this->prove() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_prove(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetConsensusParamsRequest)
  return target;
}

size_t GetConsensusParamsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetConsensusParamsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 height = 1;
  if (this->height() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_height());
  }

  // bool prove = 2;
  if (this->prove() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetConsensusParamsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetConsensusParamsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetConsensusParamsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetConsensusParamsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetConsensusParamsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetConsensusParamsRequest)
    MergeFrom(*source);
  }
}

void GetConsensusParamsRequest::MergeFrom(const GetConsensusParamsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetConsensusParamsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.height() != 0) {
    _internal_set_height(from._internal_height());
  }
  if (from.prove() != 0) {
    _internal_set_prove(from._internal_prove());
  }
}

void GetConsensusParamsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetConsensusParamsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetConsensusParamsRequest::CopyFrom(const GetConsensusParamsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetConsensusParamsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConsensusParamsRequest::IsInitialized() const {
  return true;
}

void GetConsensusParamsRequest::InternalSwap(GetConsensusParamsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetConsensusParamsRequest, prove_)
      + sizeof(GetConsensusParamsRequest::prove_)
      - PROTOBUF_FIELD_OFFSET(GetConsensusParamsRequest, height_)>(
          reinterpret_cast<char*>(&height_),
          reinterpret_cast<char*>(&other->height_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetConsensusParamsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_platform_2eproto_getter, &descriptor_table_platform_2eproto_once,
      file_level_metadata_platform_2eproto[20]);
}

// ===================================================================

class GetConsensusParamsResponse::_Internal {
 public:
  static const ::org::dash::platform::dapi::v0::ConsensusParamsBlock& block(const GetConsensusParamsResponse* msg);
  static const ::org::dash::platform::dapi::v0::ConsensusParamsEvidence& evidence(const GetConsensusParamsResponse* msg);
};

const ::org::dash::platform::dapi::v0::ConsensusParamsBlock&
GetConsensusParamsResponse::_Internal::block(const GetConsensusParamsResponse* msg) {
  return *msg->block_;
}
const ::org::dash::platform::dapi::v0::ConsensusParamsEvidence&
GetConsensusParamsResponse::_Internal::evidence(const GetConsensusParamsResponse* msg) {
  return *msg->evidence_;
}
GetConsensusParamsResponse::GetConsensusParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetConsensusParamsResponse)
}
GetConsensusParamsResponse::GetConsensusParamsResponse(const GetConsensusParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_block()) {
    block_ = new ::org::dash::platform::dapi::v0::ConsensusParamsBlock(*from.block_);
  } else {
    block_ = nullptr;
  }
  if (from._internal_has_evidence()) {
    evidence_ = new ::org::dash::platform::dapi::v0::ConsensusParamsEvidence(*from.evidence_);
  } else {
    evidence_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetConsensusParamsResponse)
}

void GetConsensusParamsResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&block_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&evidence_) -
    reinterpret_cast<char*>(&block_)) + sizeof(evidence_));
}

GetConsensusParamsResponse::~GetConsensusParamsResponse() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetConsensusParamsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetConsensusParamsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete block_;
  if (this != internal_default_instance()) delete evidence_;
}

void GetConsensusParamsResponse::ArenaDtor(void* object) {
  GetConsensusParamsResponse* _this = reinterpret_cast< GetConsensusParamsResponse* >(object);
  (void)_this;
}
void GetConsensusParamsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetConsensusParamsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetConsensusParamsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetConsensusParamsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && block_ != nullptr) {
    delete block_;
  }
  block_ = nullptr;
  if (GetArenaForAllocation() == nullptr && evidence_ != nullptr) {
    delete evidence_;
  }
  evidence_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetConsensusParamsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .org.dash.platform.dapi.v0.ConsensusParamsBlock block = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_block(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .org.dash.platform.dapi.v0.ConsensusParamsEvidence evidence = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_evidence(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetConsensusParamsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetConsensusParamsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .org.dash.platform.dapi.v0.ConsensusParamsBlock block = 1;
  if (this->has_block()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::block(this), target, stream);
  }

  // .org.dash.platform.dapi.v0.ConsensusParamsEvidence evidence = 2;
  if (this->has_evidence()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::evidence(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetConsensusParamsResponse)
  return target;
}

size_t GetConsensusParamsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetConsensusParamsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .org.dash.platform.dapi.v0.ConsensusParamsBlock block = 1;
  if (this->has_block()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *block_);
  }

  // .org.dash.platform.dapi.v0.ConsensusParamsEvidence evidence = 2;
  if (this->has_evidence()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *evidence_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetConsensusParamsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetConsensusParamsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetConsensusParamsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetConsensusParamsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetConsensusParamsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetConsensusParamsResponse)
    MergeFrom(*source);
  }
}

void GetConsensusParamsResponse::MergeFrom(const GetConsensusParamsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetConsensusParamsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_block()) {
    _internal_mutable_block()->::org::dash::platform::dapi::v0::ConsensusParamsBlock::MergeFrom(from._internal_block());
  }
  if (from.has_evidence()) {
    _internal_mutable_evidence()->::org::dash::platform::dapi::v0::ConsensusParamsEvidence::MergeFrom(from._internal_evidence());
  }
}

void GetConsensusParamsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetConsensusParamsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetConsensusParamsResponse::CopyFrom(const GetConsensusParamsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetConsensusParamsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConsensusParamsResponse::IsInitialized() const {
  return true;
}

void GetConsensusParamsResponse::InternalSwap(GetConsensusParamsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetConsensusParamsResponse, evidence_)
      + sizeof(GetConsensusParamsResponse::evidence_)
      - PROTOBUF_FIELD_OFFSET(GetConsensusParamsResponse, block_)>(
          reinterpret_cast<char*>(&block_),
          reinterpret_cast<char*>(&other->block_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetConsensusParamsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_platform_2eproto_getter, &descriptor_table_platform_2eproto_once,
      file_level_metadata_platform_2eproto[21]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v0
}  // namespace dapi
}  // namespace platform
}  // namespace dash
}  // namespace org
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::StoreTreeProofs* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::StoreTreeProofs >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::StoreTreeProofs >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::Proof* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::Proof >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::Proof >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::ResponseMetadata* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::ResponseMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::ResponseMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::StateTransitionBroadcastError* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::StateTransitionBroadcastError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::StateTransitionBroadcastError >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetIdentityRequest* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetIdentityRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetIdentityRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetIdentityResponse* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetIdentityResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetIdentityResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetDataContractRequest* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetDataContractRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetDataContractRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetDataContractResponse* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetDataContractResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetDataContractResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetDocumentsRequest* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetDocumentsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetDocumentsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetDocumentsResponse* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetDocumentsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetDocumentsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::ConsensusParamsBlock* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::ConsensusParamsBlock >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::ConsensusParamsBlock >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::ConsensusParamsEvidence* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::ConsensusParamsEvidence >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::ConsensusParamsEvidence >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetConsensusParamsRequest* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetConsensusParamsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetConsensusParamsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetConsensusParamsResponse* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetConsensusParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetConsensusParamsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
