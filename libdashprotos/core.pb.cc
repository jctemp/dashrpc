// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core.proto

#include "core.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace org {
namespace dash {
namespace platform {
namespace dapi {
namespace v0 {
constexpr GetStatusRequest::GetStatusRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetStatusRequestDefaultTypeInternal {
  constexpr GetStatusRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetStatusRequestDefaultTypeInternal() {}
  union {
    GetStatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetStatusRequestDefaultTypeInternal _GetStatusRequest_default_instance_;
constexpr GetStatusResponse_Version::GetStatusResponse_Version(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : agent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , protocol_(0u)
  , software_(0u){}
struct GetStatusResponse_VersionDefaultTypeInternal {
  constexpr GetStatusResponse_VersionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetStatusResponse_VersionDefaultTypeInternal() {}
  union {
    GetStatusResponse_Version _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetStatusResponse_VersionDefaultTypeInternal _GetStatusResponse_Version_default_instance_;
constexpr GetStatusResponse_Time::GetStatusResponse_Time(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : now_(0u)
  , offset_(0)
  , median_(0u){}
struct GetStatusResponse_TimeDefaultTypeInternal {
  constexpr GetStatusResponse_TimeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetStatusResponse_TimeDefaultTypeInternal() {}
  union {
    GetStatusResponse_Time _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetStatusResponse_TimeDefaultTypeInternal _GetStatusResponse_Time_default_instance_;
constexpr GetStatusResponse_Chain::GetStatusResponse_Chain(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , best_block_hash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , chain_work_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , headers_count_(0u)
  , blocks_count_(0u)
  , difficulty_(0)
  , sync_progress_(0)
  , is_synced_(false){}
struct GetStatusResponse_ChainDefaultTypeInternal {
  constexpr GetStatusResponse_ChainDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetStatusResponse_ChainDefaultTypeInternal() {}
  union {
    GetStatusResponse_Chain _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetStatusResponse_ChainDefaultTypeInternal _GetStatusResponse_Chain_default_instance_;
constexpr GetStatusResponse_Masternode::GetStatusResponse_Masternode(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pro_tx_hash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(0)

  , pose_penalty_(0u)
  , sync_progress_(0)
  , is_synced_(false){}
struct GetStatusResponse_MasternodeDefaultTypeInternal {
  constexpr GetStatusResponse_MasternodeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetStatusResponse_MasternodeDefaultTypeInternal() {}
  union {
    GetStatusResponse_Masternode _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetStatusResponse_MasternodeDefaultTypeInternal _GetStatusResponse_Masternode_default_instance_;
constexpr GetStatusResponse_NetworkFee::GetStatusResponse_NetworkFee(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : relay_(0)
  , incremental_(0){}
struct GetStatusResponse_NetworkFeeDefaultTypeInternal {
  constexpr GetStatusResponse_NetworkFeeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetStatusResponse_NetworkFeeDefaultTypeInternal() {}
  union {
    GetStatusResponse_NetworkFee _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetStatusResponse_NetworkFeeDefaultTypeInternal _GetStatusResponse_NetworkFee_default_instance_;
constexpr GetStatusResponse_Network::GetStatusResponse_Network(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : fee_(nullptr)
  , peers_count_(0u){}
struct GetStatusResponse_NetworkDefaultTypeInternal {
  constexpr GetStatusResponse_NetworkDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetStatusResponse_NetworkDefaultTypeInternal() {}
  union {
    GetStatusResponse_Network _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetStatusResponse_NetworkDefaultTypeInternal _GetStatusResponse_Network_default_instance_;
constexpr GetStatusResponse::GetStatusResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : version_(nullptr)
  , time_(nullptr)
  , chain_(nullptr)
  , masternode_(nullptr)
  , network_(nullptr)
  , sync_progress_(0)
  , status_(0)
{}
struct GetStatusResponseDefaultTypeInternal {
  constexpr GetStatusResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetStatusResponseDefaultTypeInternal() {}
  union {
    GetStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetStatusResponseDefaultTypeInternal _GetStatusResponse_default_instance_;
constexpr GetBlockRequest::GetBlockRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct GetBlockRequestDefaultTypeInternal {
  constexpr GetBlockRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBlockRequestDefaultTypeInternal() {}
  union {
    GetBlockRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBlockRequestDefaultTypeInternal _GetBlockRequest_default_instance_;
constexpr GetBlockResponse::GetBlockResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : block_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetBlockResponseDefaultTypeInternal {
  constexpr GetBlockResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBlockResponseDefaultTypeInternal() {}
  union {
    GetBlockResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBlockResponseDefaultTypeInternal _GetBlockResponse_default_instance_;
constexpr BroadcastTransactionRequest::BroadcastTransactionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : transaction_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , allow_high_fees_(false)
  , bypass_limits_(false){}
struct BroadcastTransactionRequestDefaultTypeInternal {
  constexpr BroadcastTransactionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BroadcastTransactionRequestDefaultTypeInternal() {}
  union {
    BroadcastTransactionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BroadcastTransactionRequestDefaultTypeInternal _BroadcastTransactionRequest_default_instance_;
constexpr BroadcastTransactionResponse::BroadcastTransactionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : transaction_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct BroadcastTransactionResponseDefaultTypeInternal {
  constexpr BroadcastTransactionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BroadcastTransactionResponseDefaultTypeInternal() {}
  union {
    BroadcastTransactionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BroadcastTransactionResponseDefaultTypeInternal _BroadcastTransactionResponse_default_instance_;
constexpr GetTransactionRequest::GetTransactionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetTransactionRequestDefaultTypeInternal {
  constexpr GetTransactionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetTransactionRequestDefaultTypeInternal() {}
  union {
    GetTransactionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetTransactionRequestDefaultTypeInternal _GetTransactionRequest_default_instance_;
constexpr GetTransactionResponse::GetTransactionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : transaction_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , block_hash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , height_(0u)
  , confirmations_(0u)
  , is_instant_locked_(false)
  , is_chain_locked_(false){}
struct GetTransactionResponseDefaultTypeInternal {
  constexpr GetTransactionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetTransactionResponseDefaultTypeInternal() {}
  union {
    GetTransactionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetTransactionResponseDefaultTypeInternal _GetTransactionResponse_default_instance_;
constexpr BlockHeadersWithChainLocksRequest::BlockHeadersWithChainLocksRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : count_(0u)
  , _oneof_case_{}{}
struct BlockHeadersWithChainLocksRequestDefaultTypeInternal {
  constexpr BlockHeadersWithChainLocksRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BlockHeadersWithChainLocksRequestDefaultTypeInternal() {}
  union {
    BlockHeadersWithChainLocksRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BlockHeadersWithChainLocksRequestDefaultTypeInternal _BlockHeadersWithChainLocksRequest_default_instance_;
constexpr BlockHeadersWithChainLocksResponse::BlockHeadersWithChainLocksResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct BlockHeadersWithChainLocksResponseDefaultTypeInternal {
  constexpr BlockHeadersWithChainLocksResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BlockHeadersWithChainLocksResponseDefaultTypeInternal() {}
  union {
    BlockHeadersWithChainLocksResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BlockHeadersWithChainLocksResponseDefaultTypeInternal _BlockHeadersWithChainLocksResponse_default_instance_;
constexpr BlockHeaders::BlockHeaders(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : headers_(){}
struct BlockHeadersDefaultTypeInternal {
  constexpr BlockHeadersDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BlockHeadersDefaultTypeInternal() {}
  union {
    BlockHeaders _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BlockHeadersDefaultTypeInternal _BlockHeaders_default_instance_;
constexpr ChainLockSignatureMessages::ChainLockSignatureMessages(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : messages_(){}
struct ChainLockSignatureMessagesDefaultTypeInternal {
  constexpr ChainLockSignatureMessagesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ChainLockSignatureMessagesDefaultTypeInternal() {}
  union {
    ChainLockSignatureMessages _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ChainLockSignatureMessagesDefaultTypeInternal _ChainLockSignatureMessages_default_instance_;
constexpr GetEstimatedTransactionFeeRequest::GetEstimatedTransactionFeeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : blocks_(0u){}
struct GetEstimatedTransactionFeeRequestDefaultTypeInternal {
  constexpr GetEstimatedTransactionFeeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetEstimatedTransactionFeeRequestDefaultTypeInternal() {}
  union {
    GetEstimatedTransactionFeeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetEstimatedTransactionFeeRequestDefaultTypeInternal _GetEstimatedTransactionFeeRequest_default_instance_;
constexpr GetEstimatedTransactionFeeResponse::GetEstimatedTransactionFeeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : fee_(0){}
struct GetEstimatedTransactionFeeResponseDefaultTypeInternal {
  constexpr GetEstimatedTransactionFeeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetEstimatedTransactionFeeResponseDefaultTypeInternal() {}
  union {
    GetEstimatedTransactionFeeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetEstimatedTransactionFeeResponseDefaultTypeInternal _GetEstimatedTransactionFeeResponse_default_instance_;
constexpr TransactionsWithProofsRequest::TransactionsWithProofsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : bloom_filter_(nullptr)
  , count_(0u)
  , send_transaction_hashes_(false)
  , _oneof_case_{}{}
struct TransactionsWithProofsRequestDefaultTypeInternal {
  constexpr TransactionsWithProofsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TransactionsWithProofsRequestDefaultTypeInternal() {}
  union {
    TransactionsWithProofsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TransactionsWithProofsRequestDefaultTypeInternal _TransactionsWithProofsRequest_default_instance_;
constexpr BloomFilter::BloomFilter(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : v_data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , n_hash_funcs_(0u)
  , n_tweak_(0u)
  , n_flags_(0u){}
struct BloomFilterDefaultTypeInternal {
  constexpr BloomFilterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BloomFilterDefaultTypeInternal() {}
  union {
    BloomFilter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BloomFilterDefaultTypeInternal _BloomFilter_default_instance_;
constexpr TransactionsWithProofsResponse::TransactionsWithProofsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct TransactionsWithProofsResponseDefaultTypeInternal {
  constexpr TransactionsWithProofsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TransactionsWithProofsResponseDefaultTypeInternal() {}
  union {
    TransactionsWithProofsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TransactionsWithProofsResponseDefaultTypeInternal _TransactionsWithProofsResponse_default_instance_;
constexpr RawTransactions::RawTransactions(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : transactions_(){}
struct RawTransactionsDefaultTypeInternal {
  constexpr RawTransactionsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RawTransactionsDefaultTypeInternal() {}
  union {
    RawTransactions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RawTransactionsDefaultTypeInternal _RawTransactions_default_instance_;
constexpr InstantSendLockMessages::InstantSendLockMessages(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : messages_(){}
struct InstantSendLockMessagesDefaultTypeInternal {
  constexpr InstantSendLockMessagesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~InstantSendLockMessagesDefaultTypeInternal() {}
  union {
    InstantSendLockMessages _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT InstantSendLockMessagesDefaultTypeInternal _InstantSendLockMessages_default_instance_;
}  // namespace v0
}  // namespace dapi
}  // namespace platform
}  // namespace dash
}  // namespace org
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_core_2eproto[25];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_core_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_core_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_core_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Version, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Version, protocol_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Version, software_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Version, agent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Time, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Time, now_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Time, offset_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Time, median_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Chain, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Chain, name_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Chain, headers_count_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Chain, blocks_count_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Chain, best_block_hash_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Chain, difficulty_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Chain, chain_work_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Chain, is_synced_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Chain, sync_progress_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Masternode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Masternode, status_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Masternode, pro_tx_hash_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Masternode, pose_penalty_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Masternode, is_synced_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Masternode, sync_progress_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee, relay_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee, incremental_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Network, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Network, peers_count_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse_Network, fee_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse, version_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse, time_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse, status_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse, sync_progress_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse, chain_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse, masternode_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetStatusResponse, network_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetBlockRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetBlockRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetBlockRequest, block_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetBlockResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetBlockResponse, block_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::BroadcastTransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::BroadcastTransactionRequest, transaction_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::BroadcastTransactionRequest, allow_high_fees_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::BroadcastTransactionRequest, bypass_limits_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::BroadcastTransactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::BroadcastTransactionResponse, transaction_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetTransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetTransactionRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetTransactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetTransactionResponse, transaction_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetTransactionResponse, block_hash_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetTransactionResponse, height_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetTransactionResponse, confirmations_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetTransactionResponse, is_instant_locked_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetTransactionResponse, is_chain_locked_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::BlockHeadersWithChainLocksRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::BlockHeadersWithChainLocksRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::BlockHeadersWithChainLocksRequest, count_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::BlockHeadersWithChainLocksRequest, from_block_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::BlockHeadersWithChainLocksResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::BlockHeadersWithChainLocksResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::BlockHeadersWithChainLocksResponse, responses_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::BlockHeaders, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::BlockHeaders, headers_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::ChainLockSignatureMessages, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::ChainLockSignatureMessages, messages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetEstimatedTransactionFeeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetEstimatedTransactionFeeRequest, blocks_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetEstimatedTransactionFeeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::GetEstimatedTransactionFeeResponse, fee_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::TransactionsWithProofsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::TransactionsWithProofsRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::TransactionsWithProofsRequest, bloom_filter_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::TransactionsWithProofsRequest, count_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::TransactionsWithProofsRequest, send_transaction_hashes_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::TransactionsWithProofsRequest, from_block_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::BloomFilter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::BloomFilter, v_data_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::BloomFilter, n_hash_funcs_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::BloomFilter, n_tweak_),
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::BloomFilter, n_flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::TransactionsWithProofsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::TransactionsWithProofsResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::TransactionsWithProofsResponse, responses_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::RawTransactions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::RawTransactions, transactions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::InstantSendLockMessages, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::org::dash::platform::dapi::v0::InstantSendLockMessages, messages_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::org::dash::platform::dapi::v0::GetStatusRequest)},
  { 5, -1, sizeof(::org::dash::platform::dapi::v0::GetStatusResponse_Version)},
  { 13, -1, sizeof(::org::dash::platform::dapi::v0::GetStatusResponse_Time)},
  { 21, -1, sizeof(::org::dash::platform::dapi::v0::GetStatusResponse_Chain)},
  { 34, -1, sizeof(::org::dash::platform::dapi::v0::GetStatusResponse_Masternode)},
  { 44, -1, sizeof(::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee)},
  { 51, -1, sizeof(::org::dash::platform::dapi::v0::GetStatusResponse_Network)},
  { 58, -1, sizeof(::org::dash::platform::dapi::v0::GetStatusResponse)},
  { 70, -1, sizeof(::org::dash::platform::dapi::v0::GetBlockRequest)},
  { 78, -1, sizeof(::org::dash::platform::dapi::v0::GetBlockResponse)},
  { 84, -1, sizeof(::org::dash::platform::dapi::v0::BroadcastTransactionRequest)},
  { 92, -1, sizeof(::org::dash::platform::dapi::v0::BroadcastTransactionResponse)},
  { 98, -1, sizeof(::org::dash::platform::dapi::v0::GetTransactionRequest)},
  { 104, -1, sizeof(::org::dash::platform::dapi::v0::GetTransactionResponse)},
  { 115, -1, sizeof(::org::dash::platform::dapi::v0::BlockHeadersWithChainLocksRequest)},
  { 124, -1, sizeof(::org::dash::platform::dapi::v0::BlockHeadersWithChainLocksResponse)},
  { 132, -1, sizeof(::org::dash::platform::dapi::v0::BlockHeaders)},
  { 138, -1, sizeof(::org::dash::platform::dapi::v0::ChainLockSignatureMessages)},
  { 144, -1, sizeof(::org::dash::platform::dapi::v0::GetEstimatedTransactionFeeRequest)},
  { 150, -1, sizeof(::org::dash::platform::dapi::v0::GetEstimatedTransactionFeeResponse)},
  { 156, -1, sizeof(::org::dash::platform::dapi::v0::TransactionsWithProofsRequest)},
  { 167, -1, sizeof(::org::dash::platform::dapi::v0::BloomFilter)},
  { 176, -1, sizeof(::org::dash::platform::dapi::v0::TransactionsWithProofsResponse)},
  { 185, -1, sizeof(::org::dash::platform::dapi::v0::RawTransactions)},
  { 191, -1, sizeof(::org::dash::platform::dapi::v0::InstantSendLockMessages)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetStatusRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetStatusResponse_Version_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetStatusResponse_Time_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetStatusResponse_Chain_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetStatusResponse_Masternode_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetStatusResponse_NetworkFee_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetStatusResponse_Network_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetStatusResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetBlockRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetBlockResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_BroadcastTransactionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_BroadcastTransactionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetTransactionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetTransactionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_BlockHeadersWithChainLocksRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_BlockHeadersWithChainLocksResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_BlockHeaders_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_ChainLockSignatureMessages_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetEstimatedTransactionFeeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_GetEstimatedTransactionFeeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_TransactionsWithProofsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_BloomFilter_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_TransactionsWithProofsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_RawTransactions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::org::dash::platform::dapi::v0::_InstantSendLockMessages_default_instance_),
};

const char descriptor_table_protodef_core_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\ncore.proto\022\031org.dash.platform.dapi.v0\""
  "\022\n\020GetStatusRequest\"\216\n\n\021GetStatusRespons"
  "e\022E\n\007version\030\001 \001(\01324.org.dash.platform.d"
  "api.v0.GetStatusResponse.Version\022\?\n\004time"
  "\030\002 \001(\01321.org.dash.platform.dapi.v0.GetSt"
  "atusResponse.Time\022C\n\006status\030\003 \001(\01623.org."
  "dash.platform.dapi.v0.GetStatusResponse."
  "Status\022\025\n\rsync_progress\030\004 \001(\001\022A\n\005chain\030\005"
  " \001(\01322.org.dash.platform.dapi.v0.GetStat"
  "usResponse.Chain\022K\n\nmasternode\030\006 \001(\01327.o"
  "rg.dash.platform.dapi.v0.GetStatusRespon"
  "se.Masternode\022E\n\007network\030\007 \001(\01324.org.das"
  "h.platform.dapi.v0.GetStatusResponse.Net"
  "work\032<\n\007Version\022\020\n\010protocol\030\001 \001(\r\022\020\n\010sof"
  "tware\030\002 \001(\r\022\r\n\005agent\030\003 \001(\t\0323\n\004Time\022\013\n\003no"
  "w\030\001 \001(\r\022\016\n\006offset\030\002 \001(\005\022\016\n\006median\030\003 \001(\r\032"
  "\255\001\n\005Chain\022\014\n\004name\030\001 \001(\t\022\025\n\rheaders_count"
  "\030\002 \001(\r\022\024\n\014blocks_count\030\003 \001(\r\022\027\n\017best_blo"
  "ck_hash\030\004 \001(\014\022\022\n\ndifficulty\030\005 \001(\001\022\022\n\ncha"
  "in_work\030\006 \001(\014\022\021\n\tis_synced\030\007 \001(\010\022\025\n\rsync"
  "_progress\030\010 \001(\001\032\304\002\n\nMasternode\022N\n\006status"
  "\030\001 \001(\0162>.org.dash.platform.dapi.v0.GetSt"
  "atusResponse.Masternode.Status\022\023\n\013pro_tx"
  "_hash\030\002 \001(\014\022\024\n\014pose_penalty\030\003 \001(\r\022\021\n\tis_"
  "synced\030\004 \001(\010\022\025\n\rsync_progress\030\005 \001(\001\"\220\001\n\006"
  "Status\022\013\n\007UNKNOWN\020\000\022\025\n\021WAITING_FOR_PROTX"
  "\020\001\022\017\n\013POSE_BANNED\020\002\022\013\n\007REMOVED\020\003\022\030\n\024OPER"
  "ATOR_KEY_CHANGED\020\004\022\024\n\020PROTX_IP_CHANGED\020\005"
  "\022\t\n\005READY\020\006\022\t\n\005ERROR\020\007\0320\n\nNetworkFee\022\r\n\005"
  "relay\030\001 \001(\001\022\023\n\013incremental\030\002 \001(\001\032d\n\007Netw"
  "ork\022\023\n\013peers_count\030\001 \001(\r\022D\n\003fee\030\002 \001(\01327."
  "org.dash.platform.dapi.v0.GetStatusRespo"
  "nse.NetworkFee\"<\n\006Status\022\017\n\013NOT_STARTED\020"
  "\000\022\013\n\007SYNCING\020\001\022\t\n\005READY\020\002\022\t\n\005ERROR\020\003\"<\n\017"
  "GetBlockRequest\022\020\n\006height\030\001 \001(\rH\000\022\016\n\004has"
  "h\030\002 \001(\tH\000B\007\n\005block\"!\n\020GetBlockResponse\022\r"
  "\n\005block\030\001 \001(\014\"b\n\033BroadcastTransactionReq"
  "uest\022\023\n\013transaction\030\001 \001(\014\022\027\n\017allow_high_"
  "fees\030\002 \001(\010\022\025\n\rbypass_limits\030\003 \001(\010\"6\n\034Bro"
  "adcastTransactionResponse\022\026\n\016transaction"
  "_id\030\001 \001(\t\"#\n\025GetTransactionRequest\022\n\n\002id"
  "\030\001 \001(\t\"\234\001\n\026GetTransactionResponse\022\023\n\013tra"
  "nsaction\030\001 \001(\014\022\022\n\nblock_hash\030\002 \001(\014\022\016\n\006he"
  "ight\030\003 \001(\r\022\025\n\rconfirmations\030\004 \001(\r\022\031\n\021is_"
  "instant_locked\030\005 \001(\010\022\027\n\017is_chain_locked\030"
  "\006 \001(\010\"x\n!BlockHeadersWithChainLocksReque"
  "st\022\031\n\017from_block_hash\030\001 \001(\014H\000\022\033\n\021from_bl"
  "ock_height\030\002 \001(\rH\000\022\r\n\005count\030\003 \001(\rB\014\n\nfro"
  "m_block\"\323\001\n\"BlockHeadersWithChainLocksRe"
  "sponse\022@\n\rblock_headers\030\001 \001(\0132\'.org.dash"
  ".platform.dapi.v0.BlockHeadersH\000\022^\n\035chai"
  "n_lock_signature_messages\030\002 \001(\01325.org.da"
  "sh.platform.dapi.v0.ChainLockSignatureMe"
  "ssagesH\000B\013\n\tresponses\"\037\n\014BlockHeaders\022\017\n"
  "\007headers\030\001 \003(\014\".\n\032ChainLockSignatureMess"
  "ages\022\020\n\010messages\030\001 \003(\014\"3\n!GetEstimatedTr"
  "ansactionFeeRequest\022\016\n\006blocks\030\001 \001(\r\"1\n\"G"
  "etEstimatedTransactionFeeResponse\022\013\n\003fee"
  "\030\001 \001(\001\"\323\001\n\035TransactionsWithProofsRequest"
  "\022<\n\014bloom_filter\030\001 \001(\0132&.org.dash.platfo"
  "rm.dapi.v0.BloomFilter\022\031\n\017from_block_has"
  "h\030\002 \001(\014H\000\022\033\n\021from_block_height\030\003 \001(\rH\000\022\r"
  "\n\005count\030\004 \001(\r\022\037\n\027send_transaction_hashes"
  "\030\005 \001(\010B\014\n\nfrom_block\"U\n\013BloomFilter\022\016\n\006v"
  "_data\030\001 \001(\014\022\024\n\014n_hash_funcs\030\002 \001(\r\022\017\n\007n_t"
  "weak\030\003 \001(\r\022\017\n\007n_flags\030\004 \001(\r\"\353\001\n\036Transact"
  "ionsWithProofsResponse\022F\n\020raw_transactio"
  "ns\030\001 \001(\0132*.org.dash.platform.dapi.v0.Raw"
  "TransactionsH\000\022X\n\032instant_send_lock_mess"
  "ages\030\002 \001(\01322.org.dash.platform.dapi.v0.I"
  "nstantSendLockMessagesH\000\022\032\n\020raw_merkle_b"
  "lock\030\003 \001(\014H\000B\013\n\tresponses\"\'\n\017RawTransact"
  "ions\022\024\n\014transactions\030\001 \003(\014\"+\n\027InstantSen"
  "dLockMessages\022\020\n\010messages\030\001 \003(\0142\266\007\n\004Core"
  "\022f\n\tgetStatus\022+.org.dash.platform.dapi.v"
  "0.GetStatusRequest\032,.org.dash.platform.d"
  "api.v0.GetStatusResponse\022c\n\010getBlock\022*.o"
  "rg.dash.platform.dapi.v0.GetBlockRequest"
  "\032+.org.dash.platform.dapi.v0.GetBlockRes"
  "ponse\022\207\001\n\024broadcastTransaction\0226.org.das"
  "h.platform.dapi.v0.BroadcastTransactionR"
  "equest\0327.org.dash.platform.dapi.v0.Broad"
  "castTransactionResponse\022u\n\016getTransactio"
  "n\0220.org.dash.platform.dapi.v0.GetTransac"
  "tionRequest\0321.org.dash.platform.dapi.v0."
  "GetTransactionResponse\022\231\001\n\032getEstimatedT"
  "ransactionFee\022<.org.dash.platform.dapi.v"
  "0.GetEstimatedTransactionFeeRequest\032=.or"
  "g.dash.platform.dapi.v0.GetEstimatedTran"
  "sactionFeeResponse\022\246\001\n%subscribeToBlockH"
  "eadersWithChainLocks\022<.org.dash.platform"
  ".dapi.v0.BlockHeadersWithChainLocksReque"
  "st\032=.org.dash.platform.dapi.v0.BlockHead"
  "ersWithChainLocksResponse0\001\022\232\001\n!subscrib"
  "eToTransactionsWithProofs\0228.org.dash.pla"
  "tform.dapi.v0.TransactionsWithProofsRequ"
  "est\0329.org.dash.platform.dapi.v0.Transact"
  "ionsWithProofsResponse0\001b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_core_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_core_2eproto = {
  false, false, 3912, descriptor_table_protodef_core_2eproto, "core.proto", 
  &descriptor_table_core_2eproto_once, nullptr, 0, 25,
  schemas, file_default_instances, TableStruct_core_2eproto::offsets,
  file_level_metadata_core_2eproto, file_level_enum_descriptors_core_2eproto, file_level_service_descriptors_core_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_core_2eproto_getter() {
  return &descriptor_table_core_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_core_2eproto(&descriptor_table_core_2eproto);
namespace org {
namespace dash {
namespace platform {
namespace dapi {
namespace v0 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetStatusResponse_Masternode_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_core_2eproto);
  return file_level_enum_descriptors_core_2eproto[0];
}
bool GetStatusResponse_Masternode_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr GetStatusResponse_Masternode_Status GetStatusResponse_Masternode::UNKNOWN;
constexpr GetStatusResponse_Masternode_Status GetStatusResponse_Masternode::WAITING_FOR_PROTX;
constexpr GetStatusResponse_Masternode_Status GetStatusResponse_Masternode::POSE_BANNED;
constexpr GetStatusResponse_Masternode_Status GetStatusResponse_Masternode::REMOVED;
constexpr GetStatusResponse_Masternode_Status GetStatusResponse_Masternode::OPERATOR_KEY_CHANGED;
constexpr GetStatusResponse_Masternode_Status GetStatusResponse_Masternode::PROTX_IP_CHANGED;
constexpr GetStatusResponse_Masternode_Status GetStatusResponse_Masternode::READY;
constexpr GetStatusResponse_Masternode_Status GetStatusResponse_Masternode::ERROR;
constexpr GetStatusResponse_Masternode_Status GetStatusResponse_Masternode::Status_MIN;
constexpr GetStatusResponse_Masternode_Status GetStatusResponse_Masternode::Status_MAX;
constexpr int GetStatusResponse_Masternode::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetStatusResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_core_2eproto);
  return file_level_enum_descriptors_core_2eproto[1];
}
bool GetStatusResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr GetStatusResponse_Status GetStatusResponse::NOT_STARTED;
constexpr GetStatusResponse_Status GetStatusResponse::SYNCING;
constexpr GetStatusResponse_Status GetStatusResponse::READY;
constexpr GetStatusResponse_Status GetStatusResponse::ERROR;
constexpr GetStatusResponse_Status GetStatusResponse::Status_MIN;
constexpr GetStatusResponse_Status GetStatusResponse::Status_MAX;
constexpr int GetStatusResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class GetStatusRequest::_Internal {
 public:
};

GetStatusRequest::GetStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetStatusRequest)
}
GetStatusRequest::GetStatusRequest(const GetStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetStatusRequest)
}

void GetStatusRequest::SharedCtor() {
}

GetStatusRequest::~GetStatusRequest() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetStatusRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetStatusRequest::ArenaDtor(void* object) {
  GetStatusRequest* _this = reinterpret_cast< GetStatusRequest* >(object);
  (void)_this;
}
void GetStatusRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStatusRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetStatusRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetStatusRequest)
  return target;
}

size_t GetStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetStatusRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStatusRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStatusRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetStatusRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetStatusRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetStatusRequest)
    MergeFrom(*source);
  }
}

void GetStatusRequest::MergeFrom(const GetStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetStatusRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStatusRequest::CopyFrom(const GetStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatusRequest::IsInitialized() const {
  return true;
}

void GetStatusRequest::InternalSwap(GetStatusRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStatusRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[0]);
}

// ===================================================================

class GetStatusResponse_Version::_Internal {
 public:
};

GetStatusResponse_Version::GetStatusResponse_Version(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetStatusResponse.Version)
}
GetStatusResponse_Version::GetStatusResponse_Version(const GetStatusResponse_Version& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  agent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_agent().empty()) {
    agent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_agent(), 
      GetArenaForAllocation());
  }
  ::memcpy(&protocol_, &from.protocol_,
    static_cast<size_t>(reinterpret_cast<char*>(&software_) -
    reinterpret_cast<char*>(&protocol_)) + sizeof(software_));
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetStatusResponse.Version)
}

void GetStatusResponse_Version::SharedCtor() {
agent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&protocol_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&software_) -
    reinterpret_cast<char*>(&protocol_)) + sizeof(software_));
}

GetStatusResponse_Version::~GetStatusResponse_Version() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetStatusResponse.Version)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetStatusResponse_Version::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  agent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetStatusResponse_Version::ArenaDtor(void* object) {
  GetStatusResponse_Version* _this = reinterpret_cast< GetStatusResponse_Version* >(object);
  (void)_this;
}
void GetStatusResponse_Version::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetStatusResponse_Version::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetStatusResponse_Version::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetStatusResponse.Version)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  agent_.ClearToEmpty();
  ::memset(&protocol_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&software_) -
      reinterpret_cast<char*>(&protocol_)) + sizeof(software_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStatusResponse_Version::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 protocol = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          protocol_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 software = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          software_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string agent = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_agent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "org.dash.platform.dapi.v0.GetStatusResponse.Version.agent"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetStatusResponse_Version::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetStatusResponse.Version)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 protocol = 1;
  if (this->protocol() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_protocol(), target);
  }

  // uint32 software = 2;
  if (this->software() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_software(), target);
  }

  // string agent = 3;
  if (!this->agent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_agent().data(), static_cast<int>(this->_internal_agent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "org.dash.platform.dapi.v0.GetStatusResponse.Version.agent");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_agent(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetStatusResponse.Version)
  return target;
}

size_t GetStatusResponse_Version::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetStatusResponse.Version)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string agent = 3;
  if (!this->agent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_agent());
  }

  // uint32 protocol = 1;
  if (this->protocol() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_protocol());
  }

  // uint32 software = 2;
  if (this->software() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_software());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStatusResponse_Version::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetStatusResponse.Version)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStatusResponse_Version* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetStatusResponse_Version>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetStatusResponse.Version)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetStatusResponse.Version)
    MergeFrom(*source);
  }
}

void GetStatusResponse_Version::MergeFrom(const GetStatusResponse_Version& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetStatusResponse.Version)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.agent().empty()) {
    _internal_set_agent(from._internal_agent());
  }
  if (from.protocol() != 0) {
    _internal_set_protocol(from._internal_protocol());
  }
  if (from.software() != 0) {
    _internal_set_software(from._internal_software());
  }
}

void GetStatusResponse_Version::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetStatusResponse.Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStatusResponse_Version::CopyFrom(const GetStatusResponse_Version& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetStatusResponse.Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatusResponse_Version::IsInitialized() const {
  return true;
}

void GetStatusResponse_Version::InternalSwap(GetStatusResponse_Version* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &agent_, GetArenaForAllocation(),
      &other->agent_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetStatusResponse_Version, software_)
      + sizeof(GetStatusResponse_Version::software_)
      - PROTOBUF_FIELD_OFFSET(GetStatusResponse_Version, protocol_)>(
          reinterpret_cast<char*>(&protocol_),
          reinterpret_cast<char*>(&other->protocol_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStatusResponse_Version::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[1]);
}

// ===================================================================

class GetStatusResponse_Time::_Internal {
 public:
};

GetStatusResponse_Time::GetStatusResponse_Time(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetStatusResponse.Time)
}
GetStatusResponse_Time::GetStatusResponse_Time(const GetStatusResponse_Time& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&now_, &from.now_,
    static_cast<size_t>(reinterpret_cast<char*>(&median_) -
    reinterpret_cast<char*>(&now_)) + sizeof(median_));
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetStatusResponse.Time)
}

void GetStatusResponse_Time::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&now_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&median_) -
    reinterpret_cast<char*>(&now_)) + sizeof(median_));
}

GetStatusResponse_Time::~GetStatusResponse_Time() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetStatusResponse.Time)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetStatusResponse_Time::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetStatusResponse_Time::ArenaDtor(void* object) {
  GetStatusResponse_Time* _this = reinterpret_cast< GetStatusResponse_Time* >(object);
  (void)_this;
}
void GetStatusResponse_Time::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetStatusResponse_Time::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetStatusResponse_Time::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetStatusResponse.Time)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&now_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&median_) -
      reinterpret_cast<char*>(&now_)) + sizeof(median_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStatusResponse_Time::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 now = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          now_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 offset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 median = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          median_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetStatusResponse_Time::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetStatusResponse.Time)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 now = 1;
  if (this->now() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_now(), target);
  }

  // int32 offset = 2;
  if (this->offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_offset(), target);
  }

  // uint32 median = 3;
  if (this->median() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_median(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetStatusResponse.Time)
  return target;
}

size_t GetStatusResponse_Time::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetStatusResponse.Time)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 now = 1;
  if (this->now() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_now());
  }

  // int32 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_offset());
  }

  // uint32 median = 3;
  if (this->median() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_median());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStatusResponse_Time::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetStatusResponse.Time)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStatusResponse_Time* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetStatusResponse_Time>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetStatusResponse.Time)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetStatusResponse.Time)
    MergeFrom(*source);
  }
}

void GetStatusResponse_Time::MergeFrom(const GetStatusResponse_Time& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetStatusResponse.Time)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.now() != 0) {
    _internal_set_now(from._internal_now());
  }
  if (from.offset() != 0) {
    _internal_set_offset(from._internal_offset());
  }
  if (from.median() != 0) {
    _internal_set_median(from._internal_median());
  }
}

void GetStatusResponse_Time::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetStatusResponse.Time)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStatusResponse_Time::CopyFrom(const GetStatusResponse_Time& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetStatusResponse.Time)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatusResponse_Time::IsInitialized() const {
  return true;
}

void GetStatusResponse_Time::InternalSwap(GetStatusResponse_Time* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetStatusResponse_Time, median_)
      + sizeof(GetStatusResponse_Time::median_)
      - PROTOBUF_FIELD_OFFSET(GetStatusResponse_Time, now_)>(
          reinterpret_cast<char*>(&now_),
          reinterpret_cast<char*>(&other->now_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStatusResponse_Time::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[2]);
}

// ===================================================================

class GetStatusResponse_Chain::_Internal {
 public:
};

GetStatusResponse_Chain::GetStatusResponse_Chain(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetStatusResponse.Chain)
}
GetStatusResponse_Chain::GetStatusResponse_Chain(const GetStatusResponse_Chain& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  best_block_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_best_block_hash().empty()) {
    best_block_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_best_block_hash(), 
      GetArenaForAllocation());
  }
  chain_work_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_chain_work().empty()) {
    chain_work_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_chain_work(), 
      GetArenaForAllocation());
  }
  ::memcpy(&headers_count_, &from.headers_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_synced_) -
    reinterpret_cast<char*>(&headers_count_)) + sizeof(is_synced_));
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetStatusResponse.Chain)
}

void GetStatusResponse_Chain::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
best_block_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
chain_work_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&headers_count_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&is_synced_) -
    reinterpret_cast<char*>(&headers_count_)) + sizeof(is_synced_));
}

GetStatusResponse_Chain::~GetStatusResponse_Chain() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetStatusResponse.Chain)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetStatusResponse_Chain::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  best_block_hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  chain_work_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetStatusResponse_Chain::ArenaDtor(void* object) {
  GetStatusResponse_Chain* _this = reinterpret_cast< GetStatusResponse_Chain* >(object);
  (void)_this;
}
void GetStatusResponse_Chain::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetStatusResponse_Chain::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetStatusResponse_Chain::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetStatusResponse.Chain)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  best_block_hash_.ClearToEmpty();
  chain_work_.ClearToEmpty();
  ::memset(&headers_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_synced_) -
      reinterpret_cast<char*>(&headers_count_)) + sizeof(is_synced_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStatusResponse_Chain::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "org.dash.platform.dapi.v0.GetStatusResponse.Chain.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 headers_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          headers_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 blocks_count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          blocks_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes best_block_hash = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_best_block_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double difficulty = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          difficulty_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // bytes chain_work = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_chain_work();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_synced = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          is_synced_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double sync_progress = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 65)) {
          sync_progress_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetStatusResponse_Chain::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetStatusResponse.Chain)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "org.dash.platform.dapi.v0.GetStatusResponse.Chain.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // uint32 headers_count = 2;
  if (this->headers_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_headers_count(), target);
  }

  // uint32 blocks_count = 3;
  if (this->blocks_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_blocks_count(), target);
  }

  // bytes best_block_hash = 4;
  if (!this->best_block_hash().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_best_block_hash(), target);
  }

  // double difficulty = 5;
  if (!(this->difficulty() <= 0 && this->difficulty() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_difficulty(), target);
  }

  // bytes chain_work = 6;
  if (!this->chain_work().empty()) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_chain_work(), target);
  }

  // bool is_synced = 7;
  if (this->is_synced() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_is_synced(), target);
  }

  // double sync_progress = 8;
  if (!(this->sync_progress() <= 0 && this->sync_progress() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(8, this->_internal_sync_progress(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetStatusResponse.Chain)
  return target;
}

size_t GetStatusResponse_Chain::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetStatusResponse.Chain)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bytes best_block_hash = 4;
  if (!this->best_block_hash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_best_block_hash());
  }

  // bytes chain_work = 6;
  if (!this->chain_work().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_chain_work());
  }

  // uint32 headers_count = 2;
  if (this->headers_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_headers_count());
  }

  // uint32 blocks_count = 3;
  if (this->blocks_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_blocks_count());
  }

  // double difficulty = 5;
  if (!(this->difficulty() <= 0 && this->difficulty() >= 0)) {
    total_size += 1 + 8;
  }

  // double sync_progress = 8;
  if (!(this->sync_progress() <= 0 && this->sync_progress() >= 0)) {
    total_size += 1 + 8;
  }

  // bool is_synced = 7;
  if (this->is_synced() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStatusResponse_Chain::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetStatusResponse.Chain)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStatusResponse_Chain* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetStatusResponse_Chain>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetStatusResponse.Chain)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetStatusResponse.Chain)
    MergeFrom(*source);
  }
}

void GetStatusResponse_Chain::MergeFrom(const GetStatusResponse_Chain& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetStatusResponse.Chain)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from.best_block_hash().empty()) {
    _internal_set_best_block_hash(from._internal_best_block_hash());
  }
  if (!from.chain_work().empty()) {
    _internal_set_chain_work(from._internal_chain_work());
  }
  if (from.headers_count() != 0) {
    _internal_set_headers_count(from._internal_headers_count());
  }
  if (from.blocks_count() != 0) {
    _internal_set_blocks_count(from._internal_blocks_count());
  }
  if (!(from.difficulty() <= 0 && from.difficulty() >= 0)) {
    _internal_set_difficulty(from._internal_difficulty());
  }
  if (!(from.sync_progress() <= 0 && from.sync_progress() >= 0)) {
    _internal_set_sync_progress(from._internal_sync_progress());
  }
  if (from.is_synced() != 0) {
    _internal_set_is_synced(from._internal_is_synced());
  }
}

void GetStatusResponse_Chain::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetStatusResponse.Chain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStatusResponse_Chain::CopyFrom(const GetStatusResponse_Chain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetStatusResponse.Chain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatusResponse_Chain::IsInitialized() const {
  return true;
}

void GetStatusResponse_Chain::InternalSwap(GetStatusResponse_Chain* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, GetArenaForAllocation(),
      &other->name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &best_block_hash_, GetArenaForAllocation(),
      &other->best_block_hash_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &chain_work_, GetArenaForAllocation(),
      &other->chain_work_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetStatusResponse_Chain, is_synced_)
      + sizeof(GetStatusResponse_Chain::is_synced_)
      - PROTOBUF_FIELD_OFFSET(GetStatusResponse_Chain, headers_count_)>(
          reinterpret_cast<char*>(&headers_count_),
          reinterpret_cast<char*>(&other->headers_count_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStatusResponse_Chain::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[3]);
}

// ===================================================================

class GetStatusResponse_Masternode::_Internal {
 public:
};

GetStatusResponse_Masternode::GetStatusResponse_Masternode(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetStatusResponse.Masternode)
}
GetStatusResponse_Masternode::GetStatusResponse_Masternode(const GetStatusResponse_Masternode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pro_tx_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pro_tx_hash().empty()) {
    pro_tx_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pro_tx_hash(), 
      GetArenaForAllocation());
  }
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_synced_) -
    reinterpret_cast<char*>(&status_)) + sizeof(is_synced_));
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetStatusResponse.Masternode)
}

void GetStatusResponse_Masternode::SharedCtor() {
pro_tx_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&is_synced_) -
    reinterpret_cast<char*>(&status_)) + sizeof(is_synced_));
}

GetStatusResponse_Masternode::~GetStatusResponse_Masternode() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetStatusResponse.Masternode)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetStatusResponse_Masternode::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  pro_tx_hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetStatusResponse_Masternode::ArenaDtor(void* object) {
  GetStatusResponse_Masternode* _this = reinterpret_cast< GetStatusResponse_Masternode* >(object);
  (void)_this;
}
void GetStatusResponse_Masternode::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetStatusResponse_Masternode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetStatusResponse_Masternode::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetStatusResponse.Masternode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pro_tx_hash_.ClearToEmpty();
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_synced_) -
      reinterpret_cast<char*>(&status_)) + sizeof(is_synced_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStatusResponse_Masternode::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .org.dash.platform.dapi.v0.GetStatusResponse.Masternode.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::org::dash::platform::dapi::v0::GetStatusResponse_Masternode_Status>(val));
        } else goto handle_unusual;
        continue;
      // bytes pro_tx_hash = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_pro_tx_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 pose_penalty = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          pose_penalty_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_synced = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          is_synced_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double sync_progress = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          sync_progress_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetStatusResponse_Masternode::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetStatusResponse.Masternode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .org.dash.platform.dapi.v0.GetStatusResponse.Masternode.Status status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // bytes pro_tx_hash = 2;
  if (!this->pro_tx_hash().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_pro_tx_hash(), target);
  }

  // uint32 pose_penalty = 3;
  if (this->pose_penalty() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_pose_penalty(), target);
  }

  // bool is_synced = 4;
  if (this->is_synced() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_is_synced(), target);
  }

  // double sync_progress = 5;
  if (!(this->sync_progress() <= 0 && this->sync_progress() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_sync_progress(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetStatusResponse.Masternode)
  return target;
}

size_t GetStatusResponse_Masternode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetStatusResponse.Masternode)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes pro_tx_hash = 2;
  if (!this->pro_tx_hash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pro_tx_hash());
  }

  // .org.dash.platform.dapi.v0.GetStatusResponse.Masternode.Status status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  // uint32 pose_penalty = 3;
  if (this->pose_penalty() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_pose_penalty());
  }

  // double sync_progress = 5;
  if (!(this->sync_progress() <= 0 && this->sync_progress() >= 0)) {
    total_size += 1 + 8;
  }

  // bool is_synced = 4;
  if (this->is_synced() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStatusResponse_Masternode::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetStatusResponse.Masternode)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStatusResponse_Masternode* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetStatusResponse_Masternode>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetStatusResponse.Masternode)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetStatusResponse.Masternode)
    MergeFrom(*source);
  }
}

void GetStatusResponse_Masternode::MergeFrom(const GetStatusResponse_Masternode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetStatusResponse.Masternode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.pro_tx_hash().empty()) {
    _internal_set_pro_tx_hash(from._internal_pro_tx_hash());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
  if (from.pose_penalty() != 0) {
    _internal_set_pose_penalty(from._internal_pose_penalty());
  }
  if (!(from.sync_progress() <= 0 && from.sync_progress() >= 0)) {
    _internal_set_sync_progress(from._internal_sync_progress());
  }
  if (from.is_synced() != 0) {
    _internal_set_is_synced(from._internal_is_synced());
  }
}

void GetStatusResponse_Masternode::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetStatusResponse.Masternode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStatusResponse_Masternode::CopyFrom(const GetStatusResponse_Masternode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetStatusResponse.Masternode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatusResponse_Masternode::IsInitialized() const {
  return true;
}

void GetStatusResponse_Masternode::InternalSwap(GetStatusResponse_Masternode* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &pro_tx_hash_, GetArenaForAllocation(),
      &other->pro_tx_hash_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetStatusResponse_Masternode, is_synced_)
      + sizeof(GetStatusResponse_Masternode::is_synced_)
      - PROTOBUF_FIELD_OFFSET(GetStatusResponse_Masternode, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStatusResponse_Masternode::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[4]);
}

// ===================================================================

class GetStatusResponse_NetworkFee::_Internal {
 public:
};

GetStatusResponse_NetworkFee::GetStatusResponse_NetworkFee(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee)
}
GetStatusResponse_NetworkFee::GetStatusResponse_NetworkFee(const GetStatusResponse_NetworkFee& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&relay_, &from.relay_,
    static_cast<size_t>(reinterpret_cast<char*>(&incremental_) -
    reinterpret_cast<char*>(&relay_)) + sizeof(incremental_));
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee)
}

void GetStatusResponse_NetworkFee::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&relay_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&incremental_) -
    reinterpret_cast<char*>(&relay_)) + sizeof(incremental_));
}

GetStatusResponse_NetworkFee::~GetStatusResponse_NetworkFee() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetStatusResponse_NetworkFee::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetStatusResponse_NetworkFee::ArenaDtor(void* object) {
  GetStatusResponse_NetworkFee* _this = reinterpret_cast< GetStatusResponse_NetworkFee* >(object);
  (void)_this;
}
void GetStatusResponse_NetworkFee::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetStatusResponse_NetworkFee::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetStatusResponse_NetworkFee::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&relay_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&incremental_) -
      reinterpret_cast<char*>(&relay_)) + sizeof(incremental_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStatusResponse_NetworkFee::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double relay = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          relay_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double incremental = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          incremental_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetStatusResponse_NetworkFee::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double relay = 1;
  if (!(this->relay() <= 0 && this->relay() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_relay(), target);
  }

  // double incremental = 2;
  if (!(this->incremental() <= 0 && this->incremental() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_incremental(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee)
  return target;
}

size_t GetStatusResponse_NetworkFee::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double relay = 1;
  if (!(this->relay() <= 0 && this->relay() >= 0)) {
    total_size += 1 + 8;
  }

  // double incremental = 2;
  if (!(this->incremental() <= 0 && this->incremental() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStatusResponse_NetworkFee::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStatusResponse_NetworkFee* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetStatusResponse_NetworkFee>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee)
    MergeFrom(*source);
  }
}

void GetStatusResponse_NetworkFee::MergeFrom(const GetStatusResponse_NetworkFee& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.relay() <= 0 && from.relay() >= 0)) {
    _internal_set_relay(from._internal_relay());
  }
  if (!(from.incremental() <= 0 && from.incremental() >= 0)) {
    _internal_set_incremental(from._internal_incremental());
  }
}

void GetStatusResponse_NetworkFee::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStatusResponse_NetworkFee::CopyFrom(const GetStatusResponse_NetworkFee& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatusResponse_NetworkFee::IsInitialized() const {
  return true;
}

void GetStatusResponse_NetworkFee::InternalSwap(GetStatusResponse_NetworkFee* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetStatusResponse_NetworkFee, incremental_)
      + sizeof(GetStatusResponse_NetworkFee::incremental_)
      - PROTOBUF_FIELD_OFFSET(GetStatusResponse_NetworkFee, relay_)>(
          reinterpret_cast<char*>(&relay_),
          reinterpret_cast<char*>(&other->relay_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStatusResponse_NetworkFee::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[5]);
}

// ===================================================================

class GetStatusResponse_Network::_Internal {
 public:
  static const ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee& fee(const GetStatusResponse_Network* msg);
};

const ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee&
GetStatusResponse_Network::_Internal::fee(const GetStatusResponse_Network* msg) {
  return *msg->fee_;
}
GetStatusResponse_Network::GetStatusResponse_Network(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetStatusResponse.Network)
}
GetStatusResponse_Network::GetStatusResponse_Network(const GetStatusResponse_Network& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_fee()) {
    fee_ = new ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee(*from.fee_);
  } else {
    fee_ = nullptr;
  }
  peers_count_ = from.peers_count_;
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetStatusResponse.Network)
}

void GetStatusResponse_Network::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&fee_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&peers_count_) -
    reinterpret_cast<char*>(&fee_)) + sizeof(peers_count_));
}

GetStatusResponse_Network::~GetStatusResponse_Network() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetStatusResponse.Network)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetStatusResponse_Network::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete fee_;
}

void GetStatusResponse_Network::ArenaDtor(void* object) {
  GetStatusResponse_Network* _this = reinterpret_cast< GetStatusResponse_Network* >(object);
  (void)_this;
}
void GetStatusResponse_Network::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetStatusResponse_Network::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetStatusResponse_Network::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetStatusResponse.Network)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && fee_ != nullptr) {
    delete fee_;
  }
  fee_ = nullptr;
  peers_count_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStatusResponse_Network::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 peers_count = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          peers_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee fee = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_fee(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetStatusResponse_Network::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetStatusResponse.Network)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 peers_count = 1;
  if (this->peers_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_peers_count(), target);
  }

  // .org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee fee = 2;
  if (this->has_fee()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::fee(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetStatusResponse.Network)
  return target;
}

size_t GetStatusResponse_Network::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetStatusResponse.Network)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee fee = 2;
  if (this->has_fee()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fee_);
  }

  // uint32 peers_count = 1;
  if (this->peers_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_peers_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStatusResponse_Network::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetStatusResponse.Network)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStatusResponse_Network* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetStatusResponse_Network>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetStatusResponse.Network)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetStatusResponse.Network)
    MergeFrom(*source);
  }
}

void GetStatusResponse_Network::MergeFrom(const GetStatusResponse_Network& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetStatusResponse.Network)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_fee()) {
    _internal_mutable_fee()->::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee::MergeFrom(from._internal_fee());
  }
  if (from.peers_count() != 0) {
    _internal_set_peers_count(from._internal_peers_count());
  }
}

void GetStatusResponse_Network::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetStatusResponse.Network)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStatusResponse_Network::CopyFrom(const GetStatusResponse_Network& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetStatusResponse.Network)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatusResponse_Network::IsInitialized() const {
  return true;
}

void GetStatusResponse_Network::InternalSwap(GetStatusResponse_Network* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetStatusResponse_Network, peers_count_)
      + sizeof(GetStatusResponse_Network::peers_count_)
      - PROTOBUF_FIELD_OFFSET(GetStatusResponse_Network, fee_)>(
          reinterpret_cast<char*>(&fee_),
          reinterpret_cast<char*>(&other->fee_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStatusResponse_Network::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[6]);
}

// ===================================================================

class GetStatusResponse::_Internal {
 public:
  static const ::org::dash::platform::dapi::v0::GetStatusResponse_Version& version(const GetStatusResponse* msg);
  static const ::org::dash::platform::dapi::v0::GetStatusResponse_Time& time(const GetStatusResponse* msg);
  static const ::org::dash::platform::dapi::v0::GetStatusResponse_Chain& chain(const GetStatusResponse* msg);
  static const ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode& masternode(const GetStatusResponse* msg);
  static const ::org::dash::platform::dapi::v0::GetStatusResponse_Network& network(const GetStatusResponse* msg);
};

const ::org::dash::platform::dapi::v0::GetStatusResponse_Version&
GetStatusResponse::_Internal::version(const GetStatusResponse* msg) {
  return *msg->version_;
}
const ::org::dash::platform::dapi::v0::GetStatusResponse_Time&
GetStatusResponse::_Internal::time(const GetStatusResponse* msg) {
  return *msg->time_;
}
const ::org::dash::platform::dapi::v0::GetStatusResponse_Chain&
GetStatusResponse::_Internal::chain(const GetStatusResponse* msg) {
  return *msg->chain_;
}
const ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode&
GetStatusResponse::_Internal::masternode(const GetStatusResponse* msg) {
  return *msg->masternode_;
}
const ::org::dash::platform::dapi::v0::GetStatusResponse_Network&
GetStatusResponse::_Internal::network(const GetStatusResponse* msg) {
  return *msg->network_;
}
GetStatusResponse::GetStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetStatusResponse)
}
GetStatusResponse::GetStatusResponse(const GetStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_version()) {
    version_ = new ::org::dash::platform::dapi::v0::GetStatusResponse_Version(*from.version_);
  } else {
    version_ = nullptr;
  }
  if (from._internal_has_time()) {
    time_ = new ::org::dash::platform::dapi::v0::GetStatusResponse_Time(*from.time_);
  } else {
    time_ = nullptr;
  }
  if (from._internal_has_chain()) {
    chain_ = new ::org::dash::platform::dapi::v0::GetStatusResponse_Chain(*from.chain_);
  } else {
    chain_ = nullptr;
  }
  if (from._internal_has_masternode()) {
    masternode_ = new ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode(*from.masternode_);
  } else {
    masternode_ = nullptr;
  }
  if (from._internal_has_network()) {
    network_ = new ::org::dash::platform::dapi::v0::GetStatusResponse_Network(*from.network_);
  } else {
    network_ = nullptr;
  }
  ::memcpy(&sync_progress_, &from.sync_progress_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&sync_progress_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetStatusResponse)
}

void GetStatusResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&version_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&version_)) + sizeof(status_));
}

GetStatusResponse::~GetStatusResponse() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetStatusResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete version_;
  if (this != internal_default_instance()) delete time_;
  if (this != internal_default_instance()) delete chain_;
  if (this != internal_default_instance()) delete masternode_;
  if (this != internal_default_instance()) delete network_;
}

void GetStatusResponse::ArenaDtor(void* object) {
  GetStatusResponse* _this = reinterpret_cast< GetStatusResponse* >(object);
  (void)_this;
}
void GetStatusResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetStatusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && version_ != nullptr) {
    delete version_;
  }
  version_ = nullptr;
  if (GetArenaForAllocation() == nullptr && time_ != nullptr) {
    delete time_;
  }
  time_ = nullptr;
  if (GetArenaForAllocation() == nullptr && chain_ != nullptr) {
    delete chain_;
  }
  chain_ = nullptr;
  if (GetArenaForAllocation() == nullptr && masternode_ != nullptr) {
    delete masternode_;
  }
  masternode_ = nullptr;
  if (GetArenaForAllocation() == nullptr && network_ != nullptr) {
    delete network_;
  }
  network_ = nullptr;
  ::memset(&sync_progress_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&sync_progress_)) + sizeof(status_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStatusResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .org.dash.platform.dapi.v0.GetStatusResponse.Version version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_version(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .org.dash.platform.dapi.v0.GetStatusResponse.Time time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .org.dash.platform.dapi.v0.GetStatusResponse.Status status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::org::dash::platform::dapi::v0::GetStatusResponse_Status>(val));
        } else goto handle_unusual;
        continue;
      // double sync_progress = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          sync_progress_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // .org.dash.platform.dapi.v0.GetStatusResponse.Chain chain = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_chain(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .org.dash.platform.dapi.v0.GetStatusResponse.Masternode masternode = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_masternode(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .org.dash.platform.dapi.v0.GetStatusResponse.Network network = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_network(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetStatusResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetStatusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .org.dash.platform.dapi.v0.GetStatusResponse.Version version = 1;
  if (this->has_version()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::version(this), target, stream);
  }

  // .org.dash.platform.dapi.v0.GetStatusResponse.Time time = 2;
  if (this->has_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::time(this), target, stream);
  }

  // .org.dash.platform.dapi.v0.GetStatusResponse.Status status = 3;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_status(), target);
  }

  // double sync_progress = 4;
  if (!(this->sync_progress() <= 0 && this->sync_progress() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_sync_progress(), target);
  }

  // .org.dash.platform.dapi.v0.GetStatusResponse.Chain chain = 5;
  if (this->has_chain()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::chain(this), target, stream);
  }

  // .org.dash.platform.dapi.v0.GetStatusResponse.Masternode masternode = 6;
  if (this->has_masternode()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::masternode(this), target, stream);
  }

  // .org.dash.platform.dapi.v0.GetStatusResponse.Network network = 7;
  if (this->has_network()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::network(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetStatusResponse)
  return target;
}

size_t GetStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetStatusResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .org.dash.platform.dapi.v0.GetStatusResponse.Version version = 1;
  if (this->has_version()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *version_);
  }

  // .org.dash.platform.dapi.v0.GetStatusResponse.Time time = 2;
  if (this->has_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *time_);
  }

  // .org.dash.platform.dapi.v0.GetStatusResponse.Chain chain = 5;
  if (this->has_chain()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *chain_);
  }

  // .org.dash.platform.dapi.v0.GetStatusResponse.Masternode masternode = 6;
  if (this->has_masternode()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *masternode_);
  }

  // .org.dash.platform.dapi.v0.GetStatusResponse.Network network = 7;
  if (this->has_network()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *network_);
  }

  // double sync_progress = 4;
  if (!(this->sync_progress() <= 0 && this->sync_progress() >= 0)) {
    total_size += 1 + 8;
  }

  // .org.dash.platform.dapi.v0.GetStatusResponse.Status status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStatusResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStatusResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetStatusResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetStatusResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetStatusResponse)
    MergeFrom(*source);
  }
}

void GetStatusResponse::MergeFrom(const GetStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_version()) {
    _internal_mutable_version()->::org::dash::platform::dapi::v0::GetStatusResponse_Version::MergeFrom(from._internal_version());
  }
  if (from.has_time()) {
    _internal_mutable_time()->::org::dash::platform::dapi::v0::GetStatusResponse_Time::MergeFrom(from._internal_time());
  }
  if (from.has_chain()) {
    _internal_mutable_chain()->::org::dash::platform::dapi::v0::GetStatusResponse_Chain::MergeFrom(from._internal_chain());
  }
  if (from.has_masternode()) {
    _internal_mutable_masternode()->::org::dash::platform::dapi::v0::GetStatusResponse_Masternode::MergeFrom(from._internal_masternode());
  }
  if (from.has_network()) {
    _internal_mutable_network()->::org::dash::platform::dapi::v0::GetStatusResponse_Network::MergeFrom(from._internal_network());
  }
  if (!(from.sync_progress() <= 0 && from.sync_progress() >= 0)) {
    _internal_set_sync_progress(from._internal_sync_progress());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void GetStatusResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStatusResponse::CopyFrom(const GetStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatusResponse::IsInitialized() const {
  return true;
}

void GetStatusResponse::InternalSwap(GetStatusResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetStatusResponse, status_)
      + sizeof(GetStatusResponse::status_)
      - PROTOBUF_FIELD_OFFSET(GetStatusResponse, version_)>(
          reinterpret_cast<char*>(&version_),
          reinterpret_cast<char*>(&other->version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStatusResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[7]);
}

// ===================================================================

class GetBlockRequest::_Internal {
 public:
};

GetBlockRequest::GetBlockRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetBlockRequest)
}
GetBlockRequest::GetBlockRequest(const GetBlockRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_block();
  switch (from.block_case()) {
    case kHeight: {
      _internal_set_height(from._internal_height());
      break;
    }
    case kHash: {
      _internal_set_hash(from._internal_hash());
      break;
    }
    case BLOCK_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetBlockRequest)
}

void GetBlockRequest::SharedCtor() {
clear_has_block();
}

GetBlockRequest::~GetBlockRequest() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetBlockRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetBlockRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_block()) {
    clear_block();
  }
}

void GetBlockRequest::ArenaDtor(void* object) {
  GetBlockRequest* _this = reinterpret_cast< GetBlockRequest* >(object);
  (void)_this;
}
void GetBlockRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBlockRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBlockRequest::clear_block() {
// @@protoc_insertion_point(one_of_clear_start:org.dash.platform.dapi.v0.GetBlockRequest)
  switch (block_case()) {
    case kHeight: {
      // No need to clear
      break;
    }
    case kHash: {
      block_.hash_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
      break;
    }
    case BLOCK_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = BLOCK_NOT_SET;
}


void GetBlockRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetBlockRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_block();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlockRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 height = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _internal_set_height(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string hash = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "org.dash.platform.dapi.v0.GetBlockRequest.hash"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBlockRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetBlockRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 height = 1;
  if (_internal_has_height()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_height(), target);
  }

  // string hash = 2;
  if (_internal_has_hash()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hash().data(), static_cast<int>(this->_internal_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "org.dash.platform.dapi.v0.GetBlockRequest.hash");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_hash(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetBlockRequest)
  return target;
}

size_t GetBlockRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetBlockRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (block_case()) {
    // uint32 height = 1;
    case kHeight: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_height());
      break;
    }
    // string hash = 2;
    case kHash: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_hash());
      break;
    }
    case BLOCK_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBlockRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetBlockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBlockRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetBlockRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetBlockRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetBlockRequest)
    MergeFrom(*source);
  }
}

void GetBlockRequest::MergeFrom(const GetBlockRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetBlockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.block_case()) {
    case kHeight: {
      _internal_set_height(from._internal_height());
      break;
    }
    case kHash: {
      _internal_set_hash(from._internal_hash());
      break;
    }
    case BLOCK_NOT_SET: {
      break;
    }
  }
}

void GetBlockRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetBlockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlockRequest::CopyFrom(const GetBlockRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetBlockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockRequest::IsInitialized() const {
  return true;
}

void GetBlockRequest::InternalSwap(GetBlockRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(block_, other->block_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlockRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[8]);
}

// ===================================================================

class GetBlockResponse::_Internal {
 public:
};

GetBlockResponse::GetBlockResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetBlockResponse)
}
GetBlockResponse::GetBlockResponse(const GetBlockResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  block_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_block().empty()) {
    block_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_block(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetBlockResponse)
}

void GetBlockResponse::SharedCtor() {
block_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetBlockResponse::~GetBlockResponse() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetBlockResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetBlockResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  block_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetBlockResponse::ArenaDtor(void* object) {
  GetBlockResponse* _this = reinterpret_cast< GetBlockResponse* >(object);
  (void)_this;
}
void GetBlockResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBlockResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBlockResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetBlockResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  block_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlockResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes block = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_block();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetBlockResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetBlockResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes block = 1;
  if (!this->block().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_block(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetBlockResponse)
  return target;
}

size_t GetBlockResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetBlockResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes block = 1;
  if (!this->block().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_block());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBlockResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetBlockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBlockResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetBlockResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetBlockResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetBlockResponse)
    MergeFrom(*source);
  }
}

void GetBlockResponse::MergeFrom(const GetBlockResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetBlockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.block().empty()) {
    _internal_set_block(from._internal_block());
  }
}

void GetBlockResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetBlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlockResponse::CopyFrom(const GetBlockResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetBlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockResponse::IsInitialized() const {
  return true;
}

void GetBlockResponse::InternalSwap(GetBlockResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &block_, GetArenaForAllocation(),
      &other->block_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlockResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[9]);
}

// ===================================================================

class BroadcastTransactionRequest::_Internal {
 public:
};

BroadcastTransactionRequest::BroadcastTransactionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.BroadcastTransactionRequest)
}
BroadcastTransactionRequest::BroadcastTransactionRequest(const BroadcastTransactionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  transaction_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_transaction().empty()) {
    transaction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_transaction(), 
      GetArenaForAllocation());
  }
  ::memcpy(&allow_high_fees_, &from.allow_high_fees_,
    static_cast<size_t>(reinterpret_cast<char*>(&bypass_limits_) -
    reinterpret_cast<char*>(&allow_high_fees_)) + sizeof(bypass_limits_));
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.BroadcastTransactionRequest)
}

void BroadcastTransactionRequest::SharedCtor() {
transaction_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&allow_high_fees_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&bypass_limits_) -
    reinterpret_cast<char*>(&allow_high_fees_)) + sizeof(bypass_limits_));
}

BroadcastTransactionRequest::~BroadcastTransactionRequest() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.BroadcastTransactionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BroadcastTransactionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  transaction_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BroadcastTransactionRequest::ArenaDtor(void* object) {
  BroadcastTransactionRequest* _this = reinterpret_cast< BroadcastTransactionRequest* >(object);
  (void)_this;
}
void BroadcastTransactionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BroadcastTransactionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BroadcastTransactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.BroadcastTransactionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transaction_.ClearToEmpty();
  ::memset(&allow_high_fees_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bypass_limits_) -
      reinterpret_cast<char*>(&allow_high_fees_)) + sizeof(bypass_limits_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BroadcastTransactionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes transaction = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_transaction();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool allow_high_fees = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          allow_high_fees_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool bypass_limits = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          bypass_limits_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BroadcastTransactionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.BroadcastTransactionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes transaction = 1;
  if (!this->transaction().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_transaction(), target);
  }

  // bool allow_high_fees = 2;
  if (this->allow_high_fees() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_allow_high_fees(), target);
  }

  // bool bypass_limits = 3;
  if (this->bypass_limits() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_bypass_limits(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.BroadcastTransactionRequest)
  return target;
}

size_t BroadcastTransactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.BroadcastTransactionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes transaction = 1;
  if (!this->transaction().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_transaction());
  }

  // bool allow_high_fees = 2;
  if (this->allow_high_fees() != 0) {
    total_size += 1 + 1;
  }

  // bool bypass_limits = 3;
  if (this->bypass_limits() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BroadcastTransactionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.BroadcastTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BroadcastTransactionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BroadcastTransactionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.BroadcastTransactionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.BroadcastTransactionRequest)
    MergeFrom(*source);
  }
}

void BroadcastTransactionRequest::MergeFrom(const BroadcastTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.BroadcastTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.transaction().empty()) {
    _internal_set_transaction(from._internal_transaction());
  }
  if (from.allow_high_fees() != 0) {
    _internal_set_allow_high_fees(from._internal_allow_high_fees());
  }
  if (from.bypass_limits() != 0) {
    _internal_set_bypass_limits(from._internal_bypass_limits());
  }
}

void BroadcastTransactionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.BroadcastTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BroadcastTransactionRequest::CopyFrom(const BroadcastTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.BroadcastTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadcastTransactionRequest::IsInitialized() const {
  return true;
}

void BroadcastTransactionRequest::InternalSwap(BroadcastTransactionRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &transaction_, GetArenaForAllocation(),
      &other->transaction_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BroadcastTransactionRequest, bypass_limits_)
      + sizeof(BroadcastTransactionRequest::bypass_limits_)
      - PROTOBUF_FIELD_OFFSET(BroadcastTransactionRequest, allow_high_fees_)>(
          reinterpret_cast<char*>(&allow_high_fees_),
          reinterpret_cast<char*>(&other->allow_high_fees_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BroadcastTransactionRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[10]);
}

// ===================================================================

class BroadcastTransactionResponse::_Internal {
 public:
};

BroadcastTransactionResponse::BroadcastTransactionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.BroadcastTransactionResponse)
}
BroadcastTransactionResponse::BroadcastTransactionResponse(const BroadcastTransactionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  transaction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_transaction_id().empty()) {
    transaction_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_transaction_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.BroadcastTransactionResponse)
}

void BroadcastTransactionResponse::SharedCtor() {
transaction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

BroadcastTransactionResponse::~BroadcastTransactionResponse() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.BroadcastTransactionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BroadcastTransactionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  transaction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BroadcastTransactionResponse::ArenaDtor(void* object) {
  BroadcastTransactionResponse* _this = reinterpret_cast< BroadcastTransactionResponse* >(object);
  (void)_this;
}
void BroadcastTransactionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BroadcastTransactionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BroadcastTransactionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.BroadcastTransactionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transaction_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BroadcastTransactionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string transaction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_transaction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "org.dash.platform.dapi.v0.BroadcastTransactionResponse.transaction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BroadcastTransactionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.BroadcastTransactionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string transaction_id = 1;
  if (!this->transaction_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_transaction_id().data(), static_cast<int>(this->_internal_transaction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "org.dash.platform.dapi.v0.BroadcastTransactionResponse.transaction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_transaction_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.BroadcastTransactionResponse)
  return target;
}

size_t BroadcastTransactionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.BroadcastTransactionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string transaction_id = 1;
  if (!this->transaction_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_transaction_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BroadcastTransactionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.BroadcastTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BroadcastTransactionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BroadcastTransactionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.BroadcastTransactionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.BroadcastTransactionResponse)
    MergeFrom(*source);
  }
}

void BroadcastTransactionResponse::MergeFrom(const BroadcastTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.BroadcastTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.transaction_id().empty()) {
    _internal_set_transaction_id(from._internal_transaction_id());
  }
}

void BroadcastTransactionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.BroadcastTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BroadcastTransactionResponse::CopyFrom(const BroadcastTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.BroadcastTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadcastTransactionResponse::IsInitialized() const {
  return true;
}

void BroadcastTransactionResponse::InternalSwap(BroadcastTransactionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &transaction_id_, GetArenaForAllocation(),
      &other->transaction_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata BroadcastTransactionResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[11]);
}

// ===================================================================

class GetTransactionRequest::_Internal {
 public:
};

GetTransactionRequest::GetTransactionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetTransactionRequest)
}
GetTransactionRequest::GetTransactionRequest(const GetTransactionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetTransactionRequest)
}

void GetTransactionRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetTransactionRequest::~GetTransactionRequest() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetTransactionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetTransactionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetTransactionRequest::ArenaDtor(void* object) {
  GetTransactionRequest* _this = reinterpret_cast< GetTransactionRequest* >(object);
  (void)_this;
}
void GetTransactionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTransactionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetTransactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetTransactionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTransactionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "org.dash.platform.dapi.v0.GetTransactionRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetTransactionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetTransactionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "org.dash.platform.dapi.v0.GetTransactionRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetTransactionRequest)
  return target;
}

size_t GetTransactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetTransactionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTransactionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTransactionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetTransactionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetTransactionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetTransactionRequest)
    MergeFrom(*source);
  }
}

void GetTransactionRequest::MergeFrom(const GetTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.id().empty()) {
    _internal_set_id(from._internal_id());
  }
}

void GetTransactionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTransactionRequest::CopyFrom(const GetTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTransactionRequest::IsInitialized() const {
  return true;
}

void GetTransactionRequest::InternalSwap(GetTransactionRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTransactionRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[12]);
}

// ===================================================================

class GetTransactionResponse::_Internal {
 public:
};

GetTransactionResponse::GetTransactionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetTransactionResponse)
}
GetTransactionResponse::GetTransactionResponse(const GetTransactionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  transaction_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_transaction().empty()) {
    transaction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_transaction(), 
      GetArenaForAllocation());
  }
  block_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_block_hash().empty()) {
    block_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_block_hash(), 
      GetArenaForAllocation());
  }
  ::memcpy(&height_, &from.height_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_chain_locked_) -
    reinterpret_cast<char*>(&height_)) + sizeof(is_chain_locked_));
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetTransactionResponse)
}

void GetTransactionResponse::SharedCtor() {
transaction_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
block_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&height_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&is_chain_locked_) -
    reinterpret_cast<char*>(&height_)) + sizeof(is_chain_locked_));
}

GetTransactionResponse::~GetTransactionResponse() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetTransactionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetTransactionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  transaction_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  block_hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetTransactionResponse::ArenaDtor(void* object) {
  GetTransactionResponse* _this = reinterpret_cast< GetTransactionResponse* >(object);
  (void)_this;
}
void GetTransactionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTransactionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetTransactionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetTransactionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transaction_.ClearToEmpty();
  block_hash_.ClearToEmpty();
  ::memset(&height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_chain_locked_) -
      reinterpret_cast<char*>(&height_)) + sizeof(is_chain_locked_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTransactionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes transaction = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_transaction();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes block_hash = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_block_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 height = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 confirmations = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          confirmations_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_instant_locked = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          is_instant_locked_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_chain_locked = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          is_chain_locked_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetTransactionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetTransactionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes transaction = 1;
  if (!this->transaction().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_transaction(), target);
  }

  // bytes block_hash = 2;
  if (!this->block_hash().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_block_hash(), target);
  }

  // uint32 height = 3;
  if (this->height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_height(), target);
  }

  // uint32 confirmations = 4;
  if (this->confirmations() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_confirmations(), target);
  }

  // bool is_instant_locked = 5;
  if (this->is_instant_locked() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_is_instant_locked(), target);
  }

  // bool is_chain_locked = 6;
  if (this->is_chain_locked() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_is_chain_locked(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetTransactionResponse)
  return target;
}

size_t GetTransactionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetTransactionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes transaction = 1;
  if (!this->transaction().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_transaction());
  }

  // bytes block_hash = 2;
  if (!this->block_hash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_block_hash());
  }

  // uint32 height = 3;
  if (this->height() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_height());
  }

  // uint32 confirmations = 4;
  if (this->confirmations() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_confirmations());
  }

  // bool is_instant_locked = 5;
  if (this->is_instant_locked() != 0) {
    total_size += 1 + 1;
  }

  // bool is_chain_locked = 6;
  if (this->is_chain_locked() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTransactionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTransactionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetTransactionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetTransactionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetTransactionResponse)
    MergeFrom(*source);
  }
}

void GetTransactionResponse::MergeFrom(const GetTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.transaction().empty()) {
    _internal_set_transaction(from._internal_transaction());
  }
  if (!from.block_hash().empty()) {
    _internal_set_block_hash(from._internal_block_hash());
  }
  if (from.height() != 0) {
    _internal_set_height(from._internal_height());
  }
  if (from.confirmations() != 0) {
    _internal_set_confirmations(from._internal_confirmations());
  }
  if (from.is_instant_locked() != 0) {
    _internal_set_is_instant_locked(from._internal_is_instant_locked());
  }
  if (from.is_chain_locked() != 0) {
    _internal_set_is_chain_locked(from._internal_is_chain_locked());
  }
}

void GetTransactionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTransactionResponse::CopyFrom(const GetTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTransactionResponse::IsInitialized() const {
  return true;
}

void GetTransactionResponse::InternalSwap(GetTransactionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &transaction_, GetArenaForAllocation(),
      &other->transaction_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &block_hash_, GetArenaForAllocation(),
      &other->block_hash_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetTransactionResponse, is_chain_locked_)
      + sizeof(GetTransactionResponse::is_chain_locked_)
      - PROTOBUF_FIELD_OFFSET(GetTransactionResponse, height_)>(
          reinterpret_cast<char*>(&height_),
          reinterpret_cast<char*>(&other->height_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTransactionResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[13]);
}

// ===================================================================

class BlockHeadersWithChainLocksRequest::_Internal {
 public:
};

BlockHeadersWithChainLocksRequest::BlockHeadersWithChainLocksRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest)
}
BlockHeadersWithChainLocksRequest::BlockHeadersWithChainLocksRequest(const BlockHeadersWithChainLocksRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  count_ = from.count_;
  clear_has_from_block();
  switch (from.from_block_case()) {
    case kFromBlockHash: {
      _internal_set_from_block_hash(from._internal_from_block_hash());
      break;
    }
    case kFromBlockHeight: {
      _internal_set_from_block_height(from._internal_from_block_height());
      break;
    }
    case FROM_BLOCK_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest)
}

void BlockHeadersWithChainLocksRequest::SharedCtor() {
count_ = 0u;
clear_has_from_block();
}

BlockHeadersWithChainLocksRequest::~BlockHeadersWithChainLocksRequest() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BlockHeadersWithChainLocksRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_from_block()) {
    clear_from_block();
  }
}

void BlockHeadersWithChainLocksRequest::ArenaDtor(void* object) {
  BlockHeadersWithChainLocksRequest* _this = reinterpret_cast< BlockHeadersWithChainLocksRequest* >(object);
  (void)_this;
}
void BlockHeadersWithChainLocksRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BlockHeadersWithChainLocksRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BlockHeadersWithChainLocksRequest::clear_from_block() {
// @@protoc_insertion_point(one_of_clear_start:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest)
  switch (from_block_case()) {
    case kFromBlockHash: {
      from_block_.from_block_hash_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
      break;
    }
    case kFromBlockHeight: {
      // No need to clear
      break;
    }
    case FROM_BLOCK_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FROM_BLOCK_NOT_SET;
}


void BlockHeadersWithChainLocksRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  count_ = 0u;
  clear_from_block();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlockHeadersWithChainLocksRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes from_block_hash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_from_block_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 from_block_height = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _internal_set_from_block_height(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BlockHeadersWithChainLocksRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes from_block_hash = 1;
  if (_internal_has_from_block_hash()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_from_block_hash(), target);
  }

  // uint32 from_block_height = 2;
  if (_internal_has_from_block_height()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_from_block_height(), target);
  }

  // uint32 count = 3;
  if (this->count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest)
  return target;
}

size_t BlockHeadersWithChainLocksRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 count = 3;
  if (this->count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_count());
  }

  switch (from_block_case()) {
    // bytes from_block_hash = 1;
    case kFromBlockHash: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_from_block_hash());
      break;
    }
    // uint32 from_block_height = 2;
    case kFromBlockHeight: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_from_block_height());
      break;
    }
    case FROM_BLOCK_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlockHeadersWithChainLocksRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockHeadersWithChainLocksRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BlockHeadersWithChainLocksRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest)
    MergeFrom(*source);
  }
}

void BlockHeadersWithChainLocksRequest::MergeFrom(const BlockHeadersWithChainLocksRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.count() != 0) {
    _internal_set_count(from._internal_count());
  }
  switch (from.from_block_case()) {
    case kFromBlockHash: {
      _internal_set_from_block_hash(from._internal_from_block_hash());
      break;
    }
    case kFromBlockHeight: {
      _internal_set_from_block_height(from._internal_from_block_height());
      break;
    }
    case FROM_BLOCK_NOT_SET: {
      break;
    }
  }
}

void BlockHeadersWithChainLocksRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockHeadersWithChainLocksRequest::CopyFrom(const BlockHeadersWithChainLocksRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockHeadersWithChainLocksRequest::IsInitialized() const {
  return true;
}

void BlockHeadersWithChainLocksRequest::InternalSwap(BlockHeadersWithChainLocksRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(count_, other->count_);
  swap(from_block_, other->from_block_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata BlockHeadersWithChainLocksRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[14]);
}

// ===================================================================

class BlockHeadersWithChainLocksResponse::_Internal {
 public:
  static const ::org::dash::platform::dapi::v0::BlockHeaders& block_headers(const BlockHeadersWithChainLocksResponse* msg);
  static const ::org::dash::platform::dapi::v0::ChainLockSignatureMessages& chain_lock_signature_messages(const BlockHeadersWithChainLocksResponse* msg);
};

const ::org::dash::platform::dapi::v0::BlockHeaders&
BlockHeadersWithChainLocksResponse::_Internal::block_headers(const BlockHeadersWithChainLocksResponse* msg) {
  return *msg->responses_.block_headers_;
}
const ::org::dash::platform::dapi::v0::ChainLockSignatureMessages&
BlockHeadersWithChainLocksResponse::_Internal::chain_lock_signature_messages(const BlockHeadersWithChainLocksResponse* msg) {
  return *msg->responses_.chain_lock_signature_messages_;
}
void BlockHeadersWithChainLocksResponse::set_allocated_block_headers(::org::dash::platform::dapi::v0::BlockHeaders* block_headers) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_responses();
  if (block_headers) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::org::dash::platform::dapi::v0::BlockHeaders>::GetOwningArena(block_headers);
    if (message_arena != submessage_arena) {
      block_headers = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, block_headers, submessage_arena);
    }
    set_has_block_headers();
    responses_.block_headers_ = block_headers;
  }
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse.block_headers)
}
void BlockHeadersWithChainLocksResponse::set_allocated_chain_lock_signature_messages(::org::dash::platform::dapi::v0::ChainLockSignatureMessages* chain_lock_signature_messages) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_responses();
  if (chain_lock_signature_messages) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::org::dash::platform::dapi::v0::ChainLockSignatureMessages>::GetOwningArena(chain_lock_signature_messages);
    if (message_arena != submessage_arena) {
      chain_lock_signature_messages = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, chain_lock_signature_messages, submessage_arena);
    }
    set_has_chain_lock_signature_messages();
    responses_.chain_lock_signature_messages_ = chain_lock_signature_messages;
  }
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse.chain_lock_signature_messages)
}
BlockHeadersWithChainLocksResponse::BlockHeadersWithChainLocksResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse)
}
BlockHeadersWithChainLocksResponse::BlockHeadersWithChainLocksResponse(const BlockHeadersWithChainLocksResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_responses();
  switch (from.responses_case()) {
    case kBlockHeaders: {
      _internal_mutable_block_headers()->::org::dash::platform::dapi::v0::BlockHeaders::MergeFrom(from._internal_block_headers());
      break;
    }
    case kChainLockSignatureMessages: {
      _internal_mutable_chain_lock_signature_messages()->::org::dash::platform::dapi::v0::ChainLockSignatureMessages::MergeFrom(from._internal_chain_lock_signature_messages());
      break;
    }
    case RESPONSES_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse)
}

void BlockHeadersWithChainLocksResponse::SharedCtor() {
clear_has_responses();
}

BlockHeadersWithChainLocksResponse::~BlockHeadersWithChainLocksResponse() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BlockHeadersWithChainLocksResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_responses()) {
    clear_responses();
  }
}

void BlockHeadersWithChainLocksResponse::ArenaDtor(void* object) {
  BlockHeadersWithChainLocksResponse* _this = reinterpret_cast< BlockHeadersWithChainLocksResponse* >(object);
  (void)_this;
}
void BlockHeadersWithChainLocksResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BlockHeadersWithChainLocksResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BlockHeadersWithChainLocksResponse::clear_responses() {
// @@protoc_insertion_point(one_of_clear_start:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse)
  switch (responses_case()) {
    case kBlockHeaders: {
      if (GetArenaForAllocation() == nullptr) {
        delete responses_.block_headers_;
      }
      break;
    }
    case kChainLockSignatureMessages: {
      if (GetArenaForAllocation() == nullptr) {
        delete responses_.chain_lock_signature_messages_;
      }
      break;
    }
    case RESPONSES_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RESPONSES_NOT_SET;
}


void BlockHeadersWithChainLocksResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_responses();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlockHeadersWithChainLocksResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .org.dash.platform.dapi.v0.BlockHeaders block_headers = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_block_headers(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .org.dash.platform.dapi.v0.ChainLockSignatureMessages chain_lock_signature_messages = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_chain_lock_signature_messages(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BlockHeadersWithChainLocksResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .org.dash.platform.dapi.v0.BlockHeaders block_headers = 1;
  if (_internal_has_block_headers()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::block_headers(this), target, stream);
  }

  // .org.dash.platform.dapi.v0.ChainLockSignatureMessages chain_lock_signature_messages = 2;
  if (_internal_has_chain_lock_signature_messages()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::chain_lock_signature_messages(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse)
  return target;
}

size_t BlockHeadersWithChainLocksResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (responses_case()) {
    // .org.dash.platform.dapi.v0.BlockHeaders block_headers = 1;
    case kBlockHeaders: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *responses_.block_headers_);
      break;
    }
    // .org.dash.platform.dapi.v0.ChainLockSignatureMessages chain_lock_signature_messages = 2;
    case kChainLockSignatureMessages: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *responses_.chain_lock_signature_messages_);
      break;
    }
    case RESPONSES_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlockHeadersWithChainLocksResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockHeadersWithChainLocksResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BlockHeadersWithChainLocksResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse)
    MergeFrom(*source);
  }
}

void BlockHeadersWithChainLocksResponse::MergeFrom(const BlockHeadersWithChainLocksResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.responses_case()) {
    case kBlockHeaders: {
      _internal_mutable_block_headers()->::org::dash::platform::dapi::v0::BlockHeaders::MergeFrom(from._internal_block_headers());
      break;
    }
    case kChainLockSignatureMessages: {
      _internal_mutable_chain_lock_signature_messages()->::org::dash::platform::dapi::v0::ChainLockSignatureMessages::MergeFrom(from._internal_chain_lock_signature_messages());
      break;
    }
    case RESPONSES_NOT_SET: {
      break;
    }
  }
}

void BlockHeadersWithChainLocksResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockHeadersWithChainLocksResponse::CopyFrom(const BlockHeadersWithChainLocksResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockHeadersWithChainLocksResponse::IsInitialized() const {
  return true;
}

void BlockHeadersWithChainLocksResponse::InternalSwap(BlockHeadersWithChainLocksResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(responses_, other->responses_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata BlockHeadersWithChainLocksResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[15]);
}

// ===================================================================

class BlockHeaders::_Internal {
 public:
};

BlockHeaders::BlockHeaders(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  headers_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.BlockHeaders)
}
BlockHeaders::BlockHeaders(const BlockHeaders& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      headers_(from.headers_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.BlockHeaders)
}

void BlockHeaders::SharedCtor() {
}

BlockHeaders::~BlockHeaders() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.BlockHeaders)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BlockHeaders::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BlockHeaders::ArenaDtor(void* object) {
  BlockHeaders* _this = reinterpret_cast< BlockHeaders* >(object);
  (void)_this;
}
void BlockHeaders::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BlockHeaders::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BlockHeaders::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.BlockHeaders)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  headers_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlockHeaders::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated bytes headers = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_headers();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BlockHeaders::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.BlockHeaders)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes headers = 1;
  for (int i = 0, n = this->_internal_headers_size(); i < n; i++) {
    const auto& s = this->_internal_headers(i);
    target = stream->WriteBytes(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.BlockHeaders)
  return target;
}

size_t BlockHeaders::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.BlockHeaders)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes headers = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(headers_.size());
  for (int i = 0, n = headers_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      headers_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlockHeaders::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.BlockHeaders)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockHeaders* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BlockHeaders>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.BlockHeaders)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.BlockHeaders)
    MergeFrom(*source);
  }
}

void BlockHeaders::MergeFrom(const BlockHeaders& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.BlockHeaders)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  headers_.MergeFrom(from.headers_);
}

void BlockHeaders::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.BlockHeaders)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockHeaders::CopyFrom(const BlockHeaders& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.BlockHeaders)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockHeaders::IsInitialized() const {
  return true;
}

void BlockHeaders::InternalSwap(BlockHeaders* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  headers_.InternalSwap(&other->headers_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BlockHeaders::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[16]);
}

// ===================================================================

class ChainLockSignatureMessages::_Internal {
 public:
};

ChainLockSignatureMessages::ChainLockSignatureMessages(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  messages_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.ChainLockSignatureMessages)
}
ChainLockSignatureMessages::ChainLockSignatureMessages(const ChainLockSignatureMessages& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.ChainLockSignatureMessages)
}

void ChainLockSignatureMessages::SharedCtor() {
}

ChainLockSignatureMessages::~ChainLockSignatureMessages() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.ChainLockSignatureMessages)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChainLockSignatureMessages::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ChainLockSignatureMessages::ArenaDtor(void* object) {
  ChainLockSignatureMessages* _this = reinterpret_cast< ChainLockSignatureMessages* >(object);
  (void)_this;
}
void ChainLockSignatureMessages::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChainLockSignatureMessages::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ChainLockSignatureMessages::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.ChainLockSignatureMessages)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChainLockSignatureMessages::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated bytes messages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_messages();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChainLockSignatureMessages::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.ChainLockSignatureMessages)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes messages = 1;
  for (int i = 0, n = this->_internal_messages_size(); i < n; i++) {
    const auto& s = this->_internal_messages(i);
    target = stream->WriteBytes(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.ChainLockSignatureMessages)
  return target;
}

size_t ChainLockSignatureMessages::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.ChainLockSignatureMessages)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes messages = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(messages_.size());
  for (int i = 0, n = messages_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      messages_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChainLockSignatureMessages::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.ChainLockSignatureMessages)
  GOOGLE_DCHECK_NE(&from, this);
  const ChainLockSignatureMessages* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChainLockSignatureMessages>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.ChainLockSignatureMessages)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.ChainLockSignatureMessages)
    MergeFrom(*source);
  }
}

void ChainLockSignatureMessages::MergeFrom(const ChainLockSignatureMessages& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.ChainLockSignatureMessages)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
}

void ChainLockSignatureMessages::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.ChainLockSignatureMessages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChainLockSignatureMessages::CopyFrom(const ChainLockSignatureMessages& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.ChainLockSignatureMessages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChainLockSignatureMessages::IsInitialized() const {
  return true;
}

void ChainLockSignatureMessages::InternalSwap(ChainLockSignatureMessages* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  messages_.InternalSwap(&other->messages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ChainLockSignatureMessages::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[17]);
}

// ===================================================================

class GetEstimatedTransactionFeeRequest::_Internal {
 public:
};

GetEstimatedTransactionFeeRequest::GetEstimatedTransactionFeeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeRequest)
}
GetEstimatedTransactionFeeRequest::GetEstimatedTransactionFeeRequest(const GetEstimatedTransactionFeeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  blocks_ = from.blocks_;
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeRequest)
}

void GetEstimatedTransactionFeeRequest::SharedCtor() {
blocks_ = 0u;
}

GetEstimatedTransactionFeeRequest::~GetEstimatedTransactionFeeRequest() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetEstimatedTransactionFeeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetEstimatedTransactionFeeRequest::ArenaDtor(void* object) {
  GetEstimatedTransactionFeeRequest* _this = reinterpret_cast< GetEstimatedTransactionFeeRequest* >(object);
  (void)_this;
}
void GetEstimatedTransactionFeeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetEstimatedTransactionFeeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetEstimatedTransactionFeeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blocks_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEstimatedTransactionFeeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 blocks = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          blocks_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetEstimatedTransactionFeeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 blocks = 1;
  if (this->blocks() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_blocks(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeRequest)
  return target;
}

size_t GetEstimatedTransactionFeeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 blocks = 1;
  if (this->blocks() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_blocks());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEstimatedTransactionFeeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEstimatedTransactionFeeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetEstimatedTransactionFeeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeRequest)
    MergeFrom(*source);
  }
}

void GetEstimatedTransactionFeeRequest::MergeFrom(const GetEstimatedTransactionFeeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.blocks() != 0) {
    _internal_set_blocks(from._internal_blocks());
  }
}

void GetEstimatedTransactionFeeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEstimatedTransactionFeeRequest::CopyFrom(const GetEstimatedTransactionFeeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEstimatedTransactionFeeRequest::IsInitialized() const {
  return true;
}

void GetEstimatedTransactionFeeRequest::InternalSwap(GetEstimatedTransactionFeeRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(blocks_, other->blocks_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEstimatedTransactionFeeRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[18]);
}

// ===================================================================

class GetEstimatedTransactionFeeResponse::_Internal {
 public:
};

GetEstimatedTransactionFeeResponse::GetEstimatedTransactionFeeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeResponse)
}
GetEstimatedTransactionFeeResponse::GetEstimatedTransactionFeeResponse(const GetEstimatedTransactionFeeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  fee_ = from.fee_;
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeResponse)
}

void GetEstimatedTransactionFeeResponse::SharedCtor() {
fee_ = 0;
}

GetEstimatedTransactionFeeResponse::~GetEstimatedTransactionFeeResponse() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetEstimatedTransactionFeeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetEstimatedTransactionFeeResponse::ArenaDtor(void* object) {
  GetEstimatedTransactionFeeResponse* _this = reinterpret_cast< GetEstimatedTransactionFeeResponse* >(object);
  (void)_this;
}
void GetEstimatedTransactionFeeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetEstimatedTransactionFeeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetEstimatedTransactionFeeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fee_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEstimatedTransactionFeeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double fee = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          fee_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetEstimatedTransactionFeeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double fee = 1;
  if (!(this->fee() <= 0 && this->fee() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_fee(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeResponse)
  return target;
}

size_t GetEstimatedTransactionFeeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double fee = 1;
  if (!(this->fee() <= 0 && this->fee() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEstimatedTransactionFeeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEstimatedTransactionFeeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetEstimatedTransactionFeeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeResponse)
    MergeFrom(*source);
  }
}

void GetEstimatedTransactionFeeResponse::MergeFrom(const GetEstimatedTransactionFeeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.fee() <= 0 && from.fee() >= 0)) {
    _internal_set_fee(from._internal_fee());
  }
}

void GetEstimatedTransactionFeeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEstimatedTransactionFeeResponse::CopyFrom(const GetEstimatedTransactionFeeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEstimatedTransactionFeeResponse::IsInitialized() const {
  return true;
}

void GetEstimatedTransactionFeeResponse::InternalSwap(GetEstimatedTransactionFeeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(fee_, other->fee_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEstimatedTransactionFeeResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[19]);
}

// ===================================================================

class TransactionsWithProofsRequest::_Internal {
 public:
  static const ::org::dash::platform::dapi::v0::BloomFilter& bloom_filter(const TransactionsWithProofsRequest* msg);
};

const ::org::dash::platform::dapi::v0::BloomFilter&
TransactionsWithProofsRequest::_Internal::bloom_filter(const TransactionsWithProofsRequest* msg) {
  return *msg->bloom_filter_;
}
TransactionsWithProofsRequest::TransactionsWithProofsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.TransactionsWithProofsRequest)
}
TransactionsWithProofsRequest::TransactionsWithProofsRequest(const TransactionsWithProofsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_bloom_filter()) {
    bloom_filter_ = new ::org::dash::platform::dapi::v0::BloomFilter(*from.bloom_filter_);
  } else {
    bloom_filter_ = nullptr;
  }
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&send_transaction_hashes_) -
    reinterpret_cast<char*>(&count_)) + sizeof(send_transaction_hashes_));
  clear_has_from_block();
  switch (from.from_block_case()) {
    case kFromBlockHash: {
      _internal_set_from_block_hash(from._internal_from_block_hash());
      break;
    }
    case kFromBlockHeight: {
      _internal_set_from_block_height(from._internal_from_block_height());
      break;
    }
    case FROM_BLOCK_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.TransactionsWithProofsRequest)
}

void TransactionsWithProofsRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&bloom_filter_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&send_transaction_hashes_) -
    reinterpret_cast<char*>(&bloom_filter_)) + sizeof(send_transaction_hashes_));
clear_has_from_block();
}

TransactionsWithProofsRequest::~TransactionsWithProofsRequest() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.TransactionsWithProofsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TransactionsWithProofsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete bloom_filter_;
  if (has_from_block()) {
    clear_from_block();
  }
}

void TransactionsWithProofsRequest::ArenaDtor(void* object) {
  TransactionsWithProofsRequest* _this = reinterpret_cast< TransactionsWithProofsRequest* >(object);
  (void)_this;
}
void TransactionsWithProofsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TransactionsWithProofsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TransactionsWithProofsRequest::clear_from_block() {
// @@protoc_insertion_point(one_of_clear_start:org.dash.platform.dapi.v0.TransactionsWithProofsRequest)
  switch (from_block_case()) {
    case kFromBlockHash: {
      from_block_.from_block_hash_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
      break;
    }
    case kFromBlockHeight: {
      // No need to clear
      break;
    }
    case FROM_BLOCK_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FROM_BLOCK_NOT_SET;
}


void TransactionsWithProofsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.TransactionsWithProofsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && bloom_filter_ != nullptr) {
    delete bloom_filter_;
  }
  bloom_filter_ = nullptr;
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&send_transaction_hashes_) -
      reinterpret_cast<char*>(&count_)) + sizeof(send_transaction_hashes_));
  clear_from_block();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransactionsWithProofsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .org.dash.platform.dapi.v0.BloomFilter bloom_filter = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_bloom_filter(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes from_block_hash = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_from_block_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 from_block_height = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _internal_set_from_block_height(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 count = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool send_transaction_hashes = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          send_transaction_hashes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TransactionsWithProofsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.TransactionsWithProofsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .org.dash.platform.dapi.v0.BloomFilter bloom_filter = 1;
  if (this->has_bloom_filter()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::bloom_filter(this), target, stream);
  }

  // bytes from_block_hash = 2;
  if (_internal_has_from_block_hash()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_from_block_hash(), target);
  }

  // uint32 from_block_height = 3;
  if (_internal_has_from_block_height()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_from_block_height(), target);
  }

  // uint32 count = 4;
  if (this->count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_count(), target);
  }

  // bool send_transaction_hashes = 5;
  if (this->send_transaction_hashes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_send_transaction_hashes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.TransactionsWithProofsRequest)
  return target;
}

size_t TransactionsWithProofsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.TransactionsWithProofsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .org.dash.platform.dapi.v0.BloomFilter bloom_filter = 1;
  if (this->has_bloom_filter()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bloom_filter_);
  }

  // uint32 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_count());
  }

  // bool send_transaction_hashes = 5;
  if (this->send_transaction_hashes() != 0) {
    total_size += 1 + 1;
  }

  switch (from_block_case()) {
    // bytes from_block_hash = 2;
    case kFromBlockHash: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_from_block_hash());
      break;
    }
    // uint32 from_block_height = 3;
    case kFromBlockHeight: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_from_block_height());
      break;
    }
    case FROM_BLOCK_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransactionsWithProofsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.TransactionsWithProofsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionsWithProofsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TransactionsWithProofsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.TransactionsWithProofsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.TransactionsWithProofsRequest)
    MergeFrom(*source);
  }
}

void TransactionsWithProofsRequest::MergeFrom(const TransactionsWithProofsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.TransactionsWithProofsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bloom_filter()) {
    _internal_mutable_bloom_filter()->::org::dash::platform::dapi::v0::BloomFilter::MergeFrom(from._internal_bloom_filter());
  }
  if (from.count() != 0) {
    _internal_set_count(from._internal_count());
  }
  if (from.send_transaction_hashes() != 0) {
    _internal_set_send_transaction_hashes(from._internal_send_transaction_hashes());
  }
  switch (from.from_block_case()) {
    case kFromBlockHash: {
      _internal_set_from_block_hash(from._internal_from_block_hash());
      break;
    }
    case kFromBlockHeight: {
      _internal_set_from_block_height(from._internal_from_block_height());
      break;
    }
    case FROM_BLOCK_NOT_SET: {
      break;
    }
  }
}

void TransactionsWithProofsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.TransactionsWithProofsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionsWithProofsRequest::CopyFrom(const TransactionsWithProofsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.TransactionsWithProofsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionsWithProofsRequest::IsInitialized() const {
  return true;
}

void TransactionsWithProofsRequest::InternalSwap(TransactionsWithProofsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TransactionsWithProofsRequest, send_transaction_hashes_)
      + sizeof(TransactionsWithProofsRequest::send_transaction_hashes_)
      - PROTOBUF_FIELD_OFFSET(TransactionsWithProofsRequest, bloom_filter_)>(
          reinterpret_cast<char*>(&bloom_filter_),
          reinterpret_cast<char*>(&other->bloom_filter_));
  swap(from_block_, other->from_block_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransactionsWithProofsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[20]);
}

// ===================================================================

class BloomFilter::_Internal {
 public:
};

BloomFilter::BloomFilter(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.BloomFilter)
}
BloomFilter::BloomFilter(const BloomFilter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  v_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_v_data().empty()) {
    v_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_v_data(), 
      GetArenaForAllocation());
  }
  ::memcpy(&n_hash_funcs_, &from.n_hash_funcs_,
    static_cast<size_t>(reinterpret_cast<char*>(&n_flags_) -
    reinterpret_cast<char*>(&n_hash_funcs_)) + sizeof(n_flags_));
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.BloomFilter)
}

void BloomFilter::SharedCtor() {
v_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&n_hash_funcs_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&n_flags_) -
    reinterpret_cast<char*>(&n_hash_funcs_)) + sizeof(n_flags_));
}

BloomFilter::~BloomFilter() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.BloomFilter)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BloomFilter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  v_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BloomFilter::ArenaDtor(void* object) {
  BloomFilter* _this = reinterpret_cast< BloomFilter* >(object);
  (void)_this;
}
void BloomFilter::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BloomFilter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BloomFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.BloomFilter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  v_data_.ClearToEmpty();
  ::memset(&n_hash_funcs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&n_flags_) -
      reinterpret_cast<char*>(&n_hash_funcs_)) + sizeof(n_flags_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BloomFilter::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes v_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_v_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 n_hash_funcs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          n_hash_funcs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 n_tweak = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          n_tweak_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 n_flags = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          n_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BloomFilter::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.BloomFilter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes v_data = 1;
  if (!this->v_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_v_data(), target);
  }

  // uint32 n_hash_funcs = 2;
  if (this->n_hash_funcs() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_n_hash_funcs(), target);
  }

  // uint32 n_tweak = 3;
  if (this->n_tweak() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_n_tweak(), target);
  }

  // uint32 n_flags = 4;
  if (this->n_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_n_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.BloomFilter)
  return target;
}

size_t BloomFilter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.BloomFilter)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes v_data = 1;
  if (!this->v_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_v_data());
  }

  // uint32 n_hash_funcs = 2;
  if (this->n_hash_funcs() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_n_hash_funcs());
  }

  // uint32 n_tweak = 3;
  if (this->n_tweak() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_n_tweak());
  }

  // uint32 n_flags = 4;
  if (this->n_flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_n_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BloomFilter::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.BloomFilter)
  GOOGLE_DCHECK_NE(&from, this);
  const BloomFilter* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BloomFilter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.BloomFilter)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.BloomFilter)
    MergeFrom(*source);
  }
}

void BloomFilter::MergeFrom(const BloomFilter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.BloomFilter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from.v_data().empty()) {
    _internal_set_v_data(from._internal_v_data());
  }
  if (from.n_hash_funcs() != 0) {
    _internal_set_n_hash_funcs(from._internal_n_hash_funcs());
  }
  if (from.n_tweak() != 0) {
    _internal_set_n_tweak(from._internal_n_tweak());
  }
  if (from.n_flags() != 0) {
    _internal_set_n_flags(from._internal_n_flags());
  }
}

void BloomFilter::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.BloomFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BloomFilter::CopyFrom(const BloomFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.BloomFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BloomFilter::IsInitialized() const {
  return true;
}

void BloomFilter::InternalSwap(BloomFilter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &v_data_, GetArenaForAllocation(),
      &other->v_data_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BloomFilter, n_flags_)
      + sizeof(BloomFilter::n_flags_)
      - PROTOBUF_FIELD_OFFSET(BloomFilter, n_hash_funcs_)>(
          reinterpret_cast<char*>(&n_hash_funcs_),
          reinterpret_cast<char*>(&other->n_hash_funcs_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BloomFilter::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[21]);
}

// ===================================================================

class TransactionsWithProofsResponse::_Internal {
 public:
  static const ::org::dash::platform::dapi::v0::RawTransactions& raw_transactions(const TransactionsWithProofsResponse* msg);
  static const ::org::dash::platform::dapi::v0::InstantSendLockMessages& instant_send_lock_messages(const TransactionsWithProofsResponse* msg);
};

const ::org::dash::platform::dapi::v0::RawTransactions&
TransactionsWithProofsResponse::_Internal::raw_transactions(const TransactionsWithProofsResponse* msg) {
  return *msg->responses_.raw_transactions_;
}
const ::org::dash::platform::dapi::v0::InstantSendLockMessages&
TransactionsWithProofsResponse::_Internal::instant_send_lock_messages(const TransactionsWithProofsResponse* msg) {
  return *msg->responses_.instant_send_lock_messages_;
}
void TransactionsWithProofsResponse::set_allocated_raw_transactions(::org::dash::platform::dapi::v0::RawTransactions* raw_transactions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_responses();
  if (raw_transactions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::org::dash::platform::dapi::v0::RawTransactions>::GetOwningArena(raw_transactions);
    if (message_arena != submessage_arena) {
      raw_transactions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, raw_transactions, submessage_arena);
    }
    set_has_raw_transactions();
    responses_.raw_transactions_ = raw_transactions;
  }
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.TransactionsWithProofsResponse.raw_transactions)
}
void TransactionsWithProofsResponse::set_allocated_instant_send_lock_messages(::org::dash::platform::dapi::v0::InstantSendLockMessages* instant_send_lock_messages) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_responses();
  if (instant_send_lock_messages) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::org::dash::platform::dapi::v0::InstantSendLockMessages>::GetOwningArena(instant_send_lock_messages);
    if (message_arena != submessage_arena) {
      instant_send_lock_messages = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, instant_send_lock_messages, submessage_arena);
    }
    set_has_instant_send_lock_messages();
    responses_.instant_send_lock_messages_ = instant_send_lock_messages;
  }
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.TransactionsWithProofsResponse.instant_send_lock_messages)
}
TransactionsWithProofsResponse::TransactionsWithProofsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.TransactionsWithProofsResponse)
}
TransactionsWithProofsResponse::TransactionsWithProofsResponse(const TransactionsWithProofsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_responses();
  switch (from.responses_case()) {
    case kRawTransactions: {
      _internal_mutable_raw_transactions()->::org::dash::platform::dapi::v0::RawTransactions::MergeFrom(from._internal_raw_transactions());
      break;
    }
    case kInstantSendLockMessages: {
      _internal_mutable_instant_send_lock_messages()->::org::dash::platform::dapi::v0::InstantSendLockMessages::MergeFrom(from._internal_instant_send_lock_messages());
      break;
    }
    case kRawMerkleBlock: {
      _internal_set_raw_merkle_block(from._internal_raw_merkle_block());
      break;
    }
    case RESPONSES_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.TransactionsWithProofsResponse)
}

void TransactionsWithProofsResponse::SharedCtor() {
clear_has_responses();
}

TransactionsWithProofsResponse::~TransactionsWithProofsResponse() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.TransactionsWithProofsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TransactionsWithProofsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_responses()) {
    clear_responses();
  }
}

void TransactionsWithProofsResponse::ArenaDtor(void* object) {
  TransactionsWithProofsResponse* _this = reinterpret_cast< TransactionsWithProofsResponse* >(object);
  (void)_this;
}
void TransactionsWithProofsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TransactionsWithProofsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TransactionsWithProofsResponse::clear_responses() {
// @@protoc_insertion_point(one_of_clear_start:org.dash.platform.dapi.v0.TransactionsWithProofsResponse)
  switch (responses_case()) {
    case kRawTransactions: {
      if (GetArenaForAllocation() == nullptr) {
        delete responses_.raw_transactions_;
      }
      break;
    }
    case kInstantSendLockMessages: {
      if (GetArenaForAllocation() == nullptr) {
        delete responses_.instant_send_lock_messages_;
      }
      break;
    }
    case kRawMerkleBlock: {
      responses_.raw_merkle_block_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
      break;
    }
    case RESPONSES_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RESPONSES_NOT_SET;
}


void TransactionsWithProofsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.TransactionsWithProofsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_responses();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransactionsWithProofsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .org.dash.platform.dapi.v0.RawTransactions raw_transactions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_raw_transactions(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .org.dash.platform.dapi.v0.InstantSendLockMessages instant_send_lock_messages = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_instant_send_lock_messages(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes raw_merkle_block = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_raw_merkle_block();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TransactionsWithProofsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.TransactionsWithProofsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .org.dash.platform.dapi.v0.RawTransactions raw_transactions = 1;
  if (_internal_has_raw_transactions()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::raw_transactions(this), target, stream);
  }

  // .org.dash.platform.dapi.v0.InstantSendLockMessages instant_send_lock_messages = 2;
  if (_internal_has_instant_send_lock_messages()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::instant_send_lock_messages(this), target, stream);
  }

  // bytes raw_merkle_block = 3;
  if (_internal_has_raw_merkle_block()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_raw_merkle_block(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.TransactionsWithProofsResponse)
  return target;
}

size_t TransactionsWithProofsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.TransactionsWithProofsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (responses_case()) {
    // .org.dash.platform.dapi.v0.RawTransactions raw_transactions = 1;
    case kRawTransactions: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *responses_.raw_transactions_);
      break;
    }
    // .org.dash.platform.dapi.v0.InstantSendLockMessages instant_send_lock_messages = 2;
    case kInstantSendLockMessages: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *responses_.instant_send_lock_messages_);
      break;
    }
    // bytes raw_merkle_block = 3;
    case kRawMerkleBlock: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_raw_merkle_block());
      break;
    }
    case RESPONSES_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransactionsWithProofsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.TransactionsWithProofsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionsWithProofsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TransactionsWithProofsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.TransactionsWithProofsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.TransactionsWithProofsResponse)
    MergeFrom(*source);
  }
}

void TransactionsWithProofsResponse::MergeFrom(const TransactionsWithProofsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.TransactionsWithProofsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.responses_case()) {
    case kRawTransactions: {
      _internal_mutable_raw_transactions()->::org::dash::platform::dapi::v0::RawTransactions::MergeFrom(from._internal_raw_transactions());
      break;
    }
    case kInstantSendLockMessages: {
      _internal_mutable_instant_send_lock_messages()->::org::dash::platform::dapi::v0::InstantSendLockMessages::MergeFrom(from._internal_instant_send_lock_messages());
      break;
    }
    case kRawMerkleBlock: {
      _internal_set_raw_merkle_block(from._internal_raw_merkle_block());
      break;
    }
    case RESPONSES_NOT_SET: {
      break;
    }
  }
}

void TransactionsWithProofsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.TransactionsWithProofsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionsWithProofsResponse::CopyFrom(const TransactionsWithProofsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.TransactionsWithProofsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionsWithProofsResponse::IsInitialized() const {
  return true;
}

void TransactionsWithProofsResponse::InternalSwap(TransactionsWithProofsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(responses_, other->responses_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransactionsWithProofsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[22]);
}

// ===================================================================

class RawTransactions::_Internal {
 public:
};

RawTransactions::RawTransactions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  transactions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.RawTransactions)
}
RawTransactions::RawTransactions(const RawTransactions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      transactions_(from.transactions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.RawTransactions)
}

void RawTransactions::SharedCtor() {
}

RawTransactions::~RawTransactions() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.RawTransactions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RawTransactions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RawTransactions::ArenaDtor(void* object) {
  RawTransactions* _this = reinterpret_cast< RawTransactions* >(object);
  (void)_this;
}
void RawTransactions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RawTransactions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RawTransactions::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.RawTransactions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transactions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RawTransactions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated bytes transactions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_transactions();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RawTransactions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.RawTransactions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes transactions = 1;
  for (int i = 0, n = this->_internal_transactions_size(); i < n; i++) {
    const auto& s = this->_internal_transactions(i);
    target = stream->WriteBytes(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.RawTransactions)
  return target;
}

size_t RawTransactions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.RawTransactions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes transactions = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(transactions_.size());
  for (int i = 0, n = transactions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      transactions_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RawTransactions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.RawTransactions)
  GOOGLE_DCHECK_NE(&from, this);
  const RawTransactions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RawTransactions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.RawTransactions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.RawTransactions)
    MergeFrom(*source);
  }
}

void RawTransactions::MergeFrom(const RawTransactions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.RawTransactions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transactions_.MergeFrom(from.transactions_);
}

void RawTransactions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.RawTransactions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawTransactions::CopyFrom(const RawTransactions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.RawTransactions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawTransactions::IsInitialized() const {
  return true;
}

void RawTransactions::InternalSwap(RawTransactions* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  transactions_.InternalSwap(&other->transactions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RawTransactions::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[23]);
}

// ===================================================================

class InstantSendLockMessages::_Internal {
 public:
};

InstantSendLockMessages::InstantSendLockMessages(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  messages_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:org.dash.platform.dapi.v0.InstantSendLockMessages)
}
InstantSendLockMessages::InstantSendLockMessages(const InstantSendLockMessages& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:org.dash.platform.dapi.v0.InstantSendLockMessages)
}

void InstantSendLockMessages::SharedCtor() {
}

InstantSendLockMessages::~InstantSendLockMessages() {
  // @@protoc_insertion_point(destructor:org.dash.platform.dapi.v0.InstantSendLockMessages)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InstantSendLockMessages::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void InstantSendLockMessages::ArenaDtor(void* object) {
  InstantSendLockMessages* _this = reinterpret_cast< InstantSendLockMessages* >(object);
  (void)_this;
}
void InstantSendLockMessages::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InstantSendLockMessages::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InstantSendLockMessages::Clear() {
// @@protoc_insertion_point(message_clear_start:org.dash.platform.dapi.v0.InstantSendLockMessages)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InstantSendLockMessages::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated bytes messages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_messages();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InstantSendLockMessages::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:org.dash.platform.dapi.v0.InstantSendLockMessages)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes messages = 1;
  for (int i = 0, n = this->_internal_messages_size(); i < n; i++) {
    const auto& s = this->_internal_messages(i);
    target = stream->WriteBytes(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:org.dash.platform.dapi.v0.InstantSendLockMessages)
  return target;
}

size_t InstantSendLockMessages::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:org.dash.platform.dapi.v0.InstantSendLockMessages)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes messages = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(messages_.size());
  for (int i = 0, n = messages_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      messages_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InstantSendLockMessages::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:org.dash.platform.dapi.v0.InstantSendLockMessages)
  GOOGLE_DCHECK_NE(&from, this);
  const InstantSendLockMessages* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InstantSendLockMessages>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:org.dash.platform.dapi.v0.InstantSendLockMessages)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:org.dash.platform.dapi.v0.InstantSendLockMessages)
    MergeFrom(*source);
  }
}

void InstantSendLockMessages::MergeFrom(const InstantSendLockMessages& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:org.dash.platform.dapi.v0.InstantSendLockMessages)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
}

void InstantSendLockMessages::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:org.dash.platform.dapi.v0.InstantSendLockMessages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InstantSendLockMessages::CopyFrom(const InstantSendLockMessages& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:org.dash.platform.dapi.v0.InstantSendLockMessages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InstantSendLockMessages::IsInitialized() const {
  return true;
}

void InstantSendLockMessages::InternalSwap(InstantSendLockMessages* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  messages_.InternalSwap(&other->messages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InstantSendLockMessages::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_core_2eproto_getter, &descriptor_table_core_2eproto_once,
      file_level_metadata_core_2eproto[24]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v0
}  // namespace dapi
}  // namespace platform
}  // namespace dash
}  // namespace org
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetStatusRequest* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetStatusResponse_Version* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetStatusResponse_Version >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetStatusResponse_Version >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetStatusResponse_Time* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetStatusResponse_Time >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetStatusResponse_Time >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetStatusResponse_Chain* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetStatusResponse_Chain >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetStatusResponse_Chain >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetStatusResponse_Network* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetStatusResponse_Network >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetStatusResponse_Network >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetStatusResponse* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetBlockRequest* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetBlockRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetBlockRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetBlockResponse* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetBlockResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetBlockResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::BroadcastTransactionRequest* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::BroadcastTransactionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::BroadcastTransactionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::BroadcastTransactionResponse* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::BroadcastTransactionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::BroadcastTransactionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetTransactionRequest* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetTransactionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetTransactionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetTransactionResponse* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetTransactionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetTransactionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::BlockHeadersWithChainLocksRequest* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::BlockHeadersWithChainLocksRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::BlockHeadersWithChainLocksRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::BlockHeadersWithChainLocksResponse* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::BlockHeadersWithChainLocksResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::BlockHeadersWithChainLocksResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::BlockHeaders* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::BlockHeaders >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::BlockHeaders >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::ChainLockSignatureMessages* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::ChainLockSignatureMessages >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::ChainLockSignatureMessages >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetEstimatedTransactionFeeRequest* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetEstimatedTransactionFeeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetEstimatedTransactionFeeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::GetEstimatedTransactionFeeResponse* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::GetEstimatedTransactionFeeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::GetEstimatedTransactionFeeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::TransactionsWithProofsRequest* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::TransactionsWithProofsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::TransactionsWithProofsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::BloomFilter* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::BloomFilter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::BloomFilter >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::TransactionsWithProofsResponse* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::TransactionsWithProofsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::TransactionsWithProofsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::RawTransactions* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::RawTransactions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::RawTransactions >(arena);
}
template<> PROTOBUF_NOINLINE ::org::dash::platform::dapi::v0::InstantSendLockMessages* Arena::CreateMaybeMessage< ::org::dash::platform::dapi::v0::InstantSendLockMessages >(Arena* arena) {
  return Arena::CreateMessageInternal< ::org::dash::platform::dapi::v0::InstantSendLockMessages >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
