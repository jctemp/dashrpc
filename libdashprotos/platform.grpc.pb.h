// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: platform.proto
#ifndef GRPC_platform_2eproto__INCLUDED
#define GRPC_platform_2eproto__INCLUDED

#include "platform.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace org {
namespace dash {
namespace platform {
namespace dapi {
namespace v0 {

class Platform final {
 public:
  static constexpr char const* service_full_name() {
    return "org.dash.platform.dapi.v0.Platform";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status broadcastStateTransition(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest& request, ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse>> AsyncbroadcastStateTransition(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse>>(AsyncbroadcastStateTransitionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse>> PrepareAsyncbroadcastStateTransition(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse>>(PrepareAsyncbroadcastStateTransitionRaw(context, request, cq));
    }
    virtual ::grpc::Status getIdentity(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityRequest& request, ::org::dash::platform::dapi::v0::GetIdentityResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetIdentityResponse>> AsyncgetIdentity(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetIdentityResponse>>(AsyncgetIdentityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetIdentityResponse>> PrepareAsyncgetIdentity(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetIdentityResponse>>(PrepareAsyncgetIdentityRaw(context, request, cq));
    }
    virtual ::grpc::Status getDataContract(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDataContractRequest& request, ::org::dash::platform::dapi::v0::GetDataContractResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetDataContractResponse>> AsyncgetDataContract(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDataContractRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetDataContractResponse>>(AsyncgetDataContractRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetDataContractResponse>> PrepareAsyncgetDataContract(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDataContractRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetDataContractResponse>>(PrepareAsyncgetDataContractRaw(context, request, cq));
    }
    virtual ::grpc::Status getDocuments(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDocumentsRequest& request, ::org::dash::platform::dapi::v0::GetDocumentsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetDocumentsResponse>> AsyncgetDocuments(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDocumentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetDocumentsResponse>>(AsyncgetDocumentsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetDocumentsResponse>> PrepareAsyncgetDocuments(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDocumentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetDocumentsResponse>>(PrepareAsyncgetDocumentsRaw(context, request, cq));
    }
    virtual ::grpc::Status getIdentitiesByPublicKeyHashes(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest& request, ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse>> AsyncgetIdentitiesByPublicKeyHashes(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse>>(AsyncgetIdentitiesByPublicKeyHashesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse>> PrepareAsyncgetIdentitiesByPublicKeyHashes(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse>>(PrepareAsyncgetIdentitiesByPublicKeyHashesRaw(context, request, cq));
    }
    virtual ::grpc::Status getIdentityIdsByPublicKeyHashes(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest& request, ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse>> AsyncgetIdentityIdsByPublicKeyHashes(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse>>(AsyncgetIdentityIdsByPublicKeyHashesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse>> PrepareAsyncgetIdentityIdsByPublicKeyHashes(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse>>(PrepareAsyncgetIdentityIdsByPublicKeyHashesRaw(context, request, cq));
    }
    virtual ::grpc::Status waitForStateTransitionResult(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest& request, ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse>> AsyncwaitForStateTransitionResult(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse>>(AsyncwaitForStateTransitionResultRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse>> PrepareAsyncwaitForStateTransitionResult(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse>>(PrepareAsyncwaitForStateTransitionResultRaw(context, request, cq));
    }
    virtual ::grpc::Status getConsensusParams(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetConsensusParamsRequest& request, ::org::dash::platform::dapi::v0::GetConsensusParamsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetConsensusParamsResponse>> AsyncgetConsensusParams(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetConsensusParamsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetConsensusParamsResponse>>(AsyncgetConsensusParamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetConsensusParamsResponse>> PrepareAsyncgetConsensusParams(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetConsensusParamsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetConsensusParamsResponse>>(PrepareAsyncgetConsensusParamsRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void broadcastStateTransition(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest* request, ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void broadcastStateTransition(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest* request, ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void getIdentity(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityRequest* request, ::org::dash::platform::dapi::v0::GetIdentityResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getIdentity(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityRequest* request, ::org::dash::platform::dapi::v0::GetIdentityResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void getDataContract(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDataContractRequest* request, ::org::dash::platform::dapi::v0::GetDataContractResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getDataContract(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDataContractRequest* request, ::org::dash::platform::dapi::v0::GetDataContractResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void getDocuments(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDocumentsRequest* request, ::org::dash::platform::dapi::v0::GetDocumentsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getDocuments(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDocumentsRequest* request, ::org::dash::platform::dapi::v0::GetDocumentsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void getIdentitiesByPublicKeyHashes(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest* request, ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getIdentitiesByPublicKeyHashes(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest* request, ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void getIdentityIdsByPublicKeyHashes(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest* request, ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getIdentityIdsByPublicKeyHashes(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest* request, ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void waitForStateTransitionResult(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest* request, ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void waitForStateTransitionResult(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest* request, ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void getConsensusParams(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetConsensusParamsRequest* request, ::org::dash::platform::dapi::v0::GetConsensusParamsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getConsensusParams(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetConsensusParamsRequest* request, ::org::dash::platform::dapi::v0::GetConsensusParamsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse>* AsyncbroadcastStateTransitionRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse>* PrepareAsyncbroadcastStateTransitionRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetIdentityResponse>* AsyncgetIdentityRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetIdentityResponse>* PrepareAsyncgetIdentityRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetDataContractResponse>* AsyncgetDataContractRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDataContractRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetDataContractResponse>* PrepareAsyncgetDataContractRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDataContractRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetDocumentsResponse>* AsyncgetDocumentsRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDocumentsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetDocumentsResponse>* PrepareAsyncgetDocumentsRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDocumentsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse>* AsyncgetIdentitiesByPublicKeyHashesRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse>* PrepareAsyncgetIdentitiesByPublicKeyHashesRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse>* AsyncgetIdentityIdsByPublicKeyHashesRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse>* PrepareAsyncgetIdentityIdsByPublicKeyHashesRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse>* AsyncwaitForStateTransitionResultRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse>* PrepareAsyncwaitForStateTransitionResultRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetConsensusParamsResponse>* AsyncgetConsensusParamsRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetConsensusParamsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::org::dash::platform::dapi::v0::GetConsensusParamsResponse>* PrepareAsyncgetConsensusParamsRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetConsensusParamsRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status broadcastStateTransition(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest& request, ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse>> AsyncbroadcastStateTransition(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse>>(AsyncbroadcastStateTransitionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse>> PrepareAsyncbroadcastStateTransition(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse>>(PrepareAsyncbroadcastStateTransitionRaw(context, request, cq));
    }
    ::grpc::Status getIdentity(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityRequest& request, ::org::dash::platform::dapi::v0::GetIdentityResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetIdentityResponse>> AsyncgetIdentity(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetIdentityResponse>>(AsyncgetIdentityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetIdentityResponse>> PrepareAsyncgetIdentity(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetIdentityResponse>>(PrepareAsyncgetIdentityRaw(context, request, cq));
    }
    ::grpc::Status getDataContract(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDataContractRequest& request, ::org::dash::platform::dapi::v0::GetDataContractResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetDataContractResponse>> AsyncgetDataContract(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDataContractRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetDataContractResponse>>(AsyncgetDataContractRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetDataContractResponse>> PrepareAsyncgetDataContract(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDataContractRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetDataContractResponse>>(PrepareAsyncgetDataContractRaw(context, request, cq));
    }
    ::grpc::Status getDocuments(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDocumentsRequest& request, ::org::dash::platform::dapi::v0::GetDocumentsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetDocumentsResponse>> AsyncgetDocuments(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDocumentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetDocumentsResponse>>(AsyncgetDocumentsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetDocumentsResponse>> PrepareAsyncgetDocuments(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDocumentsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetDocumentsResponse>>(PrepareAsyncgetDocumentsRaw(context, request, cq));
    }
    ::grpc::Status getIdentitiesByPublicKeyHashes(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest& request, ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse>> AsyncgetIdentitiesByPublicKeyHashes(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse>>(AsyncgetIdentitiesByPublicKeyHashesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse>> PrepareAsyncgetIdentitiesByPublicKeyHashes(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse>>(PrepareAsyncgetIdentitiesByPublicKeyHashesRaw(context, request, cq));
    }
    ::grpc::Status getIdentityIdsByPublicKeyHashes(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest& request, ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse>> AsyncgetIdentityIdsByPublicKeyHashes(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse>>(AsyncgetIdentityIdsByPublicKeyHashesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse>> PrepareAsyncgetIdentityIdsByPublicKeyHashes(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse>>(PrepareAsyncgetIdentityIdsByPublicKeyHashesRaw(context, request, cq));
    }
    ::grpc::Status waitForStateTransitionResult(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest& request, ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse>> AsyncwaitForStateTransitionResult(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse>>(AsyncwaitForStateTransitionResultRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse>> PrepareAsyncwaitForStateTransitionResult(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse>>(PrepareAsyncwaitForStateTransitionResultRaw(context, request, cq));
    }
    ::grpc::Status getConsensusParams(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetConsensusParamsRequest& request, ::org::dash::platform::dapi::v0::GetConsensusParamsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetConsensusParamsResponse>> AsyncgetConsensusParams(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetConsensusParamsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetConsensusParamsResponse>>(AsyncgetConsensusParamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetConsensusParamsResponse>> PrepareAsyncgetConsensusParams(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetConsensusParamsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetConsensusParamsResponse>>(PrepareAsyncgetConsensusParamsRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void broadcastStateTransition(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest* request, ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse* response, std::function<void(::grpc::Status)>) override;
      void broadcastStateTransition(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest* request, ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getIdentity(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityRequest* request, ::org::dash::platform::dapi::v0::GetIdentityResponse* response, std::function<void(::grpc::Status)>) override;
      void getIdentity(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityRequest* request, ::org::dash::platform::dapi::v0::GetIdentityResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getDataContract(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDataContractRequest* request, ::org::dash::platform::dapi::v0::GetDataContractResponse* response, std::function<void(::grpc::Status)>) override;
      void getDataContract(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDataContractRequest* request, ::org::dash::platform::dapi::v0::GetDataContractResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getDocuments(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDocumentsRequest* request, ::org::dash::platform::dapi::v0::GetDocumentsResponse* response, std::function<void(::grpc::Status)>) override;
      void getDocuments(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDocumentsRequest* request, ::org::dash::platform::dapi::v0::GetDocumentsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getIdentitiesByPublicKeyHashes(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest* request, ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse* response, std::function<void(::grpc::Status)>) override;
      void getIdentitiesByPublicKeyHashes(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest* request, ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getIdentityIdsByPublicKeyHashes(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest* request, ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse* response, std::function<void(::grpc::Status)>) override;
      void getIdentityIdsByPublicKeyHashes(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest* request, ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void waitForStateTransitionResult(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest* request, ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse* response, std::function<void(::grpc::Status)>) override;
      void waitForStateTransitionResult(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest* request, ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getConsensusParams(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetConsensusParamsRequest* request, ::org::dash::platform::dapi::v0::GetConsensusParamsResponse* response, std::function<void(::grpc::Status)>) override;
      void getConsensusParams(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetConsensusParamsRequest* request, ::org::dash::platform::dapi::v0::GetConsensusParamsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse>* AsyncbroadcastStateTransitionRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse>* PrepareAsyncbroadcastStateTransitionRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetIdentityResponse>* AsyncgetIdentityRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetIdentityResponse>* PrepareAsyncgetIdentityRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetDataContractResponse>* AsyncgetDataContractRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDataContractRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetDataContractResponse>* PrepareAsyncgetDataContractRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDataContractRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetDocumentsResponse>* AsyncgetDocumentsRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDocumentsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetDocumentsResponse>* PrepareAsyncgetDocumentsRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetDocumentsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse>* AsyncgetIdentitiesByPublicKeyHashesRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse>* PrepareAsyncgetIdentitiesByPublicKeyHashesRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse>* AsyncgetIdentityIdsByPublicKeyHashesRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse>* PrepareAsyncgetIdentityIdsByPublicKeyHashesRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse>* AsyncwaitForStateTransitionResultRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse>* PrepareAsyncwaitForStateTransitionResultRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetConsensusParamsResponse>* AsyncgetConsensusParamsRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetConsensusParamsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::org::dash::platform::dapi::v0::GetConsensusParamsResponse>* PrepareAsyncgetConsensusParamsRaw(::grpc::ClientContext* context, const ::org::dash::platform::dapi::v0::GetConsensusParamsRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_broadcastStateTransition_;
    const ::grpc::internal::RpcMethod rpcmethod_getIdentity_;
    const ::grpc::internal::RpcMethod rpcmethod_getDataContract_;
    const ::grpc::internal::RpcMethod rpcmethod_getDocuments_;
    const ::grpc::internal::RpcMethod rpcmethod_getIdentitiesByPublicKeyHashes_;
    const ::grpc::internal::RpcMethod rpcmethod_getIdentityIdsByPublicKeyHashes_;
    const ::grpc::internal::RpcMethod rpcmethod_waitForStateTransitionResult_;
    const ::grpc::internal::RpcMethod rpcmethod_getConsensusParams_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status broadcastStateTransition(::grpc::ServerContext* context, const ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest* request, ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse* response);
    virtual ::grpc::Status getIdentity(::grpc::ServerContext* context, const ::org::dash::platform::dapi::v0::GetIdentityRequest* request, ::org::dash::platform::dapi::v0::GetIdentityResponse* response);
    virtual ::grpc::Status getDataContract(::grpc::ServerContext* context, const ::org::dash::platform::dapi::v0::GetDataContractRequest* request, ::org::dash::platform::dapi::v0::GetDataContractResponse* response);
    virtual ::grpc::Status getDocuments(::grpc::ServerContext* context, const ::org::dash::platform::dapi::v0::GetDocumentsRequest* request, ::org::dash::platform::dapi::v0::GetDocumentsResponse* response);
    virtual ::grpc::Status getIdentitiesByPublicKeyHashes(::grpc::ServerContext* context, const ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest* request, ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse* response);
    virtual ::grpc::Status getIdentityIdsByPublicKeyHashes(::grpc::ServerContext* context, const ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest* request, ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse* response);
    virtual ::grpc::Status waitForStateTransitionResult(::grpc::ServerContext* context, const ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest* request, ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse* response);
    virtual ::grpc::Status getConsensusParams(::grpc::ServerContext* context, const ::org::dash::platform::dapi::v0::GetConsensusParamsRequest* request, ::org::dash::platform::dapi::v0::GetConsensusParamsResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_broadcastStateTransition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_broadcastStateTransition() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_broadcastStateTransition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status broadcastStateTransition(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest* /*request*/, ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestbroadcastStateTransition(::grpc::ServerContext* context, ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest* request, ::grpc::ServerAsyncResponseWriter< ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getIdentity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getIdentity() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_getIdentity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getIdentity(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetIdentityRequest* /*request*/, ::org::dash::platform::dapi::v0::GetIdentityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetIdentity(::grpc::ServerContext* context, ::org::dash::platform::dapi::v0::GetIdentityRequest* request, ::grpc::ServerAsyncResponseWriter< ::org::dash::platform::dapi::v0::GetIdentityResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getDataContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getDataContract() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_getDataContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getDataContract(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetDataContractRequest* /*request*/, ::org::dash::platform::dapi::v0::GetDataContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetDataContract(::grpc::ServerContext* context, ::org::dash::platform::dapi::v0::GetDataContractRequest* request, ::grpc::ServerAsyncResponseWriter< ::org::dash::platform::dapi::v0::GetDataContractResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getDocuments() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_getDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getDocuments(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetDocumentsRequest* /*request*/, ::org::dash::platform::dapi::v0::GetDocumentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetDocuments(::grpc::ServerContext* context, ::org::dash::platform::dapi::v0::GetDocumentsRequest* request, ::grpc::ServerAsyncResponseWriter< ::org::dash::platform::dapi::v0::GetDocumentsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getIdentitiesByPublicKeyHashes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getIdentitiesByPublicKeyHashes() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_getIdentitiesByPublicKeyHashes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getIdentitiesByPublicKeyHashes(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest* /*request*/, ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetIdentitiesByPublicKeyHashes(::grpc::ServerContext* context, ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest* request, ::grpc::ServerAsyncResponseWriter< ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getIdentityIdsByPublicKeyHashes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getIdentityIdsByPublicKeyHashes() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_getIdentityIdsByPublicKeyHashes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getIdentityIdsByPublicKeyHashes(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest* /*request*/, ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetIdentityIdsByPublicKeyHashes(::grpc::ServerContext* context, ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest* request, ::grpc::ServerAsyncResponseWriter< ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_waitForStateTransitionResult : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_waitForStateTransitionResult() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_waitForStateTransitionResult() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status waitForStateTransitionResult(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest* /*request*/, ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestwaitForStateTransitionResult(::grpc::ServerContext* context, ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest* request, ::grpc::ServerAsyncResponseWriter< ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getConsensusParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getConsensusParams() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_getConsensusParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getConsensusParams(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetConsensusParamsRequest* /*request*/, ::org::dash::platform::dapi::v0::GetConsensusParamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetConsensusParams(::grpc::ServerContext* context, ::org::dash::platform::dapi::v0::GetConsensusParamsRequest* request, ::grpc::ServerAsyncResponseWriter< ::org::dash::platform::dapi::v0::GetConsensusParamsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_broadcastStateTransition<WithAsyncMethod_getIdentity<WithAsyncMethod_getDataContract<WithAsyncMethod_getDocuments<WithAsyncMethod_getIdentitiesByPublicKeyHashes<WithAsyncMethod_getIdentityIdsByPublicKeyHashes<WithAsyncMethod_waitForStateTransitionResult<WithAsyncMethod_getConsensusParams<Service > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_broadcastStateTransition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_broadcastStateTransition() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest, ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest* request, ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse* response) { return this->broadcastStateTransition(context, request, response); }));}
    void SetMessageAllocatorFor_broadcastStateTransition(
        ::grpc::MessageAllocator< ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest, ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest, ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_broadcastStateTransition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status broadcastStateTransition(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest* /*request*/, ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* broadcastStateTransition(
      ::grpc::CallbackServerContext* /*context*/, const ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest* /*request*/, ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getIdentity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getIdentity() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::org::dash::platform::dapi::v0::GetIdentityRequest, ::org::dash::platform::dapi::v0::GetIdentityResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::org::dash::platform::dapi::v0::GetIdentityRequest* request, ::org::dash::platform::dapi::v0::GetIdentityResponse* response) { return this->getIdentity(context, request, response); }));}
    void SetMessageAllocatorFor_getIdentity(
        ::grpc::MessageAllocator< ::org::dash::platform::dapi::v0::GetIdentityRequest, ::org::dash::platform::dapi::v0::GetIdentityResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::org::dash::platform::dapi::v0::GetIdentityRequest, ::org::dash::platform::dapi::v0::GetIdentityResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getIdentity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getIdentity(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetIdentityRequest* /*request*/, ::org::dash::platform::dapi::v0::GetIdentityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getIdentity(
      ::grpc::CallbackServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetIdentityRequest* /*request*/, ::org::dash::platform::dapi::v0::GetIdentityResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getDataContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getDataContract() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::org::dash::platform::dapi::v0::GetDataContractRequest, ::org::dash::platform::dapi::v0::GetDataContractResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::org::dash::platform::dapi::v0::GetDataContractRequest* request, ::org::dash::platform::dapi::v0::GetDataContractResponse* response) { return this->getDataContract(context, request, response); }));}
    void SetMessageAllocatorFor_getDataContract(
        ::grpc::MessageAllocator< ::org::dash::platform::dapi::v0::GetDataContractRequest, ::org::dash::platform::dapi::v0::GetDataContractResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::org::dash::platform::dapi::v0::GetDataContractRequest, ::org::dash::platform::dapi::v0::GetDataContractResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getDataContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getDataContract(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetDataContractRequest* /*request*/, ::org::dash::platform::dapi::v0::GetDataContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getDataContract(
      ::grpc::CallbackServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetDataContractRequest* /*request*/, ::org::dash::platform::dapi::v0::GetDataContractResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getDocuments() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::org::dash::platform::dapi::v0::GetDocumentsRequest, ::org::dash::platform::dapi::v0::GetDocumentsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::org::dash::platform::dapi::v0::GetDocumentsRequest* request, ::org::dash::platform::dapi::v0::GetDocumentsResponse* response) { return this->getDocuments(context, request, response); }));}
    void SetMessageAllocatorFor_getDocuments(
        ::grpc::MessageAllocator< ::org::dash::platform::dapi::v0::GetDocumentsRequest, ::org::dash::platform::dapi::v0::GetDocumentsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::org::dash::platform::dapi::v0::GetDocumentsRequest, ::org::dash::platform::dapi::v0::GetDocumentsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getDocuments(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetDocumentsRequest* /*request*/, ::org::dash::platform::dapi::v0::GetDocumentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getDocuments(
      ::grpc::CallbackServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetDocumentsRequest* /*request*/, ::org::dash::platform::dapi::v0::GetDocumentsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getIdentitiesByPublicKeyHashes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getIdentitiesByPublicKeyHashes() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest, ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest* request, ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse* response) { return this->getIdentitiesByPublicKeyHashes(context, request, response); }));}
    void SetMessageAllocatorFor_getIdentitiesByPublicKeyHashes(
        ::grpc::MessageAllocator< ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest, ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest, ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getIdentitiesByPublicKeyHashes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getIdentitiesByPublicKeyHashes(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest* /*request*/, ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getIdentitiesByPublicKeyHashes(
      ::grpc::CallbackServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest* /*request*/, ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getIdentityIdsByPublicKeyHashes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getIdentityIdsByPublicKeyHashes() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest, ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest* request, ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse* response) { return this->getIdentityIdsByPublicKeyHashes(context, request, response); }));}
    void SetMessageAllocatorFor_getIdentityIdsByPublicKeyHashes(
        ::grpc::MessageAllocator< ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest, ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest, ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getIdentityIdsByPublicKeyHashes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getIdentityIdsByPublicKeyHashes(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest* /*request*/, ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getIdentityIdsByPublicKeyHashes(
      ::grpc::CallbackServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest* /*request*/, ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_waitForStateTransitionResult : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_waitForStateTransitionResult() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest, ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest* request, ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse* response) { return this->waitForStateTransitionResult(context, request, response); }));}
    void SetMessageAllocatorFor_waitForStateTransitionResult(
        ::grpc::MessageAllocator< ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest, ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest, ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_waitForStateTransitionResult() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status waitForStateTransitionResult(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest* /*request*/, ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* waitForStateTransitionResult(
      ::grpc::CallbackServerContext* /*context*/, const ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest* /*request*/, ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getConsensusParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getConsensusParams() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::org::dash::platform::dapi::v0::GetConsensusParamsRequest, ::org::dash::platform::dapi::v0::GetConsensusParamsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::org::dash::platform::dapi::v0::GetConsensusParamsRequest* request, ::org::dash::platform::dapi::v0::GetConsensusParamsResponse* response) { return this->getConsensusParams(context, request, response); }));}
    void SetMessageAllocatorFor_getConsensusParams(
        ::grpc::MessageAllocator< ::org::dash::platform::dapi::v0::GetConsensusParamsRequest, ::org::dash::platform::dapi::v0::GetConsensusParamsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::org::dash::platform::dapi::v0::GetConsensusParamsRequest, ::org::dash::platform::dapi::v0::GetConsensusParamsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getConsensusParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getConsensusParams(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetConsensusParamsRequest* /*request*/, ::org::dash::platform::dapi::v0::GetConsensusParamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getConsensusParams(
      ::grpc::CallbackServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetConsensusParamsRequest* /*request*/, ::org::dash::platform::dapi::v0::GetConsensusParamsResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_broadcastStateTransition<WithCallbackMethod_getIdentity<WithCallbackMethod_getDataContract<WithCallbackMethod_getDocuments<WithCallbackMethod_getIdentitiesByPublicKeyHashes<WithCallbackMethod_getIdentityIdsByPublicKeyHashes<WithCallbackMethod_waitForStateTransitionResult<WithCallbackMethod_getConsensusParams<Service > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_broadcastStateTransition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_broadcastStateTransition() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_broadcastStateTransition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status broadcastStateTransition(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest* /*request*/, ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getIdentity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getIdentity() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_getIdentity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getIdentity(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetIdentityRequest* /*request*/, ::org::dash::platform::dapi::v0::GetIdentityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getDataContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getDataContract() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_getDataContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getDataContract(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetDataContractRequest* /*request*/, ::org::dash::platform::dapi::v0::GetDataContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getDocuments() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_getDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getDocuments(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetDocumentsRequest* /*request*/, ::org::dash::platform::dapi::v0::GetDocumentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getIdentitiesByPublicKeyHashes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getIdentitiesByPublicKeyHashes() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_getIdentitiesByPublicKeyHashes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getIdentitiesByPublicKeyHashes(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest* /*request*/, ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getIdentityIdsByPublicKeyHashes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getIdentityIdsByPublicKeyHashes() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_getIdentityIdsByPublicKeyHashes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getIdentityIdsByPublicKeyHashes(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest* /*request*/, ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_waitForStateTransitionResult : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_waitForStateTransitionResult() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_waitForStateTransitionResult() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status waitForStateTransitionResult(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest* /*request*/, ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getConsensusParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getConsensusParams() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_getConsensusParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getConsensusParams(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetConsensusParamsRequest* /*request*/, ::org::dash::platform::dapi::v0::GetConsensusParamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_broadcastStateTransition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_broadcastStateTransition() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_broadcastStateTransition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status broadcastStateTransition(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest* /*request*/, ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestbroadcastStateTransition(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getIdentity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getIdentity() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_getIdentity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getIdentity(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetIdentityRequest* /*request*/, ::org::dash::platform::dapi::v0::GetIdentityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetIdentity(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getDataContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getDataContract() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_getDataContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getDataContract(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetDataContractRequest* /*request*/, ::org::dash::platform::dapi::v0::GetDataContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetDataContract(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getDocuments() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_getDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getDocuments(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetDocumentsRequest* /*request*/, ::org::dash::platform::dapi::v0::GetDocumentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetDocuments(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getIdentitiesByPublicKeyHashes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getIdentitiesByPublicKeyHashes() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_getIdentitiesByPublicKeyHashes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getIdentitiesByPublicKeyHashes(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest* /*request*/, ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetIdentitiesByPublicKeyHashes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getIdentityIdsByPublicKeyHashes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getIdentityIdsByPublicKeyHashes() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_getIdentityIdsByPublicKeyHashes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getIdentityIdsByPublicKeyHashes(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest* /*request*/, ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetIdentityIdsByPublicKeyHashes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_waitForStateTransitionResult : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_waitForStateTransitionResult() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_waitForStateTransitionResult() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status waitForStateTransitionResult(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest* /*request*/, ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestwaitForStateTransitionResult(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getConsensusParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getConsensusParams() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_getConsensusParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getConsensusParams(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetConsensusParamsRequest* /*request*/, ::org::dash::platform::dapi::v0::GetConsensusParamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetConsensusParams(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_broadcastStateTransition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_broadcastStateTransition() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->broadcastStateTransition(context, request, response); }));
    }
    ~WithRawCallbackMethod_broadcastStateTransition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status broadcastStateTransition(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest* /*request*/, ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* broadcastStateTransition(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getIdentity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getIdentity() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getIdentity(context, request, response); }));
    }
    ~WithRawCallbackMethod_getIdentity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getIdentity(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetIdentityRequest* /*request*/, ::org::dash::platform::dapi::v0::GetIdentityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getIdentity(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getDataContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getDataContract() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getDataContract(context, request, response); }));
    }
    ~WithRawCallbackMethod_getDataContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getDataContract(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetDataContractRequest* /*request*/, ::org::dash::platform::dapi::v0::GetDataContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getDataContract(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getDocuments() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getDocuments(context, request, response); }));
    }
    ~WithRawCallbackMethod_getDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getDocuments(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetDocumentsRequest* /*request*/, ::org::dash::platform::dapi::v0::GetDocumentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getDocuments(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getIdentitiesByPublicKeyHashes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getIdentitiesByPublicKeyHashes() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getIdentitiesByPublicKeyHashes(context, request, response); }));
    }
    ~WithRawCallbackMethod_getIdentitiesByPublicKeyHashes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getIdentitiesByPublicKeyHashes(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest* /*request*/, ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getIdentitiesByPublicKeyHashes(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getIdentityIdsByPublicKeyHashes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getIdentityIdsByPublicKeyHashes() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getIdentityIdsByPublicKeyHashes(context, request, response); }));
    }
    ~WithRawCallbackMethod_getIdentityIdsByPublicKeyHashes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getIdentityIdsByPublicKeyHashes(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest* /*request*/, ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getIdentityIdsByPublicKeyHashes(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_waitForStateTransitionResult : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_waitForStateTransitionResult() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->waitForStateTransitionResult(context, request, response); }));
    }
    ~WithRawCallbackMethod_waitForStateTransitionResult() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status waitForStateTransitionResult(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest* /*request*/, ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* waitForStateTransitionResult(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getConsensusParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getConsensusParams() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getConsensusParams(context, request, response); }));
    }
    ~WithRawCallbackMethod_getConsensusParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getConsensusParams(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetConsensusParamsRequest* /*request*/, ::org::dash::platform::dapi::v0::GetConsensusParamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getConsensusParams(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_broadcastStateTransition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_broadcastStateTransition() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest, ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest, ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse>* streamer) {
                       return this->StreamedbroadcastStateTransition(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_broadcastStateTransition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status broadcastStateTransition(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest* /*request*/, ::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedbroadcastStateTransition(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::org::dash::platform::dapi::v0::BroadcastStateTransitionRequest,::org::dash::platform::dapi::v0::BroadcastStateTransitionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getIdentity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getIdentity() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::org::dash::platform::dapi::v0::GetIdentityRequest, ::org::dash::platform::dapi::v0::GetIdentityResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::org::dash::platform::dapi::v0::GetIdentityRequest, ::org::dash::platform::dapi::v0::GetIdentityResponse>* streamer) {
                       return this->StreamedgetIdentity(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getIdentity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getIdentity(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetIdentityRequest* /*request*/, ::org::dash::platform::dapi::v0::GetIdentityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetIdentity(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::org::dash::platform::dapi::v0::GetIdentityRequest,::org::dash::platform::dapi::v0::GetIdentityResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getDataContract : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getDataContract() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::org::dash::platform::dapi::v0::GetDataContractRequest, ::org::dash::platform::dapi::v0::GetDataContractResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::org::dash::platform::dapi::v0::GetDataContractRequest, ::org::dash::platform::dapi::v0::GetDataContractResponse>* streamer) {
                       return this->StreamedgetDataContract(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getDataContract() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getDataContract(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetDataContractRequest* /*request*/, ::org::dash::platform::dapi::v0::GetDataContractResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetDataContract(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::org::dash::platform::dapi::v0::GetDataContractRequest,::org::dash::platform::dapi::v0::GetDataContractResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getDocuments : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getDocuments() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::org::dash::platform::dapi::v0::GetDocumentsRequest, ::org::dash::platform::dapi::v0::GetDocumentsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::org::dash::platform::dapi::v0::GetDocumentsRequest, ::org::dash::platform::dapi::v0::GetDocumentsResponse>* streamer) {
                       return this->StreamedgetDocuments(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getDocuments() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getDocuments(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetDocumentsRequest* /*request*/, ::org::dash::platform::dapi::v0::GetDocumentsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetDocuments(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::org::dash::platform::dapi::v0::GetDocumentsRequest,::org::dash::platform::dapi::v0::GetDocumentsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getIdentitiesByPublicKeyHashes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getIdentitiesByPublicKeyHashes() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest, ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest, ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse>* streamer) {
                       return this->StreamedgetIdentitiesByPublicKeyHashes(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getIdentitiesByPublicKeyHashes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getIdentitiesByPublicKeyHashes(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest* /*request*/, ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetIdentitiesByPublicKeyHashes(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesRequest,::org::dash::platform::dapi::v0::GetIdentitiesByPublicKeyHashesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getIdentityIdsByPublicKeyHashes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getIdentityIdsByPublicKeyHashes() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest, ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest, ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse>* streamer) {
                       return this->StreamedgetIdentityIdsByPublicKeyHashes(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getIdentityIdsByPublicKeyHashes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getIdentityIdsByPublicKeyHashes(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest* /*request*/, ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetIdentityIdsByPublicKeyHashes(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesRequest,::org::dash::platform::dapi::v0::GetIdentityIdsByPublicKeyHashesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_waitForStateTransitionResult : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_waitForStateTransitionResult() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest, ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest, ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse>* streamer) {
                       return this->StreamedwaitForStateTransitionResult(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_waitForStateTransitionResult() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status waitForStateTransitionResult(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest* /*request*/, ::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedwaitForStateTransitionResult(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::org::dash::platform::dapi::v0::WaitForStateTransitionResultRequest,::org::dash::platform::dapi::v0::WaitForStateTransitionResultResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getConsensusParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getConsensusParams() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::org::dash::platform::dapi::v0::GetConsensusParamsRequest, ::org::dash::platform::dapi::v0::GetConsensusParamsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::org::dash::platform::dapi::v0::GetConsensusParamsRequest, ::org::dash::platform::dapi::v0::GetConsensusParamsResponse>* streamer) {
                       return this->StreamedgetConsensusParams(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getConsensusParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getConsensusParams(::grpc::ServerContext* /*context*/, const ::org::dash::platform::dapi::v0::GetConsensusParamsRequest* /*request*/, ::org::dash::platform::dapi::v0::GetConsensusParamsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetConsensusParams(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::org::dash::platform::dapi::v0::GetConsensusParamsRequest,::org::dash::platform::dapi::v0::GetConsensusParamsResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_broadcastStateTransition<WithStreamedUnaryMethod_getIdentity<WithStreamedUnaryMethod_getDataContract<WithStreamedUnaryMethod_getDocuments<WithStreamedUnaryMethod_getIdentitiesByPublicKeyHashes<WithStreamedUnaryMethod_getIdentityIdsByPublicKeyHashes<WithStreamedUnaryMethod_waitForStateTransitionResult<WithStreamedUnaryMethod_getConsensusParams<Service > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_broadcastStateTransition<WithStreamedUnaryMethod_getIdentity<WithStreamedUnaryMethod_getDataContract<WithStreamedUnaryMethod_getDocuments<WithStreamedUnaryMethod_getIdentitiesByPublicKeyHashes<WithStreamedUnaryMethod_getIdentityIdsByPublicKeyHashes<WithStreamedUnaryMethod_waitForStateTransitionResult<WithStreamedUnaryMethod_getConsensusParams<Service > > > > > > > > StreamedService;
};

}  // namespace v0
}  // namespace dapi
}  // namespace platform
}  // namespace dash
}  // namespace org


#endif  // GRPC_platform_2eproto__INCLUDED
