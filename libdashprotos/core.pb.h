// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_core_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_core_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3017000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3017001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_core_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_core_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[25]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_core_2eproto;
namespace org {
namespace dash {
namespace platform {
namespace dapi {
namespace v0 {
class BlockHeaders;
struct BlockHeadersDefaultTypeInternal;
extern BlockHeadersDefaultTypeInternal _BlockHeaders_default_instance_;
class BlockHeadersWithChainLocksRequest;
struct BlockHeadersWithChainLocksRequestDefaultTypeInternal;
extern BlockHeadersWithChainLocksRequestDefaultTypeInternal _BlockHeadersWithChainLocksRequest_default_instance_;
class BlockHeadersWithChainLocksResponse;
struct BlockHeadersWithChainLocksResponseDefaultTypeInternal;
extern BlockHeadersWithChainLocksResponseDefaultTypeInternal _BlockHeadersWithChainLocksResponse_default_instance_;
class BloomFilter;
struct BloomFilterDefaultTypeInternal;
extern BloomFilterDefaultTypeInternal _BloomFilter_default_instance_;
class BroadcastTransactionRequest;
struct BroadcastTransactionRequestDefaultTypeInternal;
extern BroadcastTransactionRequestDefaultTypeInternal _BroadcastTransactionRequest_default_instance_;
class BroadcastTransactionResponse;
struct BroadcastTransactionResponseDefaultTypeInternal;
extern BroadcastTransactionResponseDefaultTypeInternal _BroadcastTransactionResponse_default_instance_;
class ChainLockSignatureMessages;
struct ChainLockSignatureMessagesDefaultTypeInternal;
extern ChainLockSignatureMessagesDefaultTypeInternal _ChainLockSignatureMessages_default_instance_;
class GetBlockRequest;
struct GetBlockRequestDefaultTypeInternal;
extern GetBlockRequestDefaultTypeInternal _GetBlockRequest_default_instance_;
class GetBlockResponse;
struct GetBlockResponseDefaultTypeInternal;
extern GetBlockResponseDefaultTypeInternal _GetBlockResponse_default_instance_;
class GetEstimatedTransactionFeeRequest;
struct GetEstimatedTransactionFeeRequestDefaultTypeInternal;
extern GetEstimatedTransactionFeeRequestDefaultTypeInternal _GetEstimatedTransactionFeeRequest_default_instance_;
class GetEstimatedTransactionFeeResponse;
struct GetEstimatedTransactionFeeResponseDefaultTypeInternal;
extern GetEstimatedTransactionFeeResponseDefaultTypeInternal _GetEstimatedTransactionFeeResponse_default_instance_;
class GetStatusRequest;
struct GetStatusRequestDefaultTypeInternal;
extern GetStatusRequestDefaultTypeInternal _GetStatusRequest_default_instance_;
class GetStatusResponse;
struct GetStatusResponseDefaultTypeInternal;
extern GetStatusResponseDefaultTypeInternal _GetStatusResponse_default_instance_;
class GetStatusResponse_Chain;
struct GetStatusResponse_ChainDefaultTypeInternal;
extern GetStatusResponse_ChainDefaultTypeInternal _GetStatusResponse_Chain_default_instance_;
class GetStatusResponse_Masternode;
struct GetStatusResponse_MasternodeDefaultTypeInternal;
extern GetStatusResponse_MasternodeDefaultTypeInternal _GetStatusResponse_Masternode_default_instance_;
class GetStatusResponse_Network;
struct GetStatusResponse_NetworkDefaultTypeInternal;
extern GetStatusResponse_NetworkDefaultTypeInternal _GetStatusResponse_Network_default_instance_;
class GetStatusResponse_NetworkFee;
struct GetStatusResponse_NetworkFeeDefaultTypeInternal;
extern GetStatusResponse_NetworkFeeDefaultTypeInternal _GetStatusResponse_NetworkFee_default_instance_;
class GetStatusResponse_Time;
struct GetStatusResponse_TimeDefaultTypeInternal;
extern GetStatusResponse_TimeDefaultTypeInternal _GetStatusResponse_Time_default_instance_;
class GetStatusResponse_Version;
struct GetStatusResponse_VersionDefaultTypeInternal;
extern GetStatusResponse_VersionDefaultTypeInternal _GetStatusResponse_Version_default_instance_;
class GetTransactionRequest;
struct GetTransactionRequestDefaultTypeInternal;
extern GetTransactionRequestDefaultTypeInternal _GetTransactionRequest_default_instance_;
class GetTransactionResponse;
struct GetTransactionResponseDefaultTypeInternal;
extern GetTransactionResponseDefaultTypeInternal _GetTransactionResponse_default_instance_;
class InstantSendLockMessages;
struct InstantSendLockMessagesDefaultTypeInternal;
extern InstantSendLockMessagesDefaultTypeInternal _InstantSendLockMessages_default_instance_;
class RawTransactions;
struct RawTransactionsDefaultTypeInternal;
extern RawTransactionsDefaultTypeInternal _RawTransactions_default_instance_;
class TransactionsWithProofsRequest;
struct TransactionsWithProofsRequestDefaultTypeInternal;
extern TransactionsWithProofsRequestDefaultTypeInternal _TransactionsWithProofsRequest_default_instance_;
class TransactionsWithProofsResponse;
struct TransactionsWithProofsResponseDefaultTypeInternal;
extern TransactionsWithProofsResponseDefaultTypeInternal _TransactionsWithProofsResponse_default_instance_;
}  // namespace v0
}  // namespace dapi
}  // namespace platform
}  // namespace dash
}  // namespace org
PROTOBUF_NAMESPACE_OPEN
template<> ::org::dash::platform::dapi::v0::BlockHeaders* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::BlockHeaders>(Arena*);
template<> ::org::dash::platform::dapi::v0::BlockHeadersWithChainLocksRequest* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::BlockHeadersWithChainLocksRequest>(Arena*);
template<> ::org::dash::platform::dapi::v0::BlockHeadersWithChainLocksResponse* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::BlockHeadersWithChainLocksResponse>(Arena*);
template<> ::org::dash::platform::dapi::v0::BloomFilter* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::BloomFilter>(Arena*);
template<> ::org::dash::platform::dapi::v0::BroadcastTransactionRequest* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::BroadcastTransactionRequest>(Arena*);
template<> ::org::dash::platform::dapi::v0::BroadcastTransactionResponse* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::BroadcastTransactionResponse>(Arena*);
template<> ::org::dash::platform::dapi::v0::ChainLockSignatureMessages* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::ChainLockSignatureMessages>(Arena*);
template<> ::org::dash::platform::dapi::v0::GetBlockRequest* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::GetBlockRequest>(Arena*);
template<> ::org::dash::platform::dapi::v0::GetBlockResponse* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::GetBlockResponse>(Arena*);
template<> ::org::dash::platform::dapi::v0::GetEstimatedTransactionFeeRequest* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::GetEstimatedTransactionFeeRequest>(Arena*);
template<> ::org::dash::platform::dapi::v0::GetEstimatedTransactionFeeResponse* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::GetEstimatedTransactionFeeResponse>(Arena*);
template<> ::org::dash::platform::dapi::v0::GetStatusRequest* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::GetStatusRequest>(Arena*);
template<> ::org::dash::platform::dapi::v0::GetStatusResponse* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::GetStatusResponse>(Arena*);
template<> ::org::dash::platform::dapi::v0::GetStatusResponse_Chain* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::GetStatusResponse_Chain>(Arena*);
template<> ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::GetStatusResponse_Masternode>(Arena*);
template<> ::org::dash::platform::dapi::v0::GetStatusResponse_Network* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::GetStatusResponse_Network>(Arena*);
template<> ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee>(Arena*);
template<> ::org::dash::platform::dapi::v0::GetStatusResponse_Time* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::GetStatusResponse_Time>(Arena*);
template<> ::org::dash::platform::dapi::v0::GetStatusResponse_Version* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::GetStatusResponse_Version>(Arena*);
template<> ::org::dash::platform::dapi::v0::GetTransactionRequest* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::GetTransactionRequest>(Arena*);
template<> ::org::dash::platform::dapi::v0::GetTransactionResponse* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::GetTransactionResponse>(Arena*);
template<> ::org::dash::platform::dapi::v0::InstantSendLockMessages* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::InstantSendLockMessages>(Arena*);
template<> ::org::dash::platform::dapi::v0::RawTransactions* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::RawTransactions>(Arena*);
template<> ::org::dash::platform::dapi::v0::TransactionsWithProofsRequest* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::TransactionsWithProofsRequest>(Arena*);
template<> ::org::dash::platform::dapi::v0::TransactionsWithProofsResponse* Arena::CreateMaybeMessage<::org::dash::platform::dapi::v0::TransactionsWithProofsResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace org {
namespace dash {
namespace platform {
namespace dapi {
namespace v0 {

enum GetStatusResponse_Masternode_Status : int {
  GetStatusResponse_Masternode_Status_UNKNOWN = 0,
  GetStatusResponse_Masternode_Status_WAITING_FOR_PROTX = 1,
  GetStatusResponse_Masternode_Status_POSE_BANNED = 2,
  GetStatusResponse_Masternode_Status_REMOVED = 3,
  GetStatusResponse_Masternode_Status_OPERATOR_KEY_CHANGED = 4,
  GetStatusResponse_Masternode_Status_PROTX_IP_CHANGED = 5,
  GetStatusResponse_Masternode_Status_READY = 6,
  GetStatusResponse_Masternode_Status_ERROR = 7,
  GetStatusResponse_Masternode_Status_GetStatusResponse_Masternode_Status_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  GetStatusResponse_Masternode_Status_GetStatusResponse_Masternode_Status_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool GetStatusResponse_Masternode_Status_IsValid(int value);
constexpr GetStatusResponse_Masternode_Status GetStatusResponse_Masternode_Status_Status_MIN = GetStatusResponse_Masternode_Status_UNKNOWN;
constexpr GetStatusResponse_Masternode_Status GetStatusResponse_Masternode_Status_Status_MAX = GetStatusResponse_Masternode_Status_ERROR;
constexpr int GetStatusResponse_Masternode_Status_Status_ARRAYSIZE = GetStatusResponse_Masternode_Status_Status_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetStatusResponse_Masternode_Status_descriptor();
template<typename T>
inline const std::string& GetStatusResponse_Masternode_Status_Name(T enum_t_value) {
  static_assert(::std::is_same<T, GetStatusResponse_Masternode_Status>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function GetStatusResponse_Masternode_Status_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    GetStatusResponse_Masternode_Status_descriptor(), enum_t_value);
}
inline bool GetStatusResponse_Masternode_Status_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, GetStatusResponse_Masternode_Status* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<GetStatusResponse_Masternode_Status>(
    GetStatusResponse_Masternode_Status_descriptor(), name, value);
}
enum GetStatusResponse_Status : int {
  GetStatusResponse_Status_NOT_STARTED = 0,
  GetStatusResponse_Status_SYNCING = 1,
  GetStatusResponse_Status_READY = 2,
  GetStatusResponse_Status_ERROR = 3,
  GetStatusResponse_Status_GetStatusResponse_Status_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  GetStatusResponse_Status_GetStatusResponse_Status_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool GetStatusResponse_Status_IsValid(int value);
constexpr GetStatusResponse_Status GetStatusResponse_Status_Status_MIN = GetStatusResponse_Status_NOT_STARTED;
constexpr GetStatusResponse_Status GetStatusResponse_Status_Status_MAX = GetStatusResponse_Status_ERROR;
constexpr int GetStatusResponse_Status_Status_ARRAYSIZE = GetStatusResponse_Status_Status_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetStatusResponse_Status_descriptor();
template<typename T>
inline const std::string& GetStatusResponse_Status_Name(T enum_t_value) {
  static_assert(::std::is_same<T, GetStatusResponse_Status>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function GetStatusResponse_Status_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    GetStatusResponse_Status_descriptor(), enum_t_value);
}
inline bool GetStatusResponse_Status_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, GetStatusResponse_Status* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<GetStatusResponse_Status>(
    GetStatusResponse_Status_descriptor(), name, value);
}
// ===================================================================

class GetStatusRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.GetStatusRequest) */ {
 public:
  inline GetStatusRequest() : GetStatusRequest(nullptr) {}
  ~GetStatusRequest() override;
  explicit constexpr GetStatusRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetStatusRequest(const GetStatusRequest& from);
  GetStatusRequest(GetStatusRequest&& from) noexcept
    : GetStatusRequest() {
    *this = ::std::move(from);
  }

  inline GetStatusRequest& operator=(const GetStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStatusRequest& operator=(GetStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStatusRequest* internal_default_instance() {
    return reinterpret_cast<const GetStatusRequest*>(
               &_GetStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GetStatusRequest& a, GetStatusRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetStatusRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStatusRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetStatusRequest* New() const final {
    return new GetStatusRequest();
  }

  GetStatusRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetStatusRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetStatusRequest& from);
  void MergeFrom(const GetStatusRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetStatusRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.GetStatusRequest";
  }
  protected:
  explicit GetStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.GetStatusRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class GetStatusResponse_Version final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.GetStatusResponse.Version) */ {
 public:
  inline GetStatusResponse_Version() : GetStatusResponse_Version(nullptr) {}
  ~GetStatusResponse_Version() override;
  explicit constexpr GetStatusResponse_Version(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetStatusResponse_Version(const GetStatusResponse_Version& from);
  GetStatusResponse_Version(GetStatusResponse_Version&& from) noexcept
    : GetStatusResponse_Version() {
    *this = ::std::move(from);
  }

  inline GetStatusResponse_Version& operator=(const GetStatusResponse_Version& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStatusResponse_Version& operator=(GetStatusResponse_Version&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStatusResponse_Version& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStatusResponse_Version* internal_default_instance() {
    return reinterpret_cast<const GetStatusResponse_Version*>(
               &_GetStatusResponse_Version_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GetStatusResponse_Version& a, GetStatusResponse_Version& b) {
    a.Swap(&b);
  }
  inline void Swap(GetStatusResponse_Version* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStatusResponse_Version* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetStatusResponse_Version* New() const final {
    return new GetStatusResponse_Version();
  }

  GetStatusResponse_Version* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetStatusResponse_Version>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetStatusResponse_Version& from);
  void MergeFrom(const GetStatusResponse_Version& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetStatusResponse_Version* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.GetStatusResponse.Version";
  }
  protected:
  explicit GetStatusResponse_Version(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentFieldNumber = 3,
    kProtocolFieldNumber = 1,
    kSoftwareFieldNumber = 2,
  };
  // string agent = 3;
  void clear_agent();
  const std::string& agent() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_agent(ArgT0&& arg0, ArgT... args);
  std::string* mutable_agent();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_agent();
  void set_allocated_agent(std::string* agent);
  private:
  const std::string& _internal_agent() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_agent(const std::string& value);
  std::string* _internal_mutable_agent();
  public:

  // uint32 protocol = 1;
  void clear_protocol();
  ::PROTOBUF_NAMESPACE_ID::uint32 protocol() const;
  void set_protocol(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_protocol() const;
  void _internal_set_protocol(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 software = 2;
  void clear_software();
  ::PROTOBUF_NAMESPACE_ID::uint32 software() const;
  void set_software(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_software() const;
  void _internal_set_software(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.GetStatusResponse.Version)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr agent_;
  ::PROTOBUF_NAMESPACE_ID::uint32 protocol_;
  ::PROTOBUF_NAMESPACE_ID::uint32 software_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class GetStatusResponse_Time final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.GetStatusResponse.Time) */ {
 public:
  inline GetStatusResponse_Time() : GetStatusResponse_Time(nullptr) {}
  ~GetStatusResponse_Time() override;
  explicit constexpr GetStatusResponse_Time(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetStatusResponse_Time(const GetStatusResponse_Time& from);
  GetStatusResponse_Time(GetStatusResponse_Time&& from) noexcept
    : GetStatusResponse_Time() {
    *this = ::std::move(from);
  }

  inline GetStatusResponse_Time& operator=(const GetStatusResponse_Time& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStatusResponse_Time& operator=(GetStatusResponse_Time&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStatusResponse_Time& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStatusResponse_Time* internal_default_instance() {
    return reinterpret_cast<const GetStatusResponse_Time*>(
               &_GetStatusResponse_Time_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GetStatusResponse_Time& a, GetStatusResponse_Time& b) {
    a.Swap(&b);
  }
  inline void Swap(GetStatusResponse_Time* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStatusResponse_Time* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetStatusResponse_Time* New() const final {
    return new GetStatusResponse_Time();
  }

  GetStatusResponse_Time* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetStatusResponse_Time>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetStatusResponse_Time& from);
  void MergeFrom(const GetStatusResponse_Time& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetStatusResponse_Time* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.GetStatusResponse.Time";
  }
  protected:
  explicit GetStatusResponse_Time(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNowFieldNumber = 1,
    kOffsetFieldNumber = 2,
    kMedianFieldNumber = 3,
  };
  // uint32 now = 1;
  void clear_now();
  ::PROTOBUF_NAMESPACE_ID::uint32 now() const;
  void set_now(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_now() const;
  void _internal_set_now(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 offset = 2;
  void clear_offset();
  ::PROTOBUF_NAMESPACE_ID::int32 offset() const;
  void set_offset(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_offset() const;
  void _internal_set_offset(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint32 median = 3;
  void clear_median();
  ::PROTOBUF_NAMESPACE_ID::uint32 median() const;
  void set_median(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_median() const;
  void _internal_set_median(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.GetStatusResponse.Time)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 now_;
  ::PROTOBUF_NAMESPACE_ID::int32 offset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 median_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class GetStatusResponse_Chain final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.GetStatusResponse.Chain) */ {
 public:
  inline GetStatusResponse_Chain() : GetStatusResponse_Chain(nullptr) {}
  ~GetStatusResponse_Chain() override;
  explicit constexpr GetStatusResponse_Chain(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetStatusResponse_Chain(const GetStatusResponse_Chain& from);
  GetStatusResponse_Chain(GetStatusResponse_Chain&& from) noexcept
    : GetStatusResponse_Chain() {
    *this = ::std::move(from);
  }

  inline GetStatusResponse_Chain& operator=(const GetStatusResponse_Chain& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStatusResponse_Chain& operator=(GetStatusResponse_Chain&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStatusResponse_Chain& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStatusResponse_Chain* internal_default_instance() {
    return reinterpret_cast<const GetStatusResponse_Chain*>(
               &_GetStatusResponse_Chain_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GetStatusResponse_Chain& a, GetStatusResponse_Chain& b) {
    a.Swap(&b);
  }
  inline void Swap(GetStatusResponse_Chain* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStatusResponse_Chain* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetStatusResponse_Chain* New() const final {
    return new GetStatusResponse_Chain();
  }

  GetStatusResponse_Chain* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetStatusResponse_Chain>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetStatusResponse_Chain& from);
  void MergeFrom(const GetStatusResponse_Chain& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetStatusResponse_Chain* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.GetStatusResponse.Chain";
  }
  protected:
  explicit GetStatusResponse_Chain(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kBestBlockHashFieldNumber = 4,
    kChainWorkFieldNumber = 6,
    kHeadersCountFieldNumber = 2,
    kBlocksCountFieldNumber = 3,
    kDifficultyFieldNumber = 5,
    kSyncProgressFieldNumber = 8,
    kIsSyncedFieldNumber = 7,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // bytes best_block_hash = 4;
  void clear_best_block_hash();
  const std::string& best_block_hash() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_best_block_hash(ArgT0&& arg0, ArgT... args);
  std::string* mutable_best_block_hash();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_best_block_hash();
  void set_allocated_best_block_hash(std::string* best_block_hash);
  private:
  const std::string& _internal_best_block_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_best_block_hash(const std::string& value);
  std::string* _internal_mutable_best_block_hash();
  public:

  // bytes chain_work = 6;
  void clear_chain_work();
  const std::string& chain_work() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_chain_work(ArgT0&& arg0, ArgT... args);
  std::string* mutable_chain_work();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_chain_work();
  void set_allocated_chain_work(std::string* chain_work);
  private:
  const std::string& _internal_chain_work() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_chain_work(const std::string& value);
  std::string* _internal_mutable_chain_work();
  public:

  // uint32 headers_count = 2;
  void clear_headers_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 headers_count() const;
  void set_headers_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_headers_count() const;
  void _internal_set_headers_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 blocks_count = 3;
  void clear_blocks_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 blocks_count() const;
  void set_blocks_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_blocks_count() const;
  void _internal_set_blocks_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // double difficulty = 5;
  void clear_difficulty();
  double difficulty() const;
  void set_difficulty(double value);
  private:
  double _internal_difficulty() const;
  void _internal_set_difficulty(double value);
  public:

  // double sync_progress = 8;
  void clear_sync_progress();
  double sync_progress() const;
  void set_sync_progress(double value);
  private:
  double _internal_sync_progress() const;
  void _internal_set_sync_progress(double value);
  public:

  // bool is_synced = 7;
  void clear_is_synced();
  bool is_synced() const;
  void set_is_synced(bool value);
  private:
  bool _internal_is_synced() const;
  void _internal_set_is_synced(bool value);
  public:

  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.GetStatusResponse.Chain)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr best_block_hash_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr chain_work_;
  ::PROTOBUF_NAMESPACE_ID::uint32 headers_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 blocks_count_;
  double difficulty_;
  double sync_progress_;
  bool is_synced_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class GetStatusResponse_Masternode final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.GetStatusResponse.Masternode) */ {
 public:
  inline GetStatusResponse_Masternode() : GetStatusResponse_Masternode(nullptr) {}
  ~GetStatusResponse_Masternode() override;
  explicit constexpr GetStatusResponse_Masternode(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetStatusResponse_Masternode(const GetStatusResponse_Masternode& from);
  GetStatusResponse_Masternode(GetStatusResponse_Masternode&& from) noexcept
    : GetStatusResponse_Masternode() {
    *this = ::std::move(from);
  }

  inline GetStatusResponse_Masternode& operator=(const GetStatusResponse_Masternode& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStatusResponse_Masternode& operator=(GetStatusResponse_Masternode&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStatusResponse_Masternode& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStatusResponse_Masternode* internal_default_instance() {
    return reinterpret_cast<const GetStatusResponse_Masternode*>(
               &_GetStatusResponse_Masternode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GetStatusResponse_Masternode& a, GetStatusResponse_Masternode& b) {
    a.Swap(&b);
  }
  inline void Swap(GetStatusResponse_Masternode* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStatusResponse_Masternode* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetStatusResponse_Masternode* New() const final {
    return new GetStatusResponse_Masternode();
  }

  GetStatusResponse_Masternode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetStatusResponse_Masternode>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetStatusResponse_Masternode& from);
  void MergeFrom(const GetStatusResponse_Masternode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetStatusResponse_Masternode* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.GetStatusResponse.Masternode";
  }
  protected:
  explicit GetStatusResponse_Masternode(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GetStatusResponse_Masternode_Status Status;
  static constexpr Status UNKNOWN =
    GetStatusResponse_Masternode_Status_UNKNOWN;
  static constexpr Status WAITING_FOR_PROTX =
    GetStatusResponse_Masternode_Status_WAITING_FOR_PROTX;
  static constexpr Status POSE_BANNED =
    GetStatusResponse_Masternode_Status_POSE_BANNED;
  static constexpr Status REMOVED =
    GetStatusResponse_Masternode_Status_REMOVED;
  static constexpr Status OPERATOR_KEY_CHANGED =
    GetStatusResponse_Masternode_Status_OPERATOR_KEY_CHANGED;
  static constexpr Status PROTX_IP_CHANGED =
    GetStatusResponse_Masternode_Status_PROTX_IP_CHANGED;
  static constexpr Status READY =
    GetStatusResponse_Masternode_Status_READY;
  static constexpr Status ERROR =
    GetStatusResponse_Masternode_Status_ERROR;
  static inline bool Status_IsValid(int value) {
    return GetStatusResponse_Masternode_Status_IsValid(value);
  }
  static constexpr Status Status_MIN =
    GetStatusResponse_Masternode_Status_Status_MIN;
  static constexpr Status Status_MAX =
    GetStatusResponse_Masternode_Status_Status_MAX;
  static constexpr int Status_ARRAYSIZE =
    GetStatusResponse_Masternode_Status_Status_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Status_descriptor() {
    return GetStatusResponse_Masternode_Status_descriptor();
  }
  template<typename T>
  static inline const std::string& Status_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Status>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Status_Name.");
    return GetStatusResponse_Masternode_Status_Name(enum_t_value);
  }
  static inline bool Status_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Status* value) {
    return GetStatusResponse_Masternode_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kProTxHashFieldNumber = 2,
    kStatusFieldNumber = 1,
    kPosePenaltyFieldNumber = 3,
    kSyncProgressFieldNumber = 5,
    kIsSyncedFieldNumber = 4,
  };
  // bytes pro_tx_hash = 2;
  void clear_pro_tx_hash();
  const std::string& pro_tx_hash() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_pro_tx_hash(ArgT0&& arg0, ArgT... args);
  std::string* mutable_pro_tx_hash();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_pro_tx_hash();
  void set_allocated_pro_tx_hash(std::string* pro_tx_hash);
  private:
  const std::string& _internal_pro_tx_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pro_tx_hash(const std::string& value);
  std::string* _internal_mutable_pro_tx_hash();
  public:

  // .org.dash.platform.dapi.v0.GetStatusResponse.Masternode.Status status = 1;
  void clear_status();
  ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode_Status status() const;
  void set_status(::org::dash::platform::dapi::v0::GetStatusResponse_Masternode_Status value);
  private:
  ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode_Status _internal_status() const;
  void _internal_set_status(::org::dash::platform::dapi::v0::GetStatusResponse_Masternode_Status value);
  public:

  // uint32 pose_penalty = 3;
  void clear_pose_penalty();
  ::PROTOBUF_NAMESPACE_ID::uint32 pose_penalty() const;
  void set_pose_penalty(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pose_penalty() const;
  void _internal_set_pose_penalty(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // double sync_progress = 5;
  void clear_sync_progress();
  double sync_progress() const;
  void set_sync_progress(double value);
  private:
  double _internal_sync_progress() const;
  void _internal_set_sync_progress(double value);
  public:

  // bool is_synced = 4;
  void clear_is_synced();
  bool is_synced() const;
  void set_is_synced(bool value);
  private:
  bool _internal_is_synced() const;
  void _internal_set_is_synced(bool value);
  public:

  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.GetStatusResponse.Masternode)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pro_tx_hash_;
  int status_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pose_penalty_;
  double sync_progress_;
  bool is_synced_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class GetStatusResponse_NetworkFee final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee) */ {
 public:
  inline GetStatusResponse_NetworkFee() : GetStatusResponse_NetworkFee(nullptr) {}
  ~GetStatusResponse_NetworkFee() override;
  explicit constexpr GetStatusResponse_NetworkFee(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetStatusResponse_NetworkFee(const GetStatusResponse_NetworkFee& from);
  GetStatusResponse_NetworkFee(GetStatusResponse_NetworkFee&& from) noexcept
    : GetStatusResponse_NetworkFee() {
    *this = ::std::move(from);
  }

  inline GetStatusResponse_NetworkFee& operator=(const GetStatusResponse_NetworkFee& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStatusResponse_NetworkFee& operator=(GetStatusResponse_NetworkFee&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStatusResponse_NetworkFee& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStatusResponse_NetworkFee* internal_default_instance() {
    return reinterpret_cast<const GetStatusResponse_NetworkFee*>(
               &_GetStatusResponse_NetworkFee_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GetStatusResponse_NetworkFee& a, GetStatusResponse_NetworkFee& b) {
    a.Swap(&b);
  }
  inline void Swap(GetStatusResponse_NetworkFee* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStatusResponse_NetworkFee* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetStatusResponse_NetworkFee* New() const final {
    return new GetStatusResponse_NetworkFee();
  }

  GetStatusResponse_NetworkFee* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetStatusResponse_NetworkFee>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetStatusResponse_NetworkFee& from);
  void MergeFrom(const GetStatusResponse_NetworkFee& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetStatusResponse_NetworkFee* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee";
  }
  protected:
  explicit GetStatusResponse_NetworkFee(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRelayFieldNumber = 1,
    kIncrementalFieldNumber = 2,
  };
  // double relay = 1;
  void clear_relay();
  double relay() const;
  void set_relay(double value);
  private:
  double _internal_relay() const;
  void _internal_set_relay(double value);
  public:

  // double incremental = 2;
  void clear_incremental();
  double incremental() const;
  void set_incremental(double value);
  private:
  double _internal_incremental() const;
  void _internal_set_incremental(double value);
  public:

  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double relay_;
  double incremental_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class GetStatusResponse_Network final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.GetStatusResponse.Network) */ {
 public:
  inline GetStatusResponse_Network() : GetStatusResponse_Network(nullptr) {}
  ~GetStatusResponse_Network() override;
  explicit constexpr GetStatusResponse_Network(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetStatusResponse_Network(const GetStatusResponse_Network& from);
  GetStatusResponse_Network(GetStatusResponse_Network&& from) noexcept
    : GetStatusResponse_Network() {
    *this = ::std::move(from);
  }

  inline GetStatusResponse_Network& operator=(const GetStatusResponse_Network& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStatusResponse_Network& operator=(GetStatusResponse_Network&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStatusResponse_Network& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStatusResponse_Network* internal_default_instance() {
    return reinterpret_cast<const GetStatusResponse_Network*>(
               &_GetStatusResponse_Network_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GetStatusResponse_Network& a, GetStatusResponse_Network& b) {
    a.Swap(&b);
  }
  inline void Swap(GetStatusResponse_Network* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStatusResponse_Network* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetStatusResponse_Network* New() const final {
    return new GetStatusResponse_Network();
  }

  GetStatusResponse_Network* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetStatusResponse_Network>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetStatusResponse_Network& from);
  void MergeFrom(const GetStatusResponse_Network& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetStatusResponse_Network* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.GetStatusResponse.Network";
  }
  protected:
  explicit GetStatusResponse_Network(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFeeFieldNumber = 2,
    kPeersCountFieldNumber = 1,
  };
  // .org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee fee = 2;
  bool has_fee() const;
  private:
  bool _internal_has_fee() const;
  public:
  void clear_fee();
  const ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee& fee() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee* release_fee();
  ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee* mutable_fee();
  void set_allocated_fee(::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee* fee);
  private:
  const ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee& _internal_fee() const;
  ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee* _internal_mutable_fee();
  public:
  void unsafe_arena_set_allocated_fee(
      ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee* fee);
  ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee* unsafe_arena_release_fee();

  // uint32 peers_count = 1;
  void clear_peers_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 peers_count() const;
  void set_peers_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_peers_count() const;
  void _internal_set_peers_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.GetStatusResponse.Network)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee* fee_;
  ::PROTOBUF_NAMESPACE_ID::uint32 peers_count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class GetStatusResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.GetStatusResponse) */ {
 public:
  inline GetStatusResponse() : GetStatusResponse(nullptr) {}
  ~GetStatusResponse() override;
  explicit constexpr GetStatusResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetStatusResponse(const GetStatusResponse& from);
  GetStatusResponse(GetStatusResponse&& from) noexcept
    : GetStatusResponse() {
    *this = ::std::move(from);
  }

  inline GetStatusResponse& operator=(const GetStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStatusResponse& operator=(GetStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStatusResponse* internal_default_instance() {
    return reinterpret_cast<const GetStatusResponse*>(
               &_GetStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(GetStatusResponse& a, GetStatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetStatusResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStatusResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetStatusResponse* New() const final {
    return new GetStatusResponse();
  }

  GetStatusResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetStatusResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetStatusResponse& from);
  void MergeFrom(const GetStatusResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetStatusResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.GetStatusResponse";
  }
  protected:
  explicit GetStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GetStatusResponse_Version Version;
  typedef GetStatusResponse_Time Time;
  typedef GetStatusResponse_Chain Chain;
  typedef GetStatusResponse_Masternode Masternode;
  typedef GetStatusResponse_NetworkFee NetworkFee;
  typedef GetStatusResponse_Network Network;

  typedef GetStatusResponse_Status Status;
  static constexpr Status NOT_STARTED =
    GetStatusResponse_Status_NOT_STARTED;
  static constexpr Status SYNCING =
    GetStatusResponse_Status_SYNCING;
  static constexpr Status READY =
    GetStatusResponse_Status_READY;
  static constexpr Status ERROR =
    GetStatusResponse_Status_ERROR;
  static inline bool Status_IsValid(int value) {
    return GetStatusResponse_Status_IsValid(value);
  }
  static constexpr Status Status_MIN =
    GetStatusResponse_Status_Status_MIN;
  static constexpr Status Status_MAX =
    GetStatusResponse_Status_Status_MAX;
  static constexpr int Status_ARRAYSIZE =
    GetStatusResponse_Status_Status_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Status_descriptor() {
    return GetStatusResponse_Status_descriptor();
  }
  template<typename T>
  static inline const std::string& Status_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Status>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Status_Name.");
    return GetStatusResponse_Status_Name(enum_t_value);
  }
  static inline bool Status_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Status* value) {
    return GetStatusResponse_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kVersionFieldNumber = 1,
    kTimeFieldNumber = 2,
    kChainFieldNumber = 5,
    kMasternodeFieldNumber = 6,
    kNetworkFieldNumber = 7,
    kSyncProgressFieldNumber = 4,
    kStatusFieldNumber = 3,
  };
  // .org.dash.platform.dapi.v0.GetStatusResponse.Version version = 1;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  const ::org::dash::platform::dapi::v0::GetStatusResponse_Version& version() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::org::dash::platform::dapi::v0::GetStatusResponse_Version* release_version();
  ::org::dash::platform::dapi::v0::GetStatusResponse_Version* mutable_version();
  void set_allocated_version(::org::dash::platform::dapi::v0::GetStatusResponse_Version* version);
  private:
  const ::org::dash::platform::dapi::v0::GetStatusResponse_Version& _internal_version() const;
  ::org::dash::platform::dapi::v0::GetStatusResponse_Version* _internal_mutable_version();
  public:
  void unsafe_arena_set_allocated_version(
      ::org::dash::platform::dapi::v0::GetStatusResponse_Version* version);
  ::org::dash::platform::dapi::v0::GetStatusResponse_Version* unsafe_arena_release_version();

  // .org.dash.platform.dapi.v0.GetStatusResponse.Time time = 2;
  bool has_time() const;
  private:
  bool _internal_has_time() const;
  public:
  void clear_time();
  const ::org::dash::platform::dapi::v0::GetStatusResponse_Time& time() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::org::dash::platform::dapi::v0::GetStatusResponse_Time* release_time();
  ::org::dash::platform::dapi::v0::GetStatusResponse_Time* mutable_time();
  void set_allocated_time(::org::dash::platform::dapi::v0::GetStatusResponse_Time* time);
  private:
  const ::org::dash::platform::dapi::v0::GetStatusResponse_Time& _internal_time() const;
  ::org::dash::platform::dapi::v0::GetStatusResponse_Time* _internal_mutable_time();
  public:
  void unsafe_arena_set_allocated_time(
      ::org::dash::platform::dapi::v0::GetStatusResponse_Time* time);
  ::org::dash::platform::dapi::v0::GetStatusResponse_Time* unsafe_arena_release_time();

  // .org.dash.platform.dapi.v0.GetStatusResponse.Chain chain = 5;
  bool has_chain() const;
  private:
  bool _internal_has_chain() const;
  public:
  void clear_chain();
  const ::org::dash::platform::dapi::v0::GetStatusResponse_Chain& chain() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::org::dash::platform::dapi::v0::GetStatusResponse_Chain* release_chain();
  ::org::dash::platform::dapi::v0::GetStatusResponse_Chain* mutable_chain();
  void set_allocated_chain(::org::dash::platform::dapi::v0::GetStatusResponse_Chain* chain);
  private:
  const ::org::dash::platform::dapi::v0::GetStatusResponse_Chain& _internal_chain() const;
  ::org::dash::platform::dapi::v0::GetStatusResponse_Chain* _internal_mutable_chain();
  public:
  void unsafe_arena_set_allocated_chain(
      ::org::dash::platform::dapi::v0::GetStatusResponse_Chain* chain);
  ::org::dash::platform::dapi::v0::GetStatusResponse_Chain* unsafe_arena_release_chain();

  // .org.dash.platform.dapi.v0.GetStatusResponse.Masternode masternode = 6;
  bool has_masternode() const;
  private:
  bool _internal_has_masternode() const;
  public:
  void clear_masternode();
  const ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode& masternode() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode* release_masternode();
  ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode* mutable_masternode();
  void set_allocated_masternode(::org::dash::platform::dapi::v0::GetStatusResponse_Masternode* masternode);
  private:
  const ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode& _internal_masternode() const;
  ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode* _internal_mutable_masternode();
  public:
  void unsafe_arena_set_allocated_masternode(
      ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode* masternode);
  ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode* unsafe_arena_release_masternode();

  // .org.dash.platform.dapi.v0.GetStatusResponse.Network network = 7;
  bool has_network() const;
  private:
  bool _internal_has_network() const;
  public:
  void clear_network();
  const ::org::dash::platform::dapi::v0::GetStatusResponse_Network& network() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::org::dash::platform::dapi::v0::GetStatusResponse_Network* release_network();
  ::org::dash::platform::dapi::v0::GetStatusResponse_Network* mutable_network();
  void set_allocated_network(::org::dash::platform::dapi::v0::GetStatusResponse_Network* network);
  private:
  const ::org::dash::platform::dapi::v0::GetStatusResponse_Network& _internal_network() const;
  ::org::dash::platform::dapi::v0::GetStatusResponse_Network* _internal_mutable_network();
  public:
  void unsafe_arena_set_allocated_network(
      ::org::dash::platform::dapi::v0::GetStatusResponse_Network* network);
  ::org::dash::platform::dapi::v0::GetStatusResponse_Network* unsafe_arena_release_network();

  // double sync_progress = 4;
  void clear_sync_progress();
  double sync_progress() const;
  void set_sync_progress(double value);
  private:
  double _internal_sync_progress() const;
  void _internal_set_sync_progress(double value);
  public:

  // .org.dash.platform.dapi.v0.GetStatusResponse.Status status = 3;
  void clear_status();
  ::org::dash::platform::dapi::v0::GetStatusResponse_Status status() const;
  void set_status(::org::dash::platform::dapi::v0::GetStatusResponse_Status value);
  private:
  ::org::dash::platform::dapi::v0::GetStatusResponse_Status _internal_status() const;
  void _internal_set_status(::org::dash::platform::dapi::v0::GetStatusResponse_Status value);
  public:

  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.GetStatusResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::org::dash::platform::dapi::v0::GetStatusResponse_Version* version_;
  ::org::dash::platform::dapi::v0::GetStatusResponse_Time* time_;
  ::org::dash::platform::dapi::v0::GetStatusResponse_Chain* chain_;
  ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode* masternode_;
  ::org::dash::platform::dapi::v0::GetStatusResponse_Network* network_;
  double sync_progress_;
  int status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class GetBlockRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.GetBlockRequest) */ {
 public:
  inline GetBlockRequest() : GetBlockRequest(nullptr) {}
  ~GetBlockRequest() override;
  explicit constexpr GetBlockRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetBlockRequest(const GetBlockRequest& from);
  GetBlockRequest(GetBlockRequest&& from) noexcept
    : GetBlockRequest() {
    *this = ::std::move(from);
  }

  inline GetBlockRequest& operator=(const GetBlockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBlockRequest& operator=(GetBlockRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBlockRequest& default_instance() {
    return *internal_default_instance();
  }
  enum BlockCase {
    kHeight = 1,
    kHash = 2,
    BLOCK_NOT_SET = 0,
  };

  static inline const GetBlockRequest* internal_default_instance() {
    return reinterpret_cast<const GetBlockRequest*>(
               &_GetBlockRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(GetBlockRequest& a, GetBlockRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetBlockRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBlockRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetBlockRequest* New() const final {
    return new GetBlockRequest();
  }

  GetBlockRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetBlockRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetBlockRequest& from);
  void MergeFrom(const GetBlockRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetBlockRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.GetBlockRequest";
  }
  protected:
  explicit GetBlockRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeightFieldNumber = 1,
    kHashFieldNumber = 2,
  };
  // uint32 height = 1;
  bool has_height() const;
  private:
  bool _internal_has_height() const;
  public:
  void clear_height();
  ::PROTOBUF_NAMESPACE_ID::uint32 height() const;
  void set_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_height() const;
  void _internal_set_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // string hash = 2;
  bool has_hash() const;
  private:
  bool _internal_has_hash() const;
  public:
  void clear_hash();
  const std::string& hash() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_hash(ArgT0&& arg0, ArgT... args);
  std::string* mutable_hash();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_hash();
  void set_allocated_hash(std::string* hash);
  private:
  const std::string& _internal_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hash(const std::string& value);
  std::string* _internal_mutable_hash();
  public:

  void clear_block();
  BlockCase block_case() const;
  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.GetBlockRequest)
 private:
  class _Internal;
  void set_has_height();
  void set_has_hash();

  inline bool has_block() const;
  inline void clear_has_block();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union BlockUnion {
    constexpr BlockUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::PROTOBUF_NAMESPACE_ID::uint32 height_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hash_;
  } block_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class GetBlockResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.GetBlockResponse) */ {
 public:
  inline GetBlockResponse() : GetBlockResponse(nullptr) {}
  ~GetBlockResponse() override;
  explicit constexpr GetBlockResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetBlockResponse(const GetBlockResponse& from);
  GetBlockResponse(GetBlockResponse&& from) noexcept
    : GetBlockResponse() {
    *this = ::std::move(from);
  }

  inline GetBlockResponse& operator=(const GetBlockResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBlockResponse& operator=(GetBlockResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBlockResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBlockResponse* internal_default_instance() {
    return reinterpret_cast<const GetBlockResponse*>(
               &_GetBlockResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(GetBlockResponse& a, GetBlockResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetBlockResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBlockResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetBlockResponse* New() const final {
    return new GetBlockResponse();
  }

  GetBlockResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetBlockResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetBlockResponse& from);
  void MergeFrom(const GetBlockResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetBlockResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.GetBlockResponse";
  }
  protected:
  explicit GetBlockResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlockFieldNumber = 1,
  };
  // bytes block = 1;
  void clear_block();
  const std::string& block() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_block(ArgT0&& arg0, ArgT... args);
  std::string* mutable_block();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_block();
  void set_allocated_block(std::string* block);
  private:
  const std::string& _internal_block() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_block(const std::string& value);
  std::string* _internal_mutable_block();
  public:

  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.GetBlockResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr block_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class BroadcastTransactionRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.BroadcastTransactionRequest) */ {
 public:
  inline BroadcastTransactionRequest() : BroadcastTransactionRequest(nullptr) {}
  ~BroadcastTransactionRequest() override;
  explicit constexpr BroadcastTransactionRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BroadcastTransactionRequest(const BroadcastTransactionRequest& from);
  BroadcastTransactionRequest(BroadcastTransactionRequest&& from) noexcept
    : BroadcastTransactionRequest() {
    *this = ::std::move(from);
  }

  inline BroadcastTransactionRequest& operator=(const BroadcastTransactionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BroadcastTransactionRequest& operator=(BroadcastTransactionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BroadcastTransactionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const BroadcastTransactionRequest* internal_default_instance() {
    return reinterpret_cast<const BroadcastTransactionRequest*>(
               &_BroadcastTransactionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(BroadcastTransactionRequest& a, BroadcastTransactionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(BroadcastTransactionRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BroadcastTransactionRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BroadcastTransactionRequest* New() const final {
    return new BroadcastTransactionRequest();
  }

  BroadcastTransactionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BroadcastTransactionRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BroadcastTransactionRequest& from);
  void MergeFrom(const BroadcastTransactionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BroadcastTransactionRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.BroadcastTransactionRequest";
  }
  protected:
  explicit BroadcastTransactionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransactionFieldNumber = 1,
    kAllowHighFeesFieldNumber = 2,
    kBypassLimitsFieldNumber = 3,
  };
  // bytes transaction = 1;
  void clear_transaction();
  const std::string& transaction() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_transaction(ArgT0&& arg0, ArgT... args);
  std::string* mutable_transaction();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_transaction();
  void set_allocated_transaction(std::string* transaction);
  private:
  const std::string& _internal_transaction() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_transaction(const std::string& value);
  std::string* _internal_mutable_transaction();
  public:

  // bool allow_high_fees = 2;
  void clear_allow_high_fees();
  bool allow_high_fees() const;
  void set_allow_high_fees(bool value);
  private:
  bool _internal_allow_high_fees() const;
  void _internal_set_allow_high_fees(bool value);
  public:

  // bool bypass_limits = 3;
  void clear_bypass_limits();
  bool bypass_limits() const;
  void set_bypass_limits(bool value);
  private:
  bool _internal_bypass_limits() const;
  void _internal_set_bypass_limits(bool value);
  public:

  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.BroadcastTransactionRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr transaction_;
  bool allow_high_fees_;
  bool bypass_limits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class BroadcastTransactionResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.BroadcastTransactionResponse) */ {
 public:
  inline BroadcastTransactionResponse() : BroadcastTransactionResponse(nullptr) {}
  ~BroadcastTransactionResponse() override;
  explicit constexpr BroadcastTransactionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BroadcastTransactionResponse(const BroadcastTransactionResponse& from);
  BroadcastTransactionResponse(BroadcastTransactionResponse&& from) noexcept
    : BroadcastTransactionResponse() {
    *this = ::std::move(from);
  }

  inline BroadcastTransactionResponse& operator=(const BroadcastTransactionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline BroadcastTransactionResponse& operator=(BroadcastTransactionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BroadcastTransactionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const BroadcastTransactionResponse* internal_default_instance() {
    return reinterpret_cast<const BroadcastTransactionResponse*>(
               &_BroadcastTransactionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(BroadcastTransactionResponse& a, BroadcastTransactionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(BroadcastTransactionResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BroadcastTransactionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BroadcastTransactionResponse* New() const final {
    return new BroadcastTransactionResponse();
  }

  BroadcastTransactionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BroadcastTransactionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BroadcastTransactionResponse& from);
  void MergeFrom(const BroadcastTransactionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BroadcastTransactionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.BroadcastTransactionResponse";
  }
  protected:
  explicit BroadcastTransactionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransactionIdFieldNumber = 1,
  };
  // string transaction_id = 1;
  void clear_transaction_id();
  const std::string& transaction_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_transaction_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_transaction_id();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_transaction_id();
  void set_allocated_transaction_id(std::string* transaction_id);
  private:
  const std::string& _internal_transaction_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_transaction_id(const std::string& value);
  std::string* _internal_mutable_transaction_id();
  public:

  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.BroadcastTransactionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr transaction_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class GetTransactionRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.GetTransactionRequest) */ {
 public:
  inline GetTransactionRequest() : GetTransactionRequest(nullptr) {}
  ~GetTransactionRequest() override;
  explicit constexpr GetTransactionRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetTransactionRequest(const GetTransactionRequest& from);
  GetTransactionRequest(GetTransactionRequest&& from) noexcept
    : GetTransactionRequest() {
    *this = ::std::move(from);
  }

  inline GetTransactionRequest& operator=(const GetTransactionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTransactionRequest& operator=(GetTransactionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTransactionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTransactionRequest* internal_default_instance() {
    return reinterpret_cast<const GetTransactionRequest*>(
               &_GetTransactionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(GetTransactionRequest& a, GetTransactionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetTransactionRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTransactionRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetTransactionRequest* New() const final {
    return new GetTransactionRequest();
  }

  GetTransactionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetTransactionRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetTransactionRequest& from);
  void MergeFrom(const GetTransactionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetTransactionRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.GetTransactionRequest";
  }
  protected:
  explicit GetTransactionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1;
  void clear_id();
  const std::string& id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_id();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_id();
  void set_allocated_id(std::string* id);
  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.GetTransactionRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class GetTransactionResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.GetTransactionResponse) */ {
 public:
  inline GetTransactionResponse() : GetTransactionResponse(nullptr) {}
  ~GetTransactionResponse() override;
  explicit constexpr GetTransactionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetTransactionResponse(const GetTransactionResponse& from);
  GetTransactionResponse(GetTransactionResponse&& from) noexcept
    : GetTransactionResponse() {
    *this = ::std::move(from);
  }

  inline GetTransactionResponse& operator=(const GetTransactionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTransactionResponse& operator=(GetTransactionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTransactionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTransactionResponse* internal_default_instance() {
    return reinterpret_cast<const GetTransactionResponse*>(
               &_GetTransactionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(GetTransactionResponse& a, GetTransactionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetTransactionResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTransactionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetTransactionResponse* New() const final {
    return new GetTransactionResponse();
  }

  GetTransactionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetTransactionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetTransactionResponse& from);
  void MergeFrom(const GetTransactionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetTransactionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.GetTransactionResponse";
  }
  protected:
  explicit GetTransactionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransactionFieldNumber = 1,
    kBlockHashFieldNumber = 2,
    kHeightFieldNumber = 3,
    kConfirmationsFieldNumber = 4,
    kIsInstantLockedFieldNumber = 5,
    kIsChainLockedFieldNumber = 6,
  };
  // bytes transaction = 1;
  void clear_transaction();
  const std::string& transaction() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_transaction(ArgT0&& arg0, ArgT... args);
  std::string* mutable_transaction();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_transaction();
  void set_allocated_transaction(std::string* transaction);
  private:
  const std::string& _internal_transaction() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_transaction(const std::string& value);
  std::string* _internal_mutable_transaction();
  public:

  // bytes block_hash = 2;
  void clear_block_hash();
  const std::string& block_hash() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_block_hash(ArgT0&& arg0, ArgT... args);
  std::string* mutable_block_hash();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_block_hash();
  void set_allocated_block_hash(std::string* block_hash);
  private:
  const std::string& _internal_block_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_block_hash(const std::string& value);
  std::string* _internal_mutable_block_hash();
  public:

  // uint32 height = 3;
  void clear_height();
  ::PROTOBUF_NAMESPACE_ID::uint32 height() const;
  void set_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_height() const;
  void _internal_set_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 confirmations = 4;
  void clear_confirmations();
  ::PROTOBUF_NAMESPACE_ID::uint32 confirmations() const;
  void set_confirmations(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_confirmations() const;
  void _internal_set_confirmations(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool is_instant_locked = 5;
  void clear_is_instant_locked();
  bool is_instant_locked() const;
  void set_is_instant_locked(bool value);
  private:
  bool _internal_is_instant_locked() const;
  void _internal_set_is_instant_locked(bool value);
  public:

  // bool is_chain_locked = 6;
  void clear_is_chain_locked();
  bool is_chain_locked() const;
  void set_is_chain_locked(bool value);
  private:
  bool _internal_is_chain_locked() const;
  void _internal_set_is_chain_locked(bool value);
  public:

  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.GetTransactionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr transaction_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr block_hash_;
  ::PROTOBUF_NAMESPACE_ID::uint32 height_;
  ::PROTOBUF_NAMESPACE_ID::uint32 confirmations_;
  bool is_instant_locked_;
  bool is_chain_locked_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class BlockHeadersWithChainLocksRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest) */ {
 public:
  inline BlockHeadersWithChainLocksRequest() : BlockHeadersWithChainLocksRequest(nullptr) {}
  ~BlockHeadersWithChainLocksRequest() override;
  explicit constexpr BlockHeadersWithChainLocksRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BlockHeadersWithChainLocksRequest(const BlockHeadersWithChainLocksRequest& from);
  BlockHeadersWithChainLocksRequest(BlockHeadersWithChainLocksRequest&& from) noexcept
    : BlockHeadersWithChainLocksRequest() {
    *this = ::std::move(from);
  }

  inline BlockHeadersWithChainLocksRequest& operator=(const BlockHeadersWithChainLocksRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlockHeadersWithChainLocksRequest& operator=(BlockHeadersWithChainLocksRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlockHeadersWithChainLocksRequest& default_instance() {
    return *internal_default_instance();
  }
  enum FromBlockCase {
    kFromBlockHash = 1,
    kFromBlockHeight = 2,
    FROM_BLOCK_NOT_SET = 0,
  };

  static inline const BlockHeadersWithChainLocksRequest* internal_default_instance() {
    return reinterpret_cast<const BlockHeadersWithChainLocksRequest*>(
               &_BlockHeadersWithChainLocksRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(BlockHeadersWithChainLocksRequest& a, BlockHeadersWithChainLocksRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(BlockHeadersWithChainLocksRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlockHeadersWithChainLocksRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BlockHeadersWithChainLocksRequest* New() const final {
    return new BlockHeadersWithChainLocksRequest();
  }

  BlockHeadersWithChainLocksRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BlockHeadersWithChainLocksRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BlockHeadersWithChainLocksRequest& from);
  void MergeFrom(const BlockHeadersWithChainLocksRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BlockHeadersWithChainLocksRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest";
  }
  protected:
  explicit BlockHeadersWithChainLocksRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCountFieldNumber = 3,
    kFromBlockHashFieldNumber = 1,
    kFromBlockHeightFieldNumber = 2,
  };
  // uint32 count = 3;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bytes from_block_hash = 1;
  bool has_from_block_hash() const;
  private:
  bool _internal_has_from_block_hash() const;
  public:
  void clear_from_block_hash();
  const std::string& from_block_hash() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_from_block_hash(ArgT0&& arg0, ArgT... args);
  std::string* mutable_from_block_hash();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_from_block_hash();
  void set_allocated_from_block_hash(std::string* from_block_hash);
  private:
  const std::string& _internal_from_block_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_from_block_hash(const std::string& value);
  std::string* _internal_mutable_from_block_hash();
  public:

  // uint32 from_block_height = 2;
  bool has_from_block_height() const;
  private:
  bool _internal_has_from_block_height() const;
  public:
  void clear_from_block_height();
  ::PROTOBUF_NAMESPACE_ID::uint32 from_block_height() const;
  void set_from_block_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_from_block_height() const;
  void _internal_set_from_block_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  void clear_from_block();
  FromBlockCase from_block_case() const;
  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest)
 private:
  class _Internal;
  void set_has_from_block_hash();
  void set_has_from_block_height();

  inline bool has_from_block() const;
  inline void clear_has_from_block();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_;
  union FromBlockUnion {
    constexpr FromBlockUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr from_block_hash_;
    ::PROTOBUF_NAMESPACE_ID::uint32 from_block_height_;
  } from_block_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class BlockHeadersWithChainLocksResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse) */ {
 public:
  inline BlockHeadersWithChainLocksResponse() : BlockHeadersWithChainLocksResponse(nullptr) {}
  ~BlockHeadersWithChainLocksResponse() override;
  explicit constexpr BlockHeadersWithChainLocksResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BlockHeadersWithChainLocksResponse(const BlockHeadersWithChainLocksResponse& from);
  BlockHeadersWithChainLocksResponse(BlockHeadersWithChainLocksResponse&& from) noexcept
    : BlockHeadersWithChainLocksResponse() {
    *this = ::std::move(from);
  }

  inline BlockHeadersWithChainLocksResponse& operator=(const BlockHeadersWithChainLocksResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlockHeadersWithChainLocksResponse& operator=(BlockHeadersWithChainLocksResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlockHeadersWithChainLocksResponse& default_instance() {
    return *internal_default_instance();
  }
  enum ResponsesCase {
    kBlockHeaders = 1,
    kChainLockSignatureMessages = 2,
    RESPONSES_NOT_SET = 0,
  };

  static inline const BlockHeadersWithChainLocksResponse* internal_default_instance() {
    return reinterpret_cast<const BlockHeadersWithChainLocksResponse*>(
               &_BlockHeadersWithChainLocksResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(BlockHeadersWithChainLocksResponse& a, BlockHeadersWithChainLocksResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(BlockHeadersWithChainLocksResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlockHeadersWithChainLocksResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BlockHeadersWithChainLocksResponse* New() const final {
    return new BlockHeadersWithChainLocksResponse();
  }

  BlockHeadersWithChainLocksResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BlockHeadersWithChainLocksResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BlockHeadersWithChainLocksResponse& from);
  void MergeFrom(const BlockHeadersWithChainLocksResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BlockHeadersWithChainLocksResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse";
  }
  protected:
  explicit BlockHeadersWithChainLocksResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlockHeadersFieldNumber = 1,
    kChainLockSignatureMessagesFieldNumber = 2,
  };
  // .org.dash.platform.dapi.v0.BlockHeaders block_headers = 1;
  bool has_block_headers() const;
  private:
  bool _internal_has_block_headers() const;
  public:
  void clear_block_headers();
  const ::org::dash::platform::dapi::v0::BlockHeaders& block_headers() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::org::dash::platform::dapi::v0::BlockHeaders* release_block_headers();
  ::org::dash::platform::dapi::v0::BlockHeaders* mutable_block_headers();
  void set_allocated_block_headers(::org::dash::platform::dapi::v0::BlockHeaders* block_headers);
  private:
  const ::org::dash::platform::dapi::v0::BlockHeaders& _internal_block_headers() const;
  ::org::dash::platform::dapi::v0::BlockHeaders* _internal_mutable_block_headers();
  public:
  void unsafe_arena_set_allocated_block_headers(
      ::org::dash::platform::dapi::v0::BlockHeaders* block_headers);
  ::org::dash::platform::dapi::v0::BlockHeaders* unsafe_arena_release_block_headers();

  // .org.dash.platform.dapi.v0.ChainLockSignatureMessages chain_lock_signature_messages = 2;
  bool has_chain_lock_signature_messages() const;
  private:
  bool _internal_has_chain_lock_signature_messages() const;
  public:
  void clear_chain_lock_signature_messages();
  const ::org::dash::platform::dapi::v0::ChainLockSignatureMessages& chain_lock_signature_messages() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::org::dash::platform::dapi::v0::ChainLockSignatureMessages* release_chain_lock_signature_messages();
  ::org::dash::platform::dapi::v0::ChainLockSignatureMessages* mutable_chain_lock_signature_messages();
  void set_allocated_chain_lock_signature_messages(::org::dash::platform::dapi::v0::ChainLockSignatureMessages* chain_lock_signature_messages);
  private:
  const ::org::dash::platform::dapi::v0::ChainLockSignatureMessages& _internal_chain_lock_signature_messages() const;
  ::org::dash::platform::dapi::v0::ChainLockSignatureMessages* _internal_mutable_chain_lock_signature_messages();
  public:
  void unsafe_arena_set_allocated_chain_lock_signature_messages(
      ::org::dash::platform::dapi::v0::ChainLockSignatureMessages* chain_lock_signature_messages);
  ::org::dash::platform::dapi::v0::ChainLockSignatureMessages* unsafe_arena_release_chain_lock_signature_messages();

  void clear_responses();
  ResponsesCase responses_case() const;
  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse)
 private:
  class _Internal;
  void set_has_block_headers();
  void set_has_chain_lock_signature_messages();

  inline bool has_responses() const;
  inline void clear_has_responses();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union ResponsesUnion {
    constexpr ResponsesUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::org::dash::platform::dapi::v0::BlockHeaders* block_headers_;
    ::org::dash::platform::dapi::v0::ChainLockSignatureMessages* chain_lock_signature_messages_;
  } responses_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class BlockHeaders final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.BlockHeaders) */ {
 public:
  inline BlockHeaders() : BlockHeaders(nullptr) {}
  ~BlockHeaders() override;
  explicit constexpr BlockHeaders(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BlockHeaders(const BlockHeaders& from);
  BlockHeaders(BlockHeaders&& from) noexcept
    : BlockHeaders() {
    *this = ::std::move(from);
  }

  inline BlockHeaders& operator=(const BlockHeaders& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlockHeaders& operator=(BlockHeaders&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlockHeaders& default_instance() {
    return *internal_default_instance();
  }
  static inline const BlockHeaders* internal_default_instance() {
    return reinterpret_cast<const BlockHeaders*>(
               &_BlockHeaders_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(BlockHeaders& a, BlockHeaders& b) {
    a.Swap(&b);
  }
  inline void Swap(BlockHeaders* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlockHeaders* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BlockHeaders* New() const final {
    return new BlockHeaders();
  }

  BlockHeaders* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BlockHeaders>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BlockHeaders& from);
  void MergeFrom(const BlockHeaders& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BlockHeaders* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.BlockHeaders";
  }
  protected:
  explicit BlockHeaders(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeadersFieldNumber = 1,
  };
  // repeated bytes headers = 1;
  int headers_size() const;
  private:
  int _internal_headers_size() const;
  public:
  void clear_headers();
  const std::string& headers(int index) const;
  std::string* mutable_headers(int index);
  void set_headers(int index, const std::string& value);
  void set_headers(int index, std::string&& value);
  void set_headers(int index, const char* value);
  void set_headers(int index, const void* value, size_t size);
  std::string* add_headers();
  void add_headers(const std::string& value);
  void add_headers(std::string&& value);
  void add_headers(const char* value);
  void add_headers(const void* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& headers() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_headers();
  private:
  const std::string& _internal_headers(int index) const;
  std::string* _internal_add_headers();
  public:

  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.BlockHeaders)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> headers_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class ChainLockSignatureMessages final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.ChainLockSignatureMessages) */ {
 public:
  inline ChainLockSignatureMessages() : ChainLockSignatureMessages(nullptr) {}
  ~ChainLockSignatureMessages() override;
  explicit constexpr ChainLockSignatureMessages(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ChainLockSignatureMessages(const ChainLockSignatureMessages& from);
  ChainLockSignatureMessages(ChainLockSignatureMessages&& from) noexcept
    : ChainLockSignatureMessages() {
    *this = ::std::move(from);
  }

  inline ChainLockSignatureMessages& operator=(const ChainLockSignatureMessages& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChainLockSignatureMessages& operator=(ChainLockSignatureMessages&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChainLockSignatureMessages& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChainLockSignatureMessages* internal_default_instance() {
    return reinterpret_cast<const ChainLockSignatureMessages*>(
               &_ChainLockSignatureMessages_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(ChainLockSignatureMessages& a, ChainLockSignatureMessages& b) {
    a.Swap(&b);
  }
  inline void Swap(ChainLockSignatureMessages* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChainLockSignatureMessages* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ChainLockSignatureMessages* New() const final {
    return new ChainLockSignatureMessages();
  }

  ChainLockSignatureMessages* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ChainLockSignatureMessages>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ChainLockSignatureMessages& from);
  void MergeFrom(const ChainLockSignatureMessages& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChainLockSignatureMessages* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.ChainLockSignatureMessages";
  }
  protected:
  explicit ChainLockSignatureMessages(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessagesFieldNumber = 1,
  };
  // repeated bytes messages = 1;
  int messages_size() const;
  private:
  int _internal_messages_size() const;
  public:
  void clear_messages();
  const std::string& messages(int index) const;
  std::string* mutable_messages(int index);
  void set_messages(int index, const std::string& value);
  void set_messages(int index, std::string&& value);
  void set_messages(int index, const char* value);
  void set_messages(int index, const void* value, size_t size);
  std::string* add_messages();
  void add_messages(const std::string& value);
  void add_messages(std::string&& value);
  void add_messages(const char* value);
  void add_messages(const void* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& messages() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_messages();
  private:
  const std::string& _internal_messages(int index) const;
  std::string* _internal_add_messages();
  public:

  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.ChainLockSignatureMessages)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> messages_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class GetEstimatedTransactionFeeRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeRequest) */ {
 public:
  inline GetEstimatedTransactionFeeRequest() : GetEstimatedTransactionFeeRequest(nullptr) {}
  ~GetEstimatedTransactionFeeRequest() override;
  explicit constexpr GetEstimatedTransactionFeeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetEstimatedTransactionFeeRequest(const GetEstimatedTransactionFeeRequest& from);
  GetEstimatedTransactionFeeRequest(GetEstimatedTransactionFeeRequest&& from) noexcept
    : GetEstimatedTransactionFeeRequest() {
    *this = ::std::move(from);
  }

  inline GetEstimatedTransactionFeeRequest& operator=(const GetEstimatedTransactionFeeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetEstimatedTransactionFeeRequest& operator=(GetEstimatedTransactionFeeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetEstimatedTransactionFeeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetEstimatedTransactionFeeRequest* internal_default_instance() {
    return reinterpret_cast<const GetEstimatedTransactionFeeRequest*>(
               &_GetEstimatedTransactionFeeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(GetEstimatedTransactionFeeRequest& a, GetEstimatedTransactionFeeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetEstimatedTransactionFeeRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetEstimatedTransactionFeeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetEstimatedTransactionFeeRequest* New() const final {
    return new GetEstimatedTransactionFeeRequest();
  }

  GetEstimatedTransactionFeeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetEstimatedTransactionFeeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetEstimatedTransactionFeeRequest& from);
  void MergeFrom(const GetEstimatedTransactionFeeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetEstimatedTransactionFeeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.GetEstimatedTransactionFeeRequest";
  }
  protected:
  explicit GetEstimatedTransactionFeeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlocksFieldNumber = 1,
  };
  // uint32 blocks = 1;
  void clear_blocks();
  ::PROTOBUF_NAMESPACE_ID::uint32 blocks() const;
  void set_blocks(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_blocks() const;
  void _internal_set_blocks(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 blocks_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class GetEstimatedTransactionFeeResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeResponse) */ {
 public:
  inline GetEstimatedTransactionFeeResponse() : GetEstimatedTransactionFeeResponse(nullptr) {}
  ~GetEstimatedTransactionFeeResponse() override;
  explicit constexpr GetEstimatedTransactionFeeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetEstimatedTransactionFeeResponse(const GetEstimatedTransactionFeeResponse& from);
  GetEstimatedTransactionFeeResponse(GetEstimatedTransactionFeeResponse&& from) noexcept
    : GetEstimatedTransactionFeeResponse() {
    *this = ::std::move(from);
  }

  inline GetEstimatedTransactionFeeResponse& operator=(const GetEstimatedTransactionFeeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetEstimatedTransactionFeeResponse& operator=(GetEstimatedTransactionFeeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetEstimatedTransactionFeeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetEstimatedTransactionFeeResponse* internal_default_instance() {
    return reinterpret_cast<const GetEstimatedTransactionFeeResponse*>(
               &_GetEstimatedTransactionFeeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(GetEstimatedTransactionFeeResponse& a, GetEstimatedTransactionFeeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetEstimatedTransactionFeeResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetEstimatedTransactionFeeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetEstimatedTransactionFeeResponse* New() const final {
    return new GetEstimatedTransactionFeeResponse();
  }

  GetEstimatedTransactionFeeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetEstimatedTransactionFeeResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetEstimatedTransactionFeeResponse& from);
  void MergeFrom(const GetEstimatedTransactionFeeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetEstimatedTransactionFeeResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.GetEstimatedTransactionFeeResponse";
  }
  protected:
  explicit GetEstimatedTransactionFeeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFeeFieldNumber = 1,
  };
  // double fee = 1;
  void clear_fee();
  double fee() const;
  void set_fee(double value);
  private:
  double _internal_fee() const;
  void _internal_set_fee(double value);
  public:

  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double fee_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class TransactionsWithProofsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.TransactionsWithProofsRequest) */ {
 public:
  inline TransactionsWithProofsRequest() : TransactionsWithProofsRequest(nullptr) {}
  ~TransactionsWithProofsRequest() override;
  explicit constexpr TransactionsWithProofsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TransactionsWithProofsRequest(const TransactionsWithProofsRequest& from);
  TransactionsWithProofsRequest(TransactionsWithProofsRequest&& from) noexcept
    : TransactionsWithProofsRequest() {
    *this = ::std::move(from);
  }

  inline TransactionsWithProofsRequest& operator=(const TransactionsWithProofsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransactionsWithProofsRequest& operator=(TransactionsWithProofsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TransactionsWithProofsRequest& default_instance() {
    return *internal_default_instance();
  }
  enum FromBlockCase {
    kFromBlockHash = 2,
    kFromBlockHeight = 3,
    FROM_BLOCK_NOT_SET = 0,
  };

  static inline const TransactionsWithProofsRequest* internal_default_instance() {
    return reinterpret_cast<const TransactionsWithProofsRequest*>(
               &_TransactionsWithProofsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(TransactionsWithProofsRequest& a, TransactionsWithProofsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(TransactionsWithProofsRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransactionsWithProofsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TransactionsWithProofsRequest* New() const final {
    return new TransactionsWithProofsRequest();
  }

  TransactionsWithProofsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TransactionsWithProofsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TransactionsWithProofsRequest& from);
  void MergeFrom(const TransactionsWithProofsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransactionsWithProofsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.TransactionsWithProofsRequest";
  }
  protected:
  explicit TransactionsWithProofsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBloomFilterFieldNumber = 1,
    kCountFieldNumber = 4,
    kSendTransactionHashesFieldNumber = 5,
    kFromBlockHashFieldNumber = 2,
    kFromBlockHeightFieldNumber = 3,
  };
  // .org.dash.platform.dapi.v0.BloomFilter bloom_filter = 1;
  bool has_bloom_filter() const;
  private:
  bool _internal_has_bloom_filter() const;
  public:
  void clear_bloom_filter();
  const ::org::dash::platform::dapi::v0::BloomFilter& bloom_filter() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::org::dash::platform::dapi::v0::BloomFilter* release_bloom_filter();
  ::org::dash::platform::dapi::v0::BloomFilter* mutable_bloom_filter();
  void set_allocated_bloom_filter(::org::dash::platform::dapi::v0::BloomFilter* bloom_filter);
  private:
  const ::org::dash::platform::dapi::v0::BloomFilter& _internal_bloom_filter() const;
  ::org::dash::platform::dapi::v0::BloomFilter* _internal_mutable_bloom_filter();
  public:
  void unsafe_arena_set_allocated_bloom_filter(
      ::org::dash::platform::dapi::v0::BloomFilter* bloom_filter);
  ::org::dash::platform::dapi::v0::BloomFilter* unsafe_arena_release_bloom_filter();

  // uint32 count = 4;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool send_transaction_hashes = 5;
  void clear_send_transaction_hashes();
  bool send_transaction_hashes() const;
  void set_send_transaction_hashes(bool value);
  private:
  bool _internal_send_transaction_hashes() const;
  void _internal_set_send_transaction_hashes(bool value);
  public:

  // bytes from_block_hash = 2;
  bool has_from_block_hash() const;
  private:
  bool _internal_has_from_block_hash() const;
  public:
  void clear_from_block_hash();
  const std::string& from_block_hash() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_from_block_hash(ArgT0&& arg0, ArgT... args);
  std::string* mutable_from_block_hash();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_from_block_hash();
  void set_allocated_from_block_hash(std::string* from_block_hash);
  private:
  const std::string& _internal_from_block_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_from_block_hash(const std::string& value);
  std::string* _internal_mutable_from_block_hash();
  public:

  // uint32 from_block_height = 3;
  bool has_from_block_height() const;
  private:
  bool _internal_has_from_block_height() const;
  public:
  void clear_from_block_height();
  ::PROTOBUF_NAMESPACE_ID::uint32 from_block_height() const;
  void set_from_block_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_from_block_height() const;
  void _internal_set_from_block_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  void clear_from_block();
  FromBlockCase from_block_case() const;
  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.TransactionsWithProofsRequest)
 private:
  class _Internal;
  void set_has_from_block_hash();
  void set_has_from_block_height();

  inline bool has_from_block() const;
  inline void clear_has_from_block();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::org::dash::platform::dapi::v0::BloomFilter* bloom_filter_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_;
  bool send_transaction_hashes_;
  union FromBlockUnion {
    constexpr FromBlockUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr from_block_hash_;
    ::PROTOBUF_NAMESPACE_ID::uint32 from_block_height_;
  } from_block_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class BloomFilter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.BloomFilter) */ {
 public:
  inline BloomFilter() : BloomFilter(nullptr) {}
  ~BloomFilter() override;
  explicit constexpr BloomFilter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BloomFilter(const BloomFilter& from);
  BloomFilter(BloomFilter&& from) noexcept
    : BloomFilter() {
    *this = ::std::move(from);
  }

  inline BloomFilter& operator=(const BloomFilter& from) {
    CopyFrom(from);
    return *this;
  }
  inline BloomFilter& operator=(BloomFilter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BloomFilter& default_instance() {
    return *internal_default_instance();
  }
  static inline const BloomFilter* internal_default_instance() {
    return reinterpret_cast<const BloomFilter*>(
               &_BloomFilter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(BloomFilter& a, BloomFilter& b) {
    a.Swap(&b);
  }
  inline void Swap(BloomFilter* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BloomFilter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BloomFilter* New() const final {
    return new BloomFilter();
  }

  BloomFilter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BloomFilter>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BloomFilter& from);
  void MergeFrom(const BloomFilter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BloomFilter* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.BloomFilter";
  }
  protected:
  explicit BloomFilter(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVDataFieldNumber = 1,
    kNHashFuncsFieldNumber = 2,
    kNTweakFieldNumber = 3,
    kNFlagsFieldNumber = 4,
  };
  // bytes v_data = 1;
  void clear_v_data();
  const std::string& v_data() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_v_data(ArgT0&& arg0, ArgT... args);
  std::string* mutable_v_data();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_v_data();
  void set_allocated_v_data(std::string* v_data);
  private:
  const std::string& _internal_v_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_v_data(const std::string& value);
  std::string* _internal_mutable_v_data();
  public:

  // uint32 n_hash_funcs = 2;
  void clear_n_hash_funcs();
  ::PROTOBUF_NAMESPACE_ID::uint32 n_hash_funcs() const;
  void set_n_hash_funcs(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_n_hash_funcs() const;
  void _internal_set_n_hash_funcs(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 n_tweak = 3;
  void clear_n_tweak();
  ::PROTOBUF_NAMESPACE_ID::uint32 n_tweak() const;
  void set_n_tweak(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_n_tweak() const;
  void _internal_set_n_tweak(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 n_flags = 4;
  void clear_n_flags();
  ::PROTOBUF_NAMESPACE_ID::uint32 n_flags() const;
  void set_n_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_n_flags() const;
  void _internal_set_n_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.BloomFilter)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr v_data_;
  ::PROTOBUF_NAMESPACE_ID::uint32 n_hash_funcs_;
  ::PROTOBUF_NAMESPACE_ID::uint32 n_tweak_;
  ::PROTOBUF_NAMESPACE_ID::uint32 n_flags_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class TransactionsWithProofsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.TransactionsWithProofsResponse) */ {
 public:
  inline TransactionsWithProofsResponse() : TransactionsWithProofsResponse(nullptr) {}
  ~TransactionsWithProofsResponse() override;
  explicit constexpr TransactionsWithProofsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TransactionsWithProofsResponse(const TransactionsWithProofsResponse& from);
  TransactionsWithProofsResponse(TransactionsWithProofsResponse&& from) noexcept
    : TransactionsWithProofsResponse() {
    *this = ::std::move(from);
  }

  inline TransactionsWithProofsResponse& operator=(const TransactionsWithProofsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransactionsWithProofsResponse& operator=(TransactionsWithProofsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TransactionsWithProofsResponse& default_instance() {
    return *internal_default_instance();
  }
  enum ResponsesCase {
    kRawTransactions = 1,
    kInstantSendLockMessages = 2,
    kRawMerkleBlock = 3,
    RESPONSES_NOT_SET = 0,
  };

  static inline const TransactionsWithProofsResponse* internal_default_instance() {
    return reinterpret_cast<const TransactionsWithProofsResponse*>(
               &_TransactionsWithProofsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(TransactionsWithProofsResponse& a, TransactionsWithProofsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(TransactionsWithProofsResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransactionsWithProofsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TransactionsWithProofsResponse* New() const final {
    return new TransactionsWithProofsResponse();
  }

  TransactionsWithProofsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TransactionsWithProofsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TransactionsWithProofsResponse& from);
  void MergeFrom(const TransactionsWithProofsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransactionsWithProofsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.TransactionsWithProofsResponse";
  }
  protected:
  explicit TransactionsWithProofsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRawTransactionsFieldNumber = 1,
    kInstantSendLockMessagesFieldNumber = 2,
    kRawMerkleBlockFieldNumber = 3,
  };
  // .org.dash.platform.dapi.v0.RawTransactions raw_transactions = 1;
  bool has_raw_transactions() const;
  private:
  bool _internal_has_raw_transactions() const;
  public:
  void clear_raw_transactions();
  const ::org::dash::platform::dapi::v0::RawTransactions& raw_transactions() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::org::dash::platform::dapi::v0::RawTransactions* release_raw_transactions();
  ::org::dash::platform::dapi::v0::RawTransactions* mutable_raw_transactions();
  void set_allocated_raw_transactions(::org::dash::platform::dapi::v0::RawTransactions* raw_transactions);
  private:
  const ::org::dash::platform::dapi::v0::RawTransactions& _internal_raw_transactions() const;
  ::org::dash::platform::dapi::v0::RawTransactions* _internal_mutable_raw_transactions();
  public:
  void unsafe_arena_set_allocated_raw_transactions(
      ::org::dash::platform::dapi::v0::RawTransactions* raw_transactions);
  ::org::dash::platform::dapi::v0::RawTransactions* unsafe_arena_release_raw_transactions();

  // .org.dash.platform.dapi.v0.InstantSendLockMessages instant_send_lock_messages = 2;
  bool has_instant_send_lock_messages() const;
  private:
  bool _internal_has_instant_send_lock_messages() const;
  public:
  void clear_instant_send_lock_messages();
  const ::org::dash::platform::dapi::v0::InstantSendLockMessages& instant_send_lock_messages() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::org::dash::platform::dapi::v0::InstantSendLockMessages* release_instant_send_lock_messages();
  ::org::dash::platform::dapi::v0::InstantSendLockMessages* mutable_instant_send_lock_messages();
  void set_allocated_instant_send_lock_messages(::org::dash::platform::dapi::v0::InstantSendLockMessages* instant_send_lock_messages);
  private:
  const ::org::dash::platform::dapi::v0::InstantSendLockMessages& _internal_instant_send_lock_messages() const;
  ::org::dash::platform::dapi::v0::InstantSendLockMessages* _internal_mutable_instant_send_lock_messages();
  public:
  void unsafe_arena_set_allocated_instant_send_lock_messages(
      ::org::dash::platform::dapi::v0::InstantSendLockMessages* instant_send_lock_messages);
  ::org::dash::platform::dapi::v0::InstantSendLockMessages* unsafe_arena_release_instant_send_lock_messages();

  // bytes raw_merkle_block = 3;
  bool has_raw_merkle_block() const;
  private:
  bool _internal_has_raw_merkle_block() const;
  public:
  void clear_raw_merkle_block();
  const std::string& raw_merkle_block() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_raw_merkle_block(ArgT0&& arg0, ArgT... args);
  std::string* mutable_raw_merkle_block();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_raw_merkle_block();
  void set_allocated_raw_merkle_block(std::string* raw_merkle_block);
  private:
  const std::string& _internal_raw_merkle_block() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_raw_merkle_block(const std::string& value);
  std::string* _internal_mutable_raw_merkle_block();
  public:

  void clear_responses();
  ResponsesCase responses_case() const;
  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.TransactionsWithProofsResponse)
 private:
  class _Internal;
  void set_has_raw_transactions();
  void set_has_instant_send_lock_messages();
  void set_has_raw_merkle_block();

  inline bool has_responses() const;
  inline void clear_has_responses();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union ResponsesUnion {
    constexpr ResponsesUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::org::dash::platform::dapi::v0::RawTransactions* raw_transactions_;
    ::org::dash::platform::dapi::v0::InstantSendLockMessages* instant_send_lock_messages_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr raw_merkle_block_;
  } responses_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class RawTransactions final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.RawTransactions) */ {
 public:
  inline RawTransactions() : RawTransactions(nullptr) {}
  ~RawTransactions() override;
  explicit constexpr RawTransactions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RawTransactions(const RawTransactions& from);
  RawTransactions(RawTransactions&& from) noexcept
    : RawTransactions() {
    *this = ::std::move(from);
  }

  inline RawTransactions& operator=(const RawTransactions& from) {
    CopyFrom(from);
    return *this;
  }
  inline RawTransactions& operator=(RawTransactions&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RawTransactions& default_instance() {
    return *internal_default_instance();
  }
  static inline const RawTransactions* internal_default_instance() {
    return reinterpret_cast<const RawTransactions*>(
               &_RawTransactions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(RawTransactions& a, RawTransactions& b) {
    a.Swap(&b);
  }
  inline void Swap(RawTransactions* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RawTransactions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RawTransactions* New() const final {
    return new RawTransactions();
  }

  RawTransactions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RawTransactions>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RawTransactions& from);
  void MergeFrom(const RawTransactions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RawTransactions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.RawTransactions";
  }
  protected:
  explicit RawTransactions(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransactionsFieldNumber = 1,
  };
  // repeated bytes transactions = 1;
  int transactions_size() const;
  private:
  int _internal_transactions_size() const;
  public:
  void clear_transactions();
  const std::string& transactions(int index) const;
  std::string* mutable_transactions(int index);
  void set_transactions(int index, const std::string& value);
  void set_transactions(int index, std::string&& value);
  void set_transactions(int index, const char* value);
  void set_transactions(int index, const void* value, size_t size);
  std::string* add_transactions();
  void add_transactions(const std::string& value);
  void add_transactions(std::string&& value);
  void add_transactions(const char* value);
  void add_transactions(const void* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& transactions() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_transactions();
  private:
  const std::string& _internal_transactions(int index) const;
  std::string* _internal_add_transactions();
  public:

  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.RawTransactions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> transactions_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// -------------------------------------------------------------------

class InstantSendLockMessages final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:org.dash.platform.dapi.v0.InstantSendLockMessages) */ {
 public:
  inline InstantSendLockMessages() : InstantSendLockMessages(nullptr) {}
  ~InstantSendLockMessages() override;
  explicit constexpr InstantSendLockMessages(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InstantSendLockMessages(const InstantSendLockMessages& from);
  InstantSendLockMessages(InstantSendLockMessages&& from) noexcept
    : InstantSendLockMessages() {
    *this = ::std::move(from);
  }

  inline InstantSendLockMessages& operator=(const InstantSendLockMessages& from) {
    CopyFrom(from);
    return *this;
  }
  inline InstantSendLockMessages& operator=(InstantSendLockMessages&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InstantSendLockMessages& default_instance() {
    return *internal_default_instance();
  }
  static inline const InstantSendLockMessages* internal_default_instance() {
    return reinterpret_cast<const InstantSendLockMessages*>(
               &_InstantSendLockMessages_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(InstantSendLockMessages& a, InstantSendLockMessages& b) {
    a.Swap(&b);
  }
  inline void Swap(InstantSendLockMessages* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InstantSendLockMessages* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InstantSendLockMessages* New() const final {
    return new InstantSendLockMessages();
  }

  InstantSendLockMessages* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InstantSendLockMessages>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InstantSendLockMessages& from);
  void MergeFrom(const InstantSendLockMessages& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InstantSendLockMessages* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "org.dash.platform.dapi.v0.InstantSendLockMessages";
  }
  protected:
  explicit InstantSendLockMessages(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessagesFieldNumber = 1,
  };
  // repeated bytes messages = 1;
  int messages_size() const;
  private:
  int _internal_messages_size() const;
  public:
  void clear_messages();
  const std::string& messages(int index) const;
  std::string* mutable_messages(int index);
  void set_messages(int index, const std::string& value);
  void set_messages(int index, std::string&& value);
  void set_messages(int index, const char* value);
  void set_messages(int index, const void* value, size_t size);
  std::string* add_messages();
  void add_messages(const std::string& value);
  void add_messages(std::string&& value);
  void add_messages(const char* value);
  void add_messages(const void* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& messages() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_messages();
  private:
  const std::string& _internal_messages(int index) const;
  std::string* _internal_add_messages();
  public:

  // @@protoc_insertion_point(class_scope:org.dash.platform.dapi.v0.InstantSendLockMessages)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> messages_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_core_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetStatusRequest

// -------------------------------------------------------------------

// GetStatusResponse_Version

// uint32 protocol = 1;
inline void GetStatusResponse_Version::clear_protocol() {
  protocol_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetStatusResponse_Version::_internal_protocol() const {
  return protocol_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetStatusResponse_Version::protocol() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.Version.protocol)
  return _internal_protocol();
}
inline void GetStatusResponse_Version::_internal_set_protocol(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  protocol_ = value;
}
inline void GetStatusResponse_Version::set_protocol(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_protocol(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetStatusResponse.Version.protocol)
}

// uint32 software = 2;
inline void GetStatusResponse_Version::clear_software() {
  software_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetStatusResponse_Version::_internal_software() const {
  return software_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetStatusResponse_Version::software() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.Version.software)
  return _internal_software();
}
inline void GetStatusResponse_Version::_internal_set_software(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  software_ = value;
}
inline void GetStatusResponse_Version::set_software(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_software(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetStatusResponse.Version.software)
}

// string agent = 3;
inline void GetStatusResponse_Version::clear_agent() {
  agent_.ClearToEmpty();
}
inline const std::string& GetStatusResponse_Version::agent() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.Version.agent)
  return _internal_agent();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetStatusResponse_Version::set_agent(ArgT0&& arg0, ArgT... args) {
 
 agent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetStatusResponse.Version.agent)
}
inline std::string* GetStatusResponse_Version::mutable_agent() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.GetStatusResponse.Version.agent)
  return _internal_mutable_agent();
}
inline const std::string& GetStatusResponse_Version::_internal_agent() const {
  return agent_.Get();
}
inline void GetStatusResponse_Version::_internal_set_agent(const std::string& value) {
  
  agent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GetStatusResponse_Version::_internal_mutable_agent() {
  
  return agent_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GetStatusResponse_Version::release_agent() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.GetStatusResponse.Version.agent)
  return agent_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void GetStatusResponse_Version::set_allocated_agent(std::string* agent) {
  if (agent != nullptr) {
    
  } else {
    
  }
  agent_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), agent,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.GetStatusResponse.Version.agent)
}

// -------------------------------------------------------------------

// GetStatusResponse_Time

// uint32 now = 1;
inline void GetStatusResponse_Time::clear_now() {
  now_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetStatusResponse_Time::_internal_now() const {
  return now_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetStatusResponse_Time::now() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.Time.now)
  return _internal_now();
}
inline void GetStatusResponse_Time::_internal_set_now(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  now_ = value;
}
inline void GetStatusResponse_Time::set_now(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_now(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetStatusResponse.Time.now)
}

// int32 offset = 2;
inline void GetStatusResponse_Time::clear_offset() {
  offset_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetStatusResponse_Time::_internal_offset() const {
  return offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetStatusResponse_Time::offset() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.Time.offset)
  return _internal_offset();
}
inline void GetStatusResponse_Time::_internal_set_offset(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  offset_ = value;
}
inline void GetStatusResponse_Time::set_offset(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetStatusResponse.Time.offset)
}

// uint32 median = 3;
inline void GetStatusResponse_Time::clear_median() {
  median_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetStatusResponse_Time::_internal_median() const {
  return median_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetStatusResponse_Time::median() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.Time.median)
  return _internal_median();
}
inline void GetStatusResponse_Time::_internal_set_median(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  median_ = value;
}
inline void GetStatusResponse_Time::set_median(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_median(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetStatusResponse.Time.median)
}

// -------------------------------------------------------------------

// GetStatusResponse_Chain

// string name = 1;
inline void GetStatusResponse_Chain::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& GetStatusResponse_Chain::name() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.Chain.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetStatusResponse_Chain::set_name(ArgT0&& arg0, ArgT... args) {
 
 name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetStatusResponse.Chain.name)
}
inline std::string* GetStatusResponse_Chain::mutable_name() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.GetStatusResponse.Chain.name)
  return _internal_mutable_name();
}
inline const std::string& GetStatusResponse_Chain::_internal_name() const {
  return name_.Get();
}
inline void GetStatusResponse_Chain::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GetStatusResponse_Chain::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GetStatusResponse_Chain::release_name() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.GetStatusResponse.Chain.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void GetStatusResponse_Chain::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.GetStatusResponse.Chain.name)
}

// uint32 headers_count = 2;
inline void GetStatusResponse_Chain::clear_headers_count() {
  headers_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetStatusResponse_Chain::_internal_headers_count() const {
  return headers_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetStatusResponse_Chain::headers_count() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.Chain.headers_count)
  return _internal_headers_count();
}
inline void GetStatusResponse_Chain::_internal_set_headers_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  headers_count_ = value;
}
inline void GetStatusResponse_Chain::set_headers_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_headers_count(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetStatusResponse.Chain.headers_count)
}

// uint32 blocks_count = 3;
inline void GetStatusResponse_Chain::clear_blocks_count() {
  blocks_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetStatusResponse_Chain::_internal_blocks_count() const {
  return blocks_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetStatusResponse_Chain::blocks_count() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.Chain.blocks_count)
  return _internal_blocks_count();
}
inline void GetStatusResponse_Chain::_internal_set_blocks_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  blocks_count_ = value;
}
inline void GetStatusResponse_Chain::set_blocks_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_blocks_count(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetStatusResponse.Chain.blocks_count)
}

// bytes best_block_hash = 4;
inline void GetStatusResponse_Chain::clear_best_block_hash() {
  best_block_hash_.ClearToEmpty();
}
inline const std::string& GetStatusResponse_Chain::best_block_hash() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.Chain.best_block_hash)
  return _internal_best_block_hash();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetStatusResponse_Chain::set_best_block_hash(ArgT0&& arg0, ArgT... args) {
 
 best_block_hash_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetStatusResponse.Chain.best_block_hash)
}
inline std::string* GetStatusResponse_Chain::mutable_best_block_hash() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.GetStatusResponse.Chain.best_block_hash)
  return _internal_mutable_best_block_hash();
}
inline const std::string& GetStatusResponse_Chain::_internal_best_block_hash() const {
  return best_block_hash_.Get();
}
inline void GetStatusResponse_Chain::_internal_set_best_block_hash(const std::string& value) {
  
  best_block_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GetStatusResponse_Chain::_internal_mutable_best_block_hash() {
  
  return best_block_hash_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GetStatusResponse_Chain::release_best_block_hash() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.GetStatusResponse.Chain.best_block_hash)
  return best_block_hash_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void GetStatusResponse_Chain::set_allocated_best_block_hash(std::string* best_block_hash) {
  if (best_block_hash != nullptr) {
    
  } else {
    
  }
  best_block_hash_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), best_block_hash,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.GetStatusResponse.Chain.best_block_hash)
}

// double difficulty = 5;
inline void GetStatusResponse_Chain::clear_difficulty() {
  difficulty_ = 0;
}
inline double GetStatusResponse_Chain::_internal_difficulty() const {
  return difficulty_;
}
inline double GetStatusResponse_Chain::difficulty() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.Chain.difficulty)
  return _internal_difficulty();
}
inline void GetStatusResponse_Chain::_internal_set_difficulty(double value) {
  
  difficulty_ = value;
}
inline void GetStatusResponse_Chain::set_difficulty(double value) {
  _internal_set_difficulty(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetStatusResponse.Chain.difficulty)
}

// bytes chain_work = 6;
inline void GetStatusResponse_Chain::clear_chain_work() {
  chain_work_.ClearToEmpty();
}
inline const std::string& GetStatusResponse_Chain::chain_work() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.Chain.chain_work)
  return _internal_chain_work();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetStatusResponse_Chain::set_chain_work(ArgT0&& arg0, ArgT... args) {
 
 chain_work_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetStatusResponse.Chain.chain_work)
}
inline std::string* GetStatusResponse_Chain::mutable_chain_work() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.GetStatusResponse.Chain.chain_work)
  return _internal_mutable_chain_work();
}
inline const std::string& GetStatusResponse_Chain::_internal_chain_work() const {
  return chain_work_.Get();
}
inline void GetStatusResponse_Chain::_internal_set_chain_work(const std::string& value) {
  
  chain_work_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GetStatusResponse_Chain::_internal_mutable_chain_work() {
  
  return chain_work_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GetStatusResponse_Chain::release_chain_work() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.GetStatusResponse.Chain.chain_work)
  return chain_work_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void GetStatusResponse_Chain::set_allocated_chain_work(std::string* chain_work) {
  if (chain_work != nullptr) {
    
  } else {
    
  }
  chain_work_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), chain_work,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.GetStatusResponse.Chain.chain_work)
}

// bool is_synced = 7;
inline void GetStatusResponse_Chain::clear_is_synced() {
  is_synced_ = false;
}
inline bool GetStatusResponse_Chain::_internal_is_synced() const {
  return is_synced_;
}
inline bool GetStatusResponse_Chain::is_synced() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.Chain.is_synced)
  return _internal_is_synced();
}
inline void GetStatusResponse_Chain::_internal_set_is_synced(bool value) {
  
  is_synced_ = value;
}
inline void GetStatusResponse_Chain::set_is_synced(bool value) {
  _internal_set_is_synced(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetStatusResponse.Chain.is_synced)
}

// double sync_progress = 8;
inline void GetStatusResponse_Chain::clear_sync_progress() {
  sync_progress_ = 0;
}
inline double GetStatusResponse_Chain::_internal_sync_progress() const {
  return sync_progress_;
}
inline double GetStatusResponse_Chain::sync_progress() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.Chain.sync_progress)
  return _internal_sync_progress();
}
inline void GetStatusResponse_Chain::_internal_set_sync_progress(double value) {
  
  sync_progress_ = value;
}
inline void GetStatusResponse_Chain::set_sync_progress(double value) {
  _internal_set_sync_progress(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetStatusResponse.Chain.sync_progress)
}

// -------------------------------------------------------------------

// GetStatusResponse_Masternode

// .org.dash.platform.dapi.v0.GetStatusResponse.Masternode.Status status = 1;
inline void GetStatusResponse_Masternode::clear_status() {
  status_ = 0;
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode_Status GetStatusResponse_Masternode::_internal_status() const {
  return static_cast< ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode_Status >(status_);
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode_Status GetStatusResponse_Masternode::status() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.Masternode.status)
  return _internal_status();
}
inline void GetStatusResponse_Masternode::_internal_set_status(::org::dash::platform::dapi::v0::GetStatusResponse_Masternode_Status value) {
  
  status_ = value;
}
inline void GetStatusResponse_Masternode::set_status(::org::dash::platform::dapi::v0::GetStatusResponse_Masternode_Status value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetStatusResponse.Masternode.status)
}

// bytes pro_tx_hash = 2;
inline void GetStatusResponse_Masternode::clear_pro_tx_hash() {
  pro_tx_hash_.ClearToEmpty();
}
inline const std::string& GetStatusResponse_Masternode::pro_tx_hash() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.Masternode.pro_tx_hash)
  return _internal_pro_tx_hash();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetStatusResponse_Masternode::set_pro_tx_hash(ArgT0&& arg0, ArgT... args) {
 
 pro_tx_hash_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetStatusResponse.Masternode.pro_tx_hash)
}
inline std::string* GetStatusResponse_Masternode::mutable_pro_tx_hash() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.GetStatusResponse.Masternode.pro_tx_hash)
  return _internal_mutable_pro_tx_hash();
}
inline const std::string& GetStatusResponse_Masternode::_internal_pro_tx_hash() const {
  return pro_tx_hash_.Get();
}
inline void GetStatusResponse_Masternode::_internal_set_pro_tx_hash(const std::string& value) {
  
  pro_tx_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GetStatusResponse_Masternode::_internal_mutable_pro_tx_hash() {
  
  return pro_tx_hash_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GetStatusResponse_Masternode::release_pro_tx_hash() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.GetStatusResponse.Masternode.pro_tx_hash)
  return pro_tx_hash_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void GetStatusResponse_Masternode::set_allocated_pro_tx_hash(std::string* pro_tx_hash) {
  if (pro_tx_hash != nullptr) {
    
  } else {
    
  }
  pro_tx_hash_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pro_tx_hash,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.GetStatusResponse.Masternode.pro_tx_hash)
}

// uint32 pose_penalty = 3;
inline void GetStatusResponse_Masternode::clear_pose_penalty() {
  pose_penalty_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetStatusResponse_Masternode::_internal_pose_penalty() const {
  return pose_penalty_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetStatusResponse_Masternode::pose_penalty() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.Masternode.pose_penalty)
  return _internal_pose_penalty();
}
inline void GetStatusResponse_Masternode::_internal_set_pose_penalty(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pose_penalty_ = value;
}
inline void GetStatusResponse_Masternode::set_pose_penalty(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pose_penalty(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetStatusResponse.Masternode.pose_penalty)
}

// bool is_synced = 4;
inline void GetStatusResponse_Masternode::clear_is_synced() {
  is_synced_ = false;
}
inline bool GetStatusResponse_Masternode::_internal_is_synced() const {
  return is_synced_;
}
inline bool GetStatusResponse_Masternode::is_synced() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.Masternode.is_synced)
  return _internal_is_synced();
}
inline void GetStatusResponse_Masternode::_internal_set_is_synced(bool value) {
  
  is_synced_ = value;
}
inline void GetStatusResponse_Masternode::set_is_synced(bool value) {
  _internal_set_is_synced(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetStatusResponse.Masternode.is_synced)
}

// double sync_progress = 5;
inline void GetStatusResponse_Masternode::clear_sync_progress() {
  sync_progress_ = 0;
}
inline double GetStatusResponse_Masternode::_internal_sync_progress() const {
  return sync_progress_;
}
inline double GetStatusResponse_Masternode::sync_progress() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.Masternode.sync_progress)
  return _internal_sync_progress();
}
inline void GetStatusResponse_Masternode::_internal_set_sync_progress(double value) {
  
  sync_progress_ = value;
}
inline void GetStatusResponse_Masternode::set_sync_progress(double value) {
  _internal_set_sync_progress(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetStatusResponse.Masternode.sync_progress)
}

// -------------------------------------------------------------------

// GetStatusResponse_NetworkFee

// double relay = 1;
inline void GetStatusResponse_NetworkFee::clear_relay() {
  relay_ = 0;
}
inline double GetStatusResponse_NetworkFee::_internal_relay() const {
  return relay_;
}
inline double GetStatusResponse_NetworkFee::relay() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee.relay)
  return _internal_relay();
}
inline void GetStatusResponse_NetworkFee::_internal_set_relay(double value) {
  
  relay_ = value;
}
inline void GetStatusResponse_NetworkFee::set_relay(double value) {
  _internal_set_relay(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee.relay)
}

// double incremental = 2;
inline void GetStatusResponse_NetworkFee::clear_incremental() {
  incremental_ = 0;
}
inline double GetStatusResponse_NetworkFee::_internal_incremental() const {
  return incremental_;
}
inline double GetStatusResponse_NetworkFee::incremental() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee.incremental)
  return _internal_incremental();
}
inline void GetStatusResponse_NetworkFee::_internal_set_incremental(double value) {
  
  incremental_ = value;
}
inline void GetStatusResponse_NetworkFee::set_incremental(double value) {
  _internal_set_incremental(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee.incremental)
}

// -------------------------------------------------------------------

// GetStatusResponse_Network

// uint32 peers_count = 1;
inline void GetStatusResponse_Network::clear_peers_count() {
  peers_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetStatusResponse_Network::_internal_peers_count() const {
  return peers_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetStatusResponse_Network::peers_count() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.Network.peers_count)
  return _internal_peers_count();
}
inline void GetStatusResponse_Network::_internal_set_peers_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  peers_count_ = value;
}
inline void GetStatusResponse_Network::set_peers_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_peers_count(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetStatusResponse.Network.peers_count)
}

// .org.dash.platform.dapi.v0.GetStatusResponse.NetworkFee fee = 2;
inline bool GetStatusResponse_Network::_internal_has_fee() const {
  return this != internal_default_instance() && fee_ != nullptr;
}
inline bool GetStatusResponse_Network::has_fee() const {
  return _internal_has_fee();
}
inline void GetStatusResponse_Network::clear_fee() {
  if (GetArenaForAllocation() == nullptr && fee_ != nullptr) {
    delete fee_;
  }
  fee_ = nullptr;
}
inline const ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee& GetStatusResponse_Network::_internal_fee() const {
  const ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee* p = fee_;
  return p != nullptr ? *p : reinterpret_cast<const ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee&>(
      ::org::dash::platform::dapi::v0::_GetStatusResponse_NetworkFee_default_instance_);
}
inline const ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee& GetStatusResponse_Network::fee() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.Network.fee)
  return _internal_fee();
}
inline void GetStatusResponse_Network::unsafe_arena_set_allocated_fee(
    ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee* fee) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(fee_);
  }
  fee_ = fee;
  if (fee) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:org.dash.platform.dapi.v0.GetStatusResponse.Network.fee)
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee* GetStatusResponse_Network::release_fee() {
  
  ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee* temp = fee_;
  fee_ = nullptr;
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee* GetStatusResponse_Network::unsafe_arena_release_fee() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.GetStatusResponse.Network.fee)
  
  ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee* temp = fee_;
  fee_ = nullptr;
  return temp;
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee* GetStatusResponse_Network::_internal_mutable_fee() {
  
  if (fee_ == nullptr) {
    auto* p = CreateMaybeMessage<::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee>(GetArenaForAllocation());
    fee_ = p;
  }
  return fee_;
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee* GetStatusResponse_Network::mutable_fee() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.GetStatusResponse.Network.fee)
  return _internal_mutable_fee();
}
inline void GetStatusResponse_Network::set_allocated_fee(::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee* fee) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete fee_;
  }
  if (fee) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::org::dash::platform::dapi::v0::GetStatusResponse_NetworkFee>::GetOwningArena(fee);
    if (message_arena != submessage_arena) {
      fee = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fee, submessage_arena);
    }
    
  } else {
    
  }
  fee_ = fee;
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.GetStatusResponse.Network.fee)
}

// -------------------------------------------------------------------

// GetStatusResponse

// .org.dash.platform.dapi.v0.GetStatusResponse.Version version = 1;
inline bool GetStatusResponse::_internal_has_version() const {
  return this != internal_default_instance() && version_ != nullptr;
}
inline bool GetStatusResponse::has_version() const {
  return _internal_has_version();
}
inline void GetStatusResponse::clear_version() {
  if (GetArenaForAllocation() == nullptr && version_ != nullptr) {
    delete version_;
  }
  version_ = nullptr;
}
inline const ::org::dash::platform::dapi::v0::GetStatusResponse_Version& GetStatusResponse::_internal_version() const {
  const ::org::dash::platform::dapi::v0::GetStatusResponse_Version* p = version_;
  return p != nullptr ? *p : reinterpret_cast<const ::org::dash::platform::dapi::v0::GetStatusResponse_Version&>(
      ::org::dash::platform::dapi::v0::_GetStatusResponse_Version_default_instance_);
}
inline const ::org::dash::platform::dapi::v0::GetStatusResponse_Version& GetStatusResponse::version() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.version)
  return _internal_version();
}
inline void GetStatusResponse::unsafe_arena_set_allocated_version(
    ::org::dash::platform::dapi::v0::GetStatusResponse_Version* version) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(version_);
  }
  version_ = version;
  if (version) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:org.dash.platform.dapi.v0.GetStatusResponse.version)
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_Version* GetStatusResponse::release_version() {
  
  ::org::dash::platform::dapi::v0::GetStatusResponse_Version* temp = version_;
  version_ = nullptr;
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_Version* GetStatusResponse::unsafe_arena_release_version() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.GetStatusResponse.version)
  
  ::org::dash::platform::dapi::v0::GetStatusResponse_Version* temp = version_;
  version_ = nullptr;
  return temp;
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_Version* GetStatusResponse::_internal_mutable_version() {
  
  if (version_ == nullptr) {
    auto* p = CreateMaybeMessage<::org::dash::platform::dapi::v0::GetStatusResponse_Version>(GetArenaForAllocation());
    version_ = p;
  }
  return version_;
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_Version* GetStatusResponse::mutable_version() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.GetStatusResponse.version)
  return _internal_mutable_version();
}
inline void GetStatusResponse::set_allocated_version(::org::dash::platform::dapi::v0::GetStatusResponse_Version* version) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete version_;
  }
  if (version) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::org::dash::platform::dapi::v0::GetStatusResponse_Version>::GetOwningArena(version);
    if (message_arena != submessage_arena) {
      version = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, version, submessage_arena);
    }
    
  } else {
    
  }
  version_ = version;
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.GetStatusResponse.version)
}

// .org.dash.platform.dapi.v0.GetStatusResponse.Time time = 2;
inline bool GetStatusResponse::_internal_has_time() const {
  return this != internal_default_instance() && time_ != nullptr;
}
inline bool GetStatusResponse::has_time() const {
  return _internal_has_time();
}
inline void GetStatusResponse::clear_time() {
  if (GetArenaForAllocation() == nullptr && time_ != nullptr) {
    delete time_;
  }
  time_ = nullptr;
}
inline const ::org::dash::platform::dapi::v0::GetStatusResponse_Time& GetStatusResponse::_internal_time() const {
  const ::org::dash::platform::dapi::v0::GetStatusResponse_Time* p = time_;
  return p != nullptr ? *p : reinterpret_cast<const ::org::dash::platform::dapi::v0::GetStatusResponse_Time&>(
      ::org::dash::platform::dapi::v0::_GetStatusResponse_Time_default_instance_);
}
inline const ::org::dash::platform::dapi::v0::GetStatusResponse_Time& GetStatusResponse::time() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.time)
  return _internal_time();
}
inline void GetStatusResponse::unsafe_arena_set_allocated_time(
    ::org::dash::platform::dapi::v0::GetStatusResponse_Time* time) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(time_);
  }
  time_ = time;
  if (time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:org.dash.platform.dapi.v0.GetStatusResponse.time)
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_Time* GetStatusResponse::release_time() {
  
  ::org::dash::platform::dapi::v0::GetStatusResponse_Time* temp = time_;
  time_ = nullptr;
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_Time* GetStatusResponse::unsafe_arena_release_time() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.GetStatusResponse.time)
  
  ::org::dash::platform::dapi::v0::GetStatusResponse_Time* temp = time_;
  time_ = nullptr;
  return temp;
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_Time* GetStatusResponse::_internal_mutable_time() {
  
  if (time_ == nullptr) {
    auto* p = CreateMaybeMessage<::org::dash::platform::dapi::v0::GetStatusResponse_Time>(GetArenaForAllocation());
    time_ = p;
  }
  return time_;
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_Time* GetStatusResponse::mutable_time() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.GetStatusResponse.time)
  return _internal_mutable_time();
}
inline void GetStatusResponse::set_allocated_time(::org::dash::platform::dapi::v0::GetStatusResponse_Time* time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete time_;
  }
  if (time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::org::dash::platform::dapi::v0::GetStatusResponse_Time>::GetOwningArena(time);
    if (message_arena != submessage_arena) {
      time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, time, submessage_arena);
    }
    
  } else {
    
  }
  time_ = time;
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.GetStatusResponse.time)
}

// .org.dash.platform.dapi.v0.GetStatusResponse.Status status = 3;
inline void GetStatusResponse::clear_status() {
  status_ = 0;
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_Status GetStatusResponse::_internal_status() const {
  return static_cast< ::org::dash::platform::dapi::v0::GetStatusResponse_Status >(status_);
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_Status GetStatusResponse::status() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.status)
  return _internal_status();
}
inline void GetStatusResponse::_internal_set_status(::org::dash::platform::dapi::v0::GetStatusResponse_Status value) {
  
  status_ = value;
}
inline void GetStatusResponse::set_status(::org::dash::platform::dapi::v0::GetStatusResponse_Status value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetStatusResponse.status)
}

// double sync_progress = 4;
inline void GetStatusResponse::clear_sync_progress() {
  sync_progress_ = 0;
}
inline double GetStatusResponse::_internal_sync_progress() const {
  return sync_progress_;
}
inline double GetStatusResponse::sync_progress() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.sync_progress)
  return _internal_sync_progress();
}
inline void GetStatusResponse::_internal_set_sync_progress(double value) {
  
  sync_progress_ = value;
}
inline void GetStatusResponse::set_sync_progress(double value) {
  _internal_set_sync_progress(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetStatusResponse.sync_progress)
}

// .org.dash.platform.dapi.v0.GetStatusResponse.Chain chain = 5;
inline bool GetStatusResponse::_internal_has_chain() const {
  return this != internal_default_instance() && chain_ != nullptr;
}
inline bool GetStatusResponse::has_chain() const {
  return _internal_has_chain();
}
inline void GetStatusResponse::clear_chain() {
  if (GetArenaForAllocation() == nullptr && chain_ != nullptr) {
    delete chain_;
  }
  chain_ = nullptr;
}
inline const ::org::dash::platform::dapi::v0::GetStatusResponse_Chain& GetStatusResponse::_internal_chain() const {
  const ::org::dash::platform::dapi::v0::GetStatusResponse_Chain* p = chain_;
  return p != nullptr ? *p : reinterpret_cast<const ::org::dash::platform::dapi::v0::GetStatusResponse_Chain&>(
      ::org::dash::platform::dapi::v0::_GetStatusResponse_Chain_default_instance_);
}
inline const ::org::dash::platform::dapi::v0::GetStatusResponse_Chain& GetStatusResponse::chain() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.chain)
  return _internal_chain();
}
inline void GetStatusResponse::unsafe_arena_set_allocated_chain(
    ::org::dash::platform::dapi::v0::GetStatusResponse_Chain* chain) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(chain_);
  }
  chain_ = chain;
  if (chain) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:org.dash.platform.dapi.v0.GetStatusResponse.chain)
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_Chain* GetStatusResponse::release_chain() {
  
  ::org::dash::platform::dapi::v0::GetStatusResponse_Chain* temp = chain_;
  chain_ = nullptr;
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_Chain* GetStatusResponse::unsafe_arena_release_chain() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.GetStatusResponse.chain)
  
  ::org::dash::platform::dapi::v0::GetStatusResponse_Chain* temp = chain_;
  chain_ = nullptr;
  return temp;
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_Chain* GetStatusResponse::_internal_mutable_chain() {
  
  if (chain_ == nullptr) {
    auto* p = CreateMaybeMessage<::org::dash::platform::dapi::v0::GetStatusResponse_Chain>(GetArenaForAllocation());
    chain_ = p;
  }
  return chain_;
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_Chain* GetStatusResponse::mutable_chain() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.GetStatusResponse.chain)
  return _internal_mutable_chain();
}
inline void GetStatusResponse::set_allocated_chain(::org::dash::platform::dapi::v0::GetStatusResponse_Chain* chain) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete chain_;
  }
  if (chain) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::org::dash::platform::dapi::v0::GetStatusResponse_Chain>::GetOwningArena(chain);
    if (message_arena != submessage_arena) {
      chain = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, chain, submessage_arena);
    }
    
  } else {
    
  }
  chain_ = chain;
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.GetStatusResponse.chain)
}

// .org.dash.platform.dapi.v0.GetStatusResponse.Masternode masternode = 6;
inline bool GetStatusResponse::_internal_has_masternode() const {
  return this != internal_default_instance() && masternode_ != nullptr;
}
inline bool GetStatusResponse::has_masternode() const {
  return _internal_has_masternode();
}
inline void GetStatusResponse::clear_masternode() {
  if (GetArenaForAllocation() == nullptr && masternode_ != nullptr) {
    delete masternode_;
  }
  masternode_ = nullptr;
}
inline const ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode& GetStatusResponse::_internal_masternode() const {
  const ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode* p = masternode_;
  return p != nullptr ? *p : reinterpret_cast<const ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode&>(
      ::org::dash::platform::dapi::v0::_GetStatusResponse_Masternode_default_instance_);
}
inline const ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode& GetStatusResponse::masternode() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.masternode)
  return _internal_masternode();
}
inline void GetStatusResponse::unsafe_arena_set_allocated_masternode(
    ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode* masternode) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(masternode_);
  }
  masternode_ = masternode;
  if (masternode) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:org.dash.platform.dapi.v0.GetStatusResponse.masternode)
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode* GetStatusResponse::release_masternode() {
  
  ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode* temp = masternode_;
  masternode_ = nullptr;
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode* GetStatusResponse::unsafe_arena_release_masternode() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.GetStatusResponse.masternode)
  
  ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode* temp = masternode_;
  masternode_ = nullptr;
  return temp;
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode* GetStatusResponse::_internal_mutable_masternode() {
  
  if (masternode_ == nullptr) {
    auto* p = CreateMaybeMessage<::org::dash::platform::dapi::v0::GetStatusResponse_Masternode>(GetArenaForAllocation());
    masternode_ = p;
  }
  return masternode_;
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode* GetStatusResponse::mutable_masternode() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.GetStatusResponse.masternode)
  return _internal_mutable_masternode();
}
inline void GetStatusResponse::set_allocated_masternode(::org::dash::platform::dapi::v0::GetStatusResponse_Masternode* masternode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete masternode_;
  }
  if (masternode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::org::dash::platform::dapi::v0::GetStatusResponse_Masternode>::GetOwningArena(masternode);
    if (message_arena != submessage_arena) {
      masternode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, masternode, submessage_arena);
    }
    
  } else {
    
  }
  masternode_ = masternode;
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.GetStatusResponse.masternode)
}

// .org.dash.platform.dapi.v0.GetStatusResponse.Network network = 7;
inline bool GetStatusResponse::_internal_has_network() const {
  return this != internal_default_instance() && network_ != nullptr;
}
inline bool GetStatusResponse::has_network() const {
  return _internal_has_network();
}
inline void GetStatusResponse::clear_network() {
  if (GetArenaForAllocation() == nullptr && network_ != nullptr) {
    delete network_;
  }
  network_ = nullptr;
}
inline const ::org::dash::platform::dapi::v0::GetStatusResponse_Network& GetStatusResponse::_internal_network() const {
  const ::org::dash::platform::dapi::v0::GetStatusResponse_Network* p = network_;
  return p != nullptr ? *p : reinterpret_cast<const ::org::dash::platform::dapi::v0::GetStatusResponse_Network&>(
      ::org::dash::platform::dapi::v0::_GetStatusResponse_Network_default_instance_);
}
inline const ::org::dash::platform::dapi::v0::GetStatusResponse_Network& GetStatusResponse::network() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetStatusResponse.network)
  return _internal_network();
}
inline void GetStatusResponse::unsafe_arena_set_allocated_network(
    ::org::dash::platform::dapi::v0::GetStatusResponse_Network* network) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(network_);
  }
  network_ = network;
  if (network) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:org.dash.platform.dapi.v0.GetStatusResponse.network)
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_Network* GetStatusResponse::release_network() {
  
  ::org::dash::platform::dapi::v0::GetStatusResponse_Network* temp = network_;
  network_ = nullptr;
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_Network* GetStatusResponse::unsafe_arena_release_network() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.GetStatusResponse.network)
  
  ::org::dash::platform::dapi::v0::GetStatusResponse_Network* temp = network_;
  network_ = nullptr;
  return temp;
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_Network* GetStatusResponse::_internal_mutable_network() {
  
  if (network_ == nullptr) {
    auto* p = CreateMaybeMessage<::org::dash::platform::dapi::v0::GetStatusResponse_Network>(GetArenaForAllocation());
    network_ = p;
  }
  return network_;
}
inline ::org::dash::platform::dapi::v0::GetStatusResponse_Network* GetStatusResponse::mutable_network() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.GetStatusResponse.network)
  return _internal_mutable_network();
}
inline void GetStatusResponse::set_allocated_network(::org::dash::platform::dapi::v0::GetStatusResponse_Network* network) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete network_;
  }
  if (network) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::org::dash::platform::dapi::v0::GetStatusResponse_Network>::GetOwningArena(network);
    if (message_arena != submessage_arena) {
      network = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, network, submessage_arena);
    }
    
  } else {
    
  }
  network_ = network;
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.GetStatusResponse.network)
}

// -------------------------------------------------------------------

// GetBlockRequest

// uint32 height = 1;
inline bool GetBlockRequest::_internal_has_height() const {
  return block_case() == kHeight;
}
inline bool GetBlockRequest::has_height() const {
  return _internal_has_height();
}
inline void GetBlockRequest::set_has_height() {
  _oneof_case_[0] = kHeight;
}
inline void GetBlockRequest::clear_height() {
  if (_internal_has_height()) {
    block_.height_ = 0u;
    clear_has_block();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetBlockRequest::_internal_height() const {
  if (_internal_has_height()) {
    return block_.height_;
  }
  return 0u;
}
inline void GetBlockRequest::_internal_set_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  if (!_internal_has_height()) {
    clear_block();
    set_has_height();
  }
  block_.height_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetBlockRequest::height() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetBlockRequest.height)
  return _internal_height();
}
inline void GetBlockRequest::set_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetBlockRequest.height)
}

// string hash = 2;
inline bool GetBlockRequest::_internal_has_hash() const {
  return block_case() == kHash;
}
inline bool GetBlockRequest::has_hash() const {
  return _internal_has_hash();
}
inline void GetBlockRequest::set_has_hash() {
  _oneof_case_[0] = kHash;
}
inline void GetBlockRequest::clear_hash() {
  if (_internal_has_hash()) {
    block_.hash_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
    clear_has_block();
  }
}
inline const std::string& GetBlockRequest::hash() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetBlockRequest.hash)
  return _internal_hash();
}
template <typename ArgT0, typename... ArgT>
inline void GetBlockRequest::set_hash(ArgT0&& arg0, ArgT... args) {
  if (!_internal_has_hash()) {
    clear_block();
    set_has_hash();
    block_.hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  block_.hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetBlockRequest.hash)
}
inline std::string* GetBlockRequest::mutable_hash() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.GetBlockRequest.hash)
  return _internal_mutable_hash();
}
inline const std::string& GetBlockRequest::_internal_hash() const {
  if (_internal_has_hash()) {
    return block_.hash_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void GetBlockRequest::_internal_set_hash(const std::string& value) {
  if (!_internal_has_hash()) {
    clear_block();
    set_has_hash();
    block_.hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  block_.hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GetBlockRequest::_internal_mutable_hash() {
  if (!_internal_has_hash()) {
    clear_block();
    set_has_hash();
    block_.hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  return block_.hash_.Mutable(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GetBlockRequest::release_hash() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.GetBlockRequest.hash)
  if (_internal_has_hash()) {
    clear_has_block();
    return block_.hash_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
  } else {
    return nullptr;
  }
}
inline void GetBlockRequest::set_allocated_hash(std::string* hash) {
  if (has_block()) {
    clear_block();
  }
  if (hash != nullptr) {
    set_has_hash();
    block_.hash_.UnsafeSetDefault(hash);
    ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaForAllocation();
    if (arena != nullptr) {
      arena->Own(hash);
    }
  }
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.GetBlockRequest.hash)
}

inline bool GetBlockRequest::has_block() const {
  return block_case() != BLOCK_NOT_SET;
}
inline void GetBlockRequest::clear_has_block() {
  _oneof_case_[0] = BLOCK_NOT_SET;
}
inline GetBlockRequest::BlockCase GetBlockRequest::block_case() const {
  return GetBlockRequest::BlockCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// GetBlockResponse

// bytes block = 1;
inline void GetBlockResponse::clear_block() {
  block_.ClearToEmpty();
}
inline const std::string& GetBlockResponse::block() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetBlockResponse.block)
  return _internal_block();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetBlockResponse::set_block(ArgT0&& arg0, ArgT... args) {
 
 block_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetBlockResponse.block)
}
inline std::string* GetBlockResponse::mutable_block() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.GetBlockResponse.block)
  return _internal_mutable_block();
}
inline const std::string& GetBlockResponse::_internal_block() const {
  return block_.Get();
}
inline void GetBlockResponse::_internal_set_block(const std::string& value) {
  
  block_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GetBlockResponse::_internal_mutable_block() {
  
  return block_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GetBlockResponse::release_block() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.GetBlockResponse.block)
  return block_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void GetBlockResponse::set_allocated_block(std::string* block) {
  if (block != nullptr) {
    
  } else {
    
  }
  block_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), block,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.GetBlockResponse.block)
}

// -------------------------------------------------------------------

// BroadcastTransactionRequest

// bytes transaction = 1;
inline void BroadcastTransactionRequest::clear_transaction() {
  transaction_.ClearToEmpty();
}
inline const std::string& BroadcastTransactionRequest::transaction() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.BroadcastTransactionRequest.transaction)
  return _internal_transaction();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void BroadcastTransactionRequest::set_transaction(ArgT0&& arg0, ArgT... args) {
 
 transaction_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.BroadcastTransactionRequest.transaction)
}
inline std::string* BroadcastTransactionRequest::mutable_transaction() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.BroadcastTransactionRequest.transaction)
  return _internal_mutable_transaction();
}
inline const std::string& BroadcastTransactionRequest::_internal_transaction() const {
  return transaction_.Get();
}
inline void BroadcastTransactionRequest::_internal_set_transaction(const std::string& value) {
  
  transaction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* BroadcastTransactionRequest::_internal_mutable_transaction() {
  
  return transaction_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* BroadcastTransactionRequest::release_transaction() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.BroadcastTransactionRequest.transaction)
  return transaction_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void BroadcastTransactionRequest::set_allocated_transaction(std::string* transaction) {
  if (transaction != nullptr) {
    
  } else {
    
  }
  transaction_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), transaction,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.BroadcastTransactionRequest.transaction)
}

// bool allow_high_fees = 2;
inline void BroadcastTransactionRequest::clear_allow_high_fees() {
  allow_high_fees_ = false;
}
inline bool BroadcastTransactionRequest::_internal_allow_high_fees() const {
  return allow_high_fees_;
}
inline bool BroadcastTransactionRequest::allow_high_fees() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.BroadcastTransactionRequest.allow_high_fees)
  return _internal_allow_high_fees();
}
inline void BroadcastTransactionRequest::_internal_set_allow_high_fees(bool value) {
  
  allow_high_fees_ = value;
}
inline void BroadcastTransactionRequest::set_allow_high_fees(bool value) {
  _internal_set_allow_high_fees(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.BroadcastTransactionRequest.allow_high_fees)
}

// bool bypass_limits = 3;
inline void BroadcastTransactionRequest::clear_bypass_limits() {
  bypass_limits_ = false;
}
inline bool BroadcastTransactionRequest::_internal_bypass_limits() const {
  return bypass_limits_;
}
inline bool BroadcastTransactionRequest::bypass_limits() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.BroadcastTransactionRequest.bypass_limits)
  return _internal_bypass_limits();
}
inline void BroadcastTransactionRequest::_internal_set_bypass_limits(bool value) {
  
  bypass_limits_ = value;
}
inline void BroadcastTransactionRequest::set_bypass_limits(bool value) {
  _internal_set_bypass_limits(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.BroadcastTransactionRequest.bypass_limits)
}

// -------------------------------------------------------------------

// BroadcastTransactionResponse

// string transaction_id = 1;
inline void BroadcastTransactionResponse::clear_transaction_id() {
  transaction_id_.ClearToEmpty();
}
inline const std::string& BroadcastTransactionResponse::transaction_id() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.BroadcastTransactionResponse.transaction_id)
  return _internal_transaction_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void BroadcastTransactionResponse::set_transaction_id(ArgT0&& arg0, ArgT... args) {
 
 transaction_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.BroadcastTransactionResponse.transaction_id)
}
inline std::string* BroadcastTransactionResponse::mutable_transaction_id() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.BroadcastTransactionResponse.transaction_id)
  return _internal_mutable_transaction_id();
}
inline const std::string& BroadcastTransactionResponse::_internal_transaction_id() const {
  return transaction_id_.Get();
}
inline void BroadcastTransactionResponse::_internal_set_transaction_id(const std::string& value) {
  
  transaction_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* BroadcastTransactionResponse::_internal_mutable_transaction_id() {
  
  return transaction_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* BroadcastTransactionResponse::release_transaction_id() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.BroadcastTransactionResponse.transaction_id)
  return transaction_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void BroadcastTransactionResponse::set_allocated_transaction_id(std::string* transaction_id) {
  if (transaction_id != nullptr) {
    
  } else {
    
  }
  transaction_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), transaction_id,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.BroadcastTransactionResponse.transaction_id)
}

// -------------------------------------------------------------------

// GetTransactionRequest

// string id = 1;
inline void GetTransactionRequest::clear_id() {
  id_.ClearToEmpty();
}
inline const std::string& GetTransactionRequest::id() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetTransactionRequest.id)
  return _internal_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetTransactionRequest::set_id(ArgT0&& arg0, ArgT... args) {
 
 id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetTransactionRequest.id)
}
inline std::string* GetTransactionRequest::mutable_id() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.GetTransactionRequest.id)
  return _internal_mutable_id();
}
inline const std::string& GetTransactionRequest::_internal_id() const {
  return id_.Get();
}
inline void GetTransactionRequest::_internal_set_id(const std::string& value) {
  
  id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GetTransactionRequest::_internal_mutable_id() {
  
  return id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GetTransactionRequest::release_id() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.GetTransactionRequest.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void GetTransactionRequest::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.GetTransactionRequest.id)
}

// -------------------------------------------------------------------

// GetTransactionResponse

// bytes transaction = 1;
inline void GetTransactionResponse::clear_transaction() {
  transaction_.ClearToEmpty();
}
inline const std::string& GetTransactionResponse::transaction() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetTransactionResponse.transaction)
  return _internal_transaction();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetTransactionResponse::set_transaction(ArgT0&& arg0, ArgT... args) {
 
 transaction_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetTransactionResponse.transaction)
}
inline std::string* GetTransactionResponse::mutable_transaction() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.GetTransactionResponse.transaction)
  return _internal_mutable_transaction();
}
inline const std::string& GetTransactionResponse::_internal_transaction() const {
  return transaction_.Get();
}
inline void GetTransactionResponse::_internal_set_transaction(const std::string& value) {
  
  transaction_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GetTransactionResponse::_internal_mutable_transaction() {
  
  return transaction_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GetTransactionResponse::release_transaction() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.GetTransactionResponse.transaction)
  return transaction_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void GetTransactionResponse::set_allocated_transaction(std::string* transaction) {
  if (transaction != nullptr) {
    
  } else {
    
  }
  transaction_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), transaction,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.GetTransactionResponse.transaction)
}

// bytes block_hash = 2;
inline void GetTransactionResponse::clear_block_hash() {
  block_hash_.ClearToEmpty();
}
inline const std::string& GetTransactionResponse::block_hash() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetTransactionResponse.block_hash)
  return _internal_block_hash();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetTransactionResponse::set_block_hash(ArgT0&& arg0, ArgT... args) {
 
 block_hash_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetTransactionResponse.block_hash)
}
inline std::string* GetTransactionResponse::mutable_block_hash() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.GetTransactionResponse.block_hash)
  return _internal_mutable_block_hash();
}
inline const std::string& GetTransactionResponse::_internal_block_hash() const {
  return block_hash_.Get();
}
inline void GetTransactionResponse::_internal_set_block_hash(const std::string& value) {
  
  block_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GetTransactionResponse::_internal_mutable_block_hash() {
  
  return block_hash_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GetTransactionResponse::release_block_hash() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.GetTransactionResponse.block_hash)
  return block_hash_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void GetTransactionResponse::set_allocated_block_hash(std::string* block_hash) {
  if (block_hash != nullptr) {
    
  } else {
    
  }
  block_hash_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), block_hash,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.GetTransactionResponse.block_hash)
}

// uint32 height = 3;
inline void GetTransactionResponse::clear_height() {
  height_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetTransactionResponse::_internal_height() const {
  return height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetTransactionResponse::height() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetTransactionResponse.height)
  return _internal_height();
}
inline void GetTransactionResponse::_internal_set_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  height_ = value;
}
inline void GetTransactionResponse::set_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetTransactionResponse.height)
}

// uint32 confirmations = 4;
inline void GetTransactionResponse::clear_confirmations() {
  confirmations_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetTransactionResponse::_internal_confirmations() const {
  return confirmations_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetTransactionResponse::confirmations() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetTransactionResponse.confirmations)
  return _internal_confirmations();
}
inline void GetTransactionResponse::_internal_set_confirmations(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  confirmations_ = value;
}
inline void GetTransactionResponse::set_confirmations(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_confirmations(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetTransactionResponse.confirmations)
}

// bool is_instant_locked = 5;
inline void GetTransactionResponse::clear_is_instant_locked() {
  is_instant_locked_ = false;
}
inline bool GetTransactionResponse::_internal_is_instant_locked() const {
  return is_instant_locked_;
}
inline bool GetTransactionResponse::is_instant_locked() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetTransactionResponse.is_instant_locked)
  return _internal_is_instant_locked();
}
inline void GetTransactionResponse::_internal_set_is_instant_locked(bool value) {
  
  is_instant_locked_ = value;
}
inline void GetTransactionResponse::set_is_instant_locked(bool value) {
  _internal_set_is_instant_locked(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetTransactionResponse.is_instant_locked)
}

// bool is_chain_locked = 6;
inline void GetTransactionResponse::clear_is_chain_locked() {
  is_chain_locked_ = false;
}
inline bool GetTransactionResponse::_internal_is_chain_locked() const {
  return is_chain_locked_;
}
inline bool GetTransactionResponse::is_chain_locked() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetTransactionResponse.is_chain_locked)
  return _internal_is_chain_locked();
}
inline void GetTransactionResponse::_internal_set_is_chain_locked(bool value) {
  
  is_chain_locked_ = value;
}
inline void GetTransactionResponse::set_is_chain_locked(bool value) {
  _internal_set_is_chain_locked(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetTransactionResponse.is_chain_locked)
}

// -------------------------------------------------------------------

// BlockHeadersWithChainLocksRequest

// bytes from_block_hash = 1;
inline bool BlockHeadersWithChainLocksRequest::_internal_has_from_block_hash() const {
  return from_block_case() == kFromBlockHash;
}
inline bool BlockHeadersWithChainLocksRequest::has_from_block_hash() const {
  return _internal_has_from_block_hash();
}
inline void BlockHeadersWithChainLocksRequest::set_has_from_block_hash() {
  _oneof_case_[0] = kFromBlockHash;
}
inline void BlockHeadersWithChainLocksRequest::clear_from_block_hash() {
  if (_internal_has_from_block_hash()) {
    from_block_.from_block_hash_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
    clear_has_from_block();
  }
}
inline const std::string& BlockHeadersWithChainLocksRequest::from_block_hash() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest.from_block_hash)
  return _internal_from_block_hash();
}
template <typename ArgT0, typename... ArgT>
inline void BlockHeadersWithChainLocksRequest::set_from_block_hash(ArgT0&& arg0, ArgT... args) {
  if (!_internal_has_from_block_hash()) {
    clear_from_block();
    set_has_from_block_hash();
    from_block_.from_block_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  from_block_.from_block_hash_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest.from_block_hash)
}
inline std::string* BlockHeadersWithChainLocksRequest::mutable_from_block_hash() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest.from_block_hash)
  return _internal_mutable_from_block_hash();
}
inline const std::string& BlockHeadersWithChainLocksRequest::_internal_from_block_hash() const {
  if (_internal_has_from_block_hash()) {
    return from_block_.from_block_hash_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void BlockHeadersWithChainLocksRequest::_internal_set_from_block_hash(const std::string& value) {
  if (!_internal_has_from_block_hash()) {
    clear_from_block();
    set_has_from_block_hash();
    from_block_.from_block_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  from_block_.from_block_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* BlockHeadersWithChainLocksRequest::_internal_mutable_from_block_hash() {
  if (!_internal_has_from_block_hash()) {
    clear_from_block();
    set_has_from_block_hash();
    from_block_.from_block_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  return from_block_.from_block_hash_.Mutable(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* BlockHeadersWithChainLocksRequest::release_from_block_hash() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest.from_block_hash)
  if (_internal_has_from_block_hash()) {
    clear_has_from_block();
    return from_block_.from_block_hash_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
  } else {
    return nullptr;
  }
}
inline void BlockHeadersWithChainLocksRequest::set_allocated_from_block_hash(std::string* from_block_hash) {
  if (has_from_block()) {
    clear_from_block();
  }
  if (from_block_hash != nullptr) {
    set_has_from_block_hash();
    from_block_.from_block_hash_.UnsafeSetDefault(from_block_hash);
    ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaForAllocation();
    if (arena != nullptr) {
      arena->Own(from_block_hash);
    }
  }
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest.from_block_hash)
}

// uint32 from_block_height = 2;
inline bool BlockHeadersWithChainLocksRequest::_internal_has_from_block_height() const {
  return from_block_case() == kFromBlockHeight;
}
inline bool BlockHeadersWithChainLocksRequest::has_from_block_height() const {
  return _internal_has_from_block_height();
}
inline void BlockHeadersWithChainLocksRequest::set_has_from_block_height() {
  _oneof_case_[0] = kFromBlockHeight;
}
inline void BlockHeadersWithChainLocksRequest::clear_from_block_height() {
  if (_internal_has_from_block_height()) {
    from_block_.from_block_height_ = 0u;
    clear_has_from_block();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BlockHeadersWithChainLocksRequest::_internal_from_block_height() const {
  if (_internal_has_from_block_height()) {
    return from_block_.from_block_height_;
  }
  return 0u;
}
inline void BlockHeadersWithChainLocksRequest::_internal_set_from_block_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  if (!_internal_has_from_block_height()) {
    clear_from_block();
    set_has_from_block_height();
  }
  from_block_.from_block_height_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BlockHeadersWithChainLocksRequest::from_block_height() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest.from_block_height)
  return _internal_from_block_height();
}
inline void BlockHeadersWithChainLocksRequest::set_from_block_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_from_block_height(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest.from_block_height)
}

// uint32 count = 3;
inline void BlockHeadersWithChainLocksRequest::clear_count() {
  count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BlockHeadersWithChainLocksRequest::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BlockHeadersWithChainLocksRequest::count() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest.count)
  return _internal_count();
}
inline void BlockHeadersWithChainLocksRequest::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  count_ = value;
}
inline void BlockHeadersWithChainLocksRequest::set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksRequest.count)
}

inline bool BlockHeadersWithChainLocksRequest::has_from_block() const {
  return from_block_case() != FROM_BLOCK_NOT_SET;
}
inline void BlockHeadersWithChainLocksRequest::clear_has_from_block() {
  _oneof_case_[0] = FROM_BLOCK_NOT_SET;
}
inline BlockHeadersWithChainLocksRequest::FromBlockCase BlockHeadersWithChainLocksRequest::from_block_case() const {
  return BlockHeadersWithChainLocksRequest::FromBlockCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// BlockHeadersWithChainLocksResponse

// .org.dash.platform.dapi.v0.BlockHeaders block_headers = 1;
inline bool BlockHeadersWithChainLocksResponse::_internal_has_block_headers() const {
  return responses_case() == kBlockHeaders;
}
inline bool BlockHeadersWithChainLocksResponse::has_block_headers() const {
  return _internal_has_block_headers();
}
inline void BlockHeadersWithChainLocksResponse::set_has_block_headers() {
  _oneof_case_[0] = kBlockHeaders;
}
inline void BlockHeadersWithChainLocksResponse::clear_block_headers() {
  if (_internal_has_block_headers()) {
    if (GetArenaForAllocation() == nullptr) {
      delete responses_.block_headers_;
    }
    clear_has_responses();
  }
}
inline ::org::dash::platform::dapi::v0::BlockHeaders* BlockHeadersWithChainLocksResponse::release_block_headers() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse.block_headers)
  if (_internal_has_block_headers()) {
    clear_has_responses();
      ::org::dash::platform::dapi::v0::BlockHeaders* temp = responses_.block_headers_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    responses_.block_headers_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::org::dash::platform::dapi::v0::BlockHeaders& BlockHeadersWithChainLocksResponse::_internal_block_headers() const {
  return _internal_has_block_headers()
      ? *responses_.block_headers_
      : reinterpret_cast< ::org::dash::platform::dapi::v0::BlockHeaders&>(::org::dash::platform::dapi::v0::_BlockHeaders_default_instance_);
}
inline const ::org::dash::platform::dapi::v0::BlockHeaders& BlockHeadersWithChainLocksResponse::block_headers() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse.block_headers)
  return _internal_block_headers();
}
inline ::org::dash::platform::dapi::v0::BlockHeaders* BlockHeadersWithChainLocksResponse::unsafe_arena_release_block_headers() {
  // @@protoc_insertion_point(field_unsafe_arena_release:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse.block_headers)
  if (_internal_has_block_headers()) {
    clear_has_responses();
    ::org::dash::platform::dapi::v0::BlockHeaders* temp = responses_.block_headers_;
    responses_.block_headers_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void BlockHeadersWithChainLocksResponse::unsafe_arena_set_allocated_block_headers(::org::dash::platform::dapi::v0::BlockHeaders* block_headers) {
  clear_responses();
  if (block_headers) {
    set_has_block_headers();
    responses_.block_headers_ = block_headers;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse.block_headers)
}
inline ::org::dash::platform::dapi::v0::BlockHeaders* BlockHeadersWithChainLocksResponse::_internal_mutable_block_headers() {
  if (!_internal_has_block_headers()) {
    clear_responses();
    set_has_block_headers();
    responses_.block_headers_ = CreateMaybeMessage< ::org::dash::platform::dapi::v0::BlockHeaders >(GetArenaForAllocation());
  }
  return responses_.block_headers_;
}
inline ::org::dash::platform::dapi::v0::BlockHeaders* BlockHeadersWithChainLocksResponse::mutable_block_headers() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse.block_headers)
  return _internal_mutable_block_headers();
}

// .org.dash.platform.dapi.v0.ChainLockSignatureMessages chain_lock_signature_messages = 2;
inline bool BlockHeadersWithChainLocksResponse::_internal_has_chain_lock_signature_messages() const {
  return responses_case() == kChainLockSignatureMessages;
}
inline bool BlockHeadersWithChainLocksResponse::has_chain_lock_signature_messages() const {
  return _internal_has_chain_lock_signature_messages();
}
inline void BlockHeadersWithChainLocksResponse::set_has_chain_lock_signature_messages() {
  _oneof_case_[0] = kChainLockSignatureMessages;
}
inline void BlockHeadersWithChainLocksResponse::clear_chain_lock_signature_messages() {
  if (_internal_has_chain_lock_signature_messages()) {
    if (GetArenaForAllocation() == nullptr) {
      delete responses_.chain_lock_signature_messages_;
    }
    clear_has_responses();
  }
}
inline ::org::dash::platform::dapi::v0::ChainLockSignatureMessages* BlockHeadersWithChainLocksResponse::release_chain_lock_signature_messages() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse.chain_lock_signature_messages)
  if (_internal_has_chain_lock_signature_messages()) {
    clear_has_responses();
      ::org::dash::platform::dapi::v0::ChainLockSignatureMessages* temp = responses_.chain_lock_signature_messages_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    responses_.chain_lock_signature_messages_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::org::dash::platform::dapi::v0::ChainLockSignatureMessages& BlockHeadersWithChainLocksResponse::_internal_chain_lock_signature_messages() const {
  return _internal_has_chain_lock_signature_messages()
      ? *responses_.chain_lock_signature_messages_
      : reinterpret_cast< ::org::dash::platform::dapi::v0::ChainLockSignatureMessages&>(::org::dash::platform::dapi::v0::_ChainLockSignatureMessages_default_instance_);
}
inline const ::org::dash::platform::dapi::v0::ChainLockSignatureMessages& BlockHeadersWithChainLocksResponse::chain_lock_signature_messages() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse.chain_lock_signature_messages)
  return _internal_chain_lock_signature_messages();
}
inline ::org::dash::platform::dapi::v0::ChainLockSignatureMessages* BlockHeadersWithChainLocksResponse::unsafe_arena_release_chain_lock_signature_messages() {
  // @@protoc_insertion_point(field_unsafe_arena_release:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse.chain_lock_signature_messages)
  if (_internal_has_chain_lock_signature_messages()) {
    clear_has_responses();
    ::org::dash::platform::dapi::v0::ChainLockSignatureMessages* temp = responses_.chain_lock_signature_messages_;
    responses_.chain_lock_signature_messages_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void BlockHeadersWithChainLocksResponse::unsafe_arena_set_allocated_chain_lock_signature_messages(::org::dash::platform::dapi::v0::ChainLockSignatureMessages* chain_lock_signature_messages) {
  clear_responses();
  if (chain_lock_signature_messages) {
    set_has_chain_lock_signature_messages();
    responses_.chain_lock_signature_messages_ = chain_lock_signature_messages;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse.chain_lock_signature_messages)
}
inline ::org::dash::platform::dapi::v0::ChainLockSignatureMessages* BlockHeadersWithChainLocksResponse::_internal_mutable_chain_lock_signature_messages() {
  if (!_internal_has_chain_lock_signature_messages()) {
    clear_responses();
    set_has_chain_lock_signature_messages();
    responses_.chain_lock_signature_messages_ = CreateMaybeMessage< ::org::dash::platform::dapi::v0::ChainLockSignatureMessages >(GetArenaForAllocation());
  }
  return responses_.chain_lock_signature_messages_;
}
inline ::org::dash::platform::dapi::v0::ChainLockSignatureMessages* BlockHeadersWithChainLocksResponse::mutable_chain_lock_signature_messages() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.BlockHeadersWithChainLocksResponse.chain_lock_signature_messages)
  return _internal_mutable_chain_lock_signature_messages();
}

inline bool BlockHeadersWithChainLocksResponse::has_responses() const {
  return responses_case() != RESPONSES_NOT_SET;
}
inline void BlockHeadersWithChainLocksResponse::clear_has_responses() {
  _oneof_case_[0] = RESPONSES_NOT_SET;
}
inline BlockHeadersWithChainLocksResponse::ResponsesCase BlockHeadersWithChainLocksResponse::responses_case() const {
  return BlockHeadersWithChainLocksResponse::ResponsesCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// BlockHeaders

// repeated bytes headers = 1;
inline int BlockHeaders::_internal_headers_size() const {
  return headers_.size();
}
inline int BlockHeaders::headers_size() const {
  return _internal_headers_size();
}
inline void BlockHeaders::clear_headers() {
  headers_.Clear();
}
inline std::string* BlockHeaders::add_headers() {
  // @@protoc_insertion_point(field_add_mutable:org.dash.platform.dapi.v0.BlockHeaders.headers)
  return _internal_add_headers();
}
inline const std::string& BlockHeaders::_internal_headers(int index) const {
  return headers_.Get(index);
}
inline const std::string& BlockHeaders::headers(int index) const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.BlockHeaders.headers)
  return _internal_headers(index);
}
inline std::string* BlockHeaders::mutable_headers(int index) {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.BlockHeaders.headers)
  return headers_.Mutable(index);
}
inline void BlockHeaders::set_headers(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.BlockHeaders.headers)
  headers_.Mutable(index)->assign(value);
}
inline void BlockHeaders::set_headers(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.BlockHeaders.headers)
  headers_.Mutable(index)->assign(std::move(value));
}
inline void BlockHeaders::set_headers(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  headers_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:org.dash.platform.dapi.v0.BlockHeaders.headers)
}
inline void BlockHeaders::set_headers(int index, const void* value, size_t size) {
  headers_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:org.dash.platform.dapi.v0.BlockHeaders.headers)
}
inline std::string* BlockHeaders::_internal_add_headers() {
  return headers_.Add();
}
inline void BlockHeaders::add_headers(const std::string& value) {
  headers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:org.dash.platform.dapi.v0.BlockHeaders.headers)
}
inline void BlockHeaders::add_headers(std::string&& value) {
  headers_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:org.dash.platform.dapi.v0.BlockHeaders.headers)
}
inline void BlockHeaders::add_headers(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  headers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:org.dash.platform.dapi.v0.BlockHeaders.headers)
}
inline void BlockHeaders::add_headers(const void* value, size_t size) {
  headers_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:org.dash.platform.dapi.v0.BlockHeaders.headers)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
BlockHeaders::headers() const {
  // @@protoc_insertion_point(field_list:org.dash.platform.dapi.v0.BlockHeaders.headers)
  return headers_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
BlockHeaders::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_list:org.dash.platform.dapi.v0.BlockHeaders.headers)
  return &headers_;
}

// -------------------------------------------------------------------

// ChainLockSignatureMessages

// repeated bytes messages = 1;
inline int ChainLockSignatureMessages::_internal_messages_size() const {
  return messages_.size();
}
inline int ChainLockSignatureMessages::messages_size() const {
  return _internal_messages_size();
}
inline void ChainLockSignatureMessages::clear_messages() {
  messages_.Clear();
}
inline std::string* ChainLockSignatureMessages::add_messages() {
  // @@protoc_insertion_point(field_add_mutable:org.dash.platform.dapi.v0.ChainLockSignatureMessages.messages)
  return _internal_add_messages();
}
inline const std::string& ChainLockSignatureMessages::_internal_messages(int index) const {
  return messages_.Get(index);
}
inline const std::string& ChainLockSignatureMessages::messages(int index) const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.ChainLockSignatureMessages.messages)
  return _internal_messages(index);
}
inline std::string* ChainLockSignatureMessages::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.ChainLockSignatureMessages.messages)
  return messages_.Mutable(index);
}
inline void ChainLockSignatureMessages::set_messages(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.ChainLockSignatureMessages.messages)
  messages_.Mutable(index)->assign(value);
}
inline void ChainLockSignatureMessages::set_messages(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.ChainLockSignatureMessages.messages)
  messages_.Mutable(index)->assign(std::move(value));
}
inline void ChainLockSignatureMessages::set_messages(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  messages_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:org.dash.platform.dapi.v0.ChainLockSignatureMessages.messages)
}
inline void ChainLockSignatureMessages::set_messages(int index, const void* value, size_t size) {
  messages_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:org.dash.platform.dapi.v0.ChainLockSignatureMessages.messages)
}
inline std::string* ChainLockSignatureMessages::_internal_add_messages() {
  return messages_.Add();
}
inline void ChainLockSignatureMessages::add_messages(const std::string& value) {
  messages_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:org.dash.platform.dapi.v0.ChainLockSignatureMessages.messages)
}
inline void ChainLockSignatureMessages::add_messages(std::string&& value) {
  messages_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:org.dash.platform.dapi.v0.ChainLockSignatureMessages.messages)
}
inline void ChainLockSignatureMessages::add_messages(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  messages_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:org.dash.platform.dapi.v0.ChainLockSignatureMessages.messages)
}
inline void ChainLockSignatureMessages::add_messages(const void* value, size_t size) {
  messages_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:org.dash.platform.dapi.v0.ChainLockSignatureMessages.messages)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
ChainLockSignatureMessages::messages() const {
  // @@protoc_insertion_point(field_list:org.dash.platform.dapi.v0.ChainLockSignatureMessages.messages)
  return messages_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
ChainLockSignatureMessages::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:org.dash.platform.dapi.v0.ChainLockSignatureMessages.messages)
  return &messages_;
}

// -------------------------------------------------------------------

// GetEstimatedTransactionFeeRequest

// uint32 blocks = 1;
inline void GetEstimatedTransactionFeeRequest::clear_blocks() {
  blocks_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetEstimatedTransactionFeeRequest::_internal_blocks() const {
  return blocks_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetEstimatedTransactionFeeRequest::blocks() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeRequest.blocks)
  return _internal_blocks();
}
inline void GetEstimatedTransactionFeeRequest::_internal_set_blocks(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  blocks_ = value;
}
inline void GetEstimatedTransactionFeeRequest::set_blocks(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_blocks(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeRequest.blocks)
}

// -------------------------------------------------------------------

// GetEstimatedTransactionFeeResponse

// double fee = 1;
inline void GetEstimatedTransactionFeeResponse::clear_fee() {
  fee_ = 0;
}
inline double GetEstimatedTransactionFeeResponse::_internal_fee() const {
  return fee_;
}
inline double GetEstimatedTransactionFeeResponse::fee() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeResponse.fee)
  return _internal_fee();
}
inline void GetEstimatedTransactionFeeResponse::_internal_set_fee(double value) {
  
  fee_ = value;
}
inline void GetEstimatedTransactionFeeResponse::set_fee(double value) {
  _internal_set_fee(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.GetEstimatedTransactionFeeResponse.fee)
}

// -------------------------------------------------------------------

// TransactionsWithProofsRequest

// .org.dash.platform.dapi.v0.BloomFilter bloom_filter = 1;
inline bool TransactionsWithProofsRequest::_internal_has_bloom_filter() const {
  return this != internal_default_instance() && bloom_filter_ != nullptr;
}
inline bool TransactionsWithProofsRequest::has_bloom_filter() const {
  return _internal_has_bloom_filter();
}
inline void TransactionsWithProofsRequest::clear_bloom_filter() {
  if (GetArenaForAllocation() == nullptr && bloom_filter_ != nullptr) {
    delete bloom_filter_;
  }
  bloom_filter_ = nullptr;
}
inline const ::org::dash::platform::dapi::v0::BloomFilter& TransactionsWithProofsRequest::_internal_bloom_filter() const {
  const ::org::dash::platform::dapi::v0::BloomFilter* p = bloom_filter_;
  return p != nullptr ? *p : reinterpret_cast<const ::org::dash::platform::dapi::v0::BloomFilter&>(
      ::org::dash::platform::dapi::v0::_BloomFilter_default_instance_);
}
inline const ::org::dash::platform::dapi::v0::BloomFilter& TransactionsWithProofsRequest::bloom_filter() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.TransactionsWithProofsRequest.bloom_filter)
  return _internal_bloom_filter();
}
inline void TransactionsWithProofsRequest::unsafe_arena_set_allocated_bloom_filter(
    ::org::dash::platform::dapi::v0::BloomFilter* bloom_filter) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(bloom_filter_);
  }
  bloom_filter_ = bloom_filter;
  if (bloom_filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:org.dash.platform.dapi.v0.TransactionsWithProofsRequest.bloom_filter)
}
inline ::org::dash::platform::dapi::v0::BloomFilter* TransactionsWithProofsRequest::release_bloom_filter() {
  
  ::org::dash::platform::dapi::v0::BloomFilter* temp = bloom_filter_;
  bloom_filter_ = nullptr;
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::org::dash::platform::dapi::v0::BloomFilter* TransactionsWithProofsRequest::unsafe_arena_release_bloom_filter() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.TransactionsWithProofsRequest.bloom_filter)
  
  ::org::dash::platform::dapi::v0::BloomFilter* temp = bloom_filter_;
  bloom_filter_ = nullptr;
  return temp;
}
inline ::org::dash::platform::dapi::v0::BloomFilter* TransactionsWithProofsRequest::_internal_mutable_bloom_filter() {
  
  if (bloom_filter_ == nullptr) {
    auto* p = CreateMaybeMessage<::org::dash::platform::dapi::v0::BloomFilter>(GetArenaForAllocation());
    bloom_filter_ = p;
  }
  return bloom_filter_;
}
inline ::org::dash::platform::dapi::v0::BloomFilter* TransactionsWithProofsRequest::mutable_bloom_filter() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.TransactionsWithProofsRequest.bloom_filter)
  return _internal_mutable_bloom_filter();
}
inline void TransactionsWithProofsRequest::set_allocated_bloom_filter(::org::dash::platform::dapi::v0::BloomFilter* bloom_filter) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete bloom_filter_;
  }
  if (bloom_filter) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::org::dash::platform::dapi::v0::BloomFilter>::GetOwningArena(bloom_filter);
    if (message_arena != submessage_arena) {
      bloom_filter = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bloom_filter, submessage_arena);
    }
    
  } else {
    
  }
  bloom_filter_ = bloom_filter;
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.TransactionsWithProofsRequest.bloom_filter)
}

// bytes from_block_hash = 2;
inline bool TransactionsWithProofsRequest::_internal_has_from_block_hash() const {
  return from_block_case() == kFromBlockHash;
}
inline bool TransactionsWithProofsRequest::has_from_block_hash() const {
  return _internal_has_from_block_hash();
}
inline void TransactionsWithProofsRequest::set_has_from_block_hash() {
  _oneof_case_[0] = kFromBlockHash;
}
inline void TransactionsWithProofsRequest::clear_from_block_hash() {
  if (_internal_has_from_block_hash()) {
    from_block_.from_block_hash_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
    clear_has_from_block();
  }
}
inline const std::string& TransactionsWithProofsRequest::from_block_hash() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.TransactionsWithProofsRequest.from_block_hash)
  return _internal_from_block_hash();
}
template <typename ArgT0, typename... ArgT>
inline void TransactionsWithProofsRequest::set_from_block_hash(ArgT0&& arg0, ArgT... args) {
  if (!_internal_has_from_block_hash()) {
    clear_from_block();
    set_has_from_block_hash();
    from_block_.from_block_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  from_block_.from_block_hash_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.TransactionsWithProofsRequest.from_block_hash)
}
inline std::string* TransactionsWithProofsRequest::mutable_from_block_hash() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.TransactionsWithProofsRequest.from_block_hash)
  return _internal_mutable_from_block_hash();
}
inline const std::string& TransactionsWithProofsRequest::_internal_from_block_hash() const {
  if (_internal_has_from_block_hash()) {
    return from_block_.from_block_hash_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void TransactionsWithProofsRequest::_internal_set_from_block_hash(const std::string& value) {
  if (!_internal_has_from_block_hash()) {
    clear_from_block();
    set_has_from_block_hash();
    from_block_.from_block_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  from_block_.from_block_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* TransactionsWithProofsRequest::_internal_mutable_from_block_hash() {
  if (!_internal_has_from_block_hash()) {
    clear_from_block();
    set_has_from_block_hash();
    from_block_.from_block_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  return from_block_.from_block_hash_.Mutable(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* TransactionsWithProofsRequest::release_from_block_hash() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.TransactionsWithProofsRequest.from_block_hash)
  if (_internal_has_from_block_hash()) {
    clear_has_from_block();
    return from_block_.from_block_hash_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
  } else {
    return nullptr;
  }
}
inline void TransactionsWithProofsRequest::set_allocated_from_block_hash(std::string* from_block_hash) {
  if (has_from_block()) {
    clear_from_block();
  }
  if (from_block_hash != nullptr) {
    set_has_from_block_hash();
    from_block_.from_block_hash_.UnsafeSetDefault(from_block_hash);
    ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaForAllocation();
    if (arena != nullptr) {
      arena->Own(from_block_hash);
    }
  }
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.TransactionsWithProofsRequest.from_block_hash)
}

// uint32 from_block_height = 3;
inline bool TransactionsWithProofsRequest::_internal_has_from_block_height() const {
  return from_block_case() == kFromBlockHeight;
}
inline bool TransactionsWithProofsRequest::has_from_block_height() const {
  return _internal_has_from_block_height();
}
inline void TransactionsWithProofsRequest::set_has_from_block_height() {
  _oneof_case_[0] = kFromBlockHeight;
}
inline void TransactionsWithProofsRequest::clear_from_block_height() {
  if (_internal_has_from_block_height()) {
    from_block_.from_block_height_ = 0u;
    clear_has_from_block();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TransactionsWithProofsRequest::_internal_from_block_height() const {
  if (_internal_has_from_block_height()) {
    return from_block_.from_block_height_;
  }
  return 0u;
}
inline void TransactionsWithProofsRequest::_internal_set_from_block_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  if (!_internal_has_from_block_height()) {
    clear_from_block();
    set_has_from_block_height();
  }
  from_block_.from_block_height_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TransactionsWithProofsRequest::from_block_height() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.TransactionsWithProofsRequest.from_block_height)
  return _internal_from_block_height();
}
inline void TransactionsWithProofsRequest::set_from_block_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_from_block_height(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.TransactionsWithProofsRequest.from_block_height)
}

// uint32 count = 4;
inline void TransactionsWithProofsRequest::clear_count() {
  count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TransactionsWithProofsRequest::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TransactionsWithProofsRequest::count() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.TransactionsWithProofsRequest.count)
  return _internal_count();
}
inline void TransactionsWithProofsRequest::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  count_ = value;
}
inline void TransactionsWithProofsRequest::set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.TransactionsWithProofsRequest.count)
}

// bool send_transaction_hashes = 5;
inline void TransactionsWithProofsRequest::clear_send_transaction_hashes() {
  send_transaction_hashes_ = false;
}
inline bool TransactionsWithProofsRequest::_internal_send_transaction_hashes() const {
  return send_transaction_hashes_;
}
inline bool TransactionsWithProofsRequest::send_transaction_hashes() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.TransactionsWithProofsRequest.send_transaction_hashes)
  return _internal_send_transaction_hashes();
}
inline void TransactionsWithProofsRequest::_internal_set_send_transaction_hashes(bool value) {
  
  send_transaction_hashes_ = value;
}
inline void TransactionsWithProofsRequest::set_send_transaction_hashes(bool value) {
  _internal_set_send_transaction_hashes(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.TransactionsWithProofsRequest.send_transaction_hashes)
}

inline bool TransactionsWithProofsRequest::has_from_block() const {
  return from_block_case() != FROM_BLOCK_NOT_SET;
}
inline void TransactionsWithProofsRequest::clear_has_from_block() {
  _oneof_case_[0] = FROM_BLOCK_NOT_SET;
}
inline TransactionsWithProofsRequest::FromBlockCase TransactionsWithProofsRequest::from_block_case() const {
  return TransactionsWithProofsRequest::FromBlockCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// BloomFilter

// bytes v_data = 1;
inline void BloomFilter::clear_v_data() {
  v_data_.ClearToEmpty();
}
inline const std::string& BloomFilter::v_data() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.BloomFilter.v_data)
  return _internal_v_data();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void BloomFilter::set_v_data(ArgT0&& arg0, ArgT... args) {
 
 v_data_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.BloomFilter.v_data)
}
inline std::string* BloomFilter::mutable_v_data() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.BloomFilter.v_data)
  return _internal_mutable_v_data();
}
inline const std::string& BloomFilter::_internal_v_data() const {
  return v_data_.Get();
}
inline void BloomFilter::_internal_set_v_data(const std::string& value) {
  
  v_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* BloomFilter::_internal_mutable_v_data() {
  
  return v_data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* BloomFilter::release_v_data() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.BloomFilter.v_data)
  return v_data_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void BloomFilter::set_allocated_v_data(std::string* v_data) {
  if (v_data != nullptr) {
    
  } else {
    
  }
  v_data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), v_data,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.BloomFilter.v_data)
}

// uint32 n_hash_funcs = 2;
inline void BloomFilter::clear_n_hash_funcs() {
  n_hash_funcs_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BloomFilter::_internal_n_hash_funcs() const {
  return n_hash_funcs_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BloomFilter::n_hash_funcs() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.BloomFilter.n_hash_funcs)
  return _internal_n_hash_funcs();
}
inline void BloomFilter::_internal_set_n_hash_funcs(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  n_hash_funcs_ = value;
}
inline void BloomFilter::set_n_hash_funcs(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_n_hash_funcs(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.BloomFilter.n_hash_funcs)
}

// uint32 n_tweak = 3;
inline void BloomFilter::clear_n_tweak() {
  n_tweak_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BloomFilter::_internal_n_tweak() const {
  return n_tweak_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BloomFilter::n_tweak() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.BloomFilter.n_tweak)
  return _internal_n_tweak();
}
inline void BloomFilter::_internal_set_n_tweak(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  n_tweak_ = value;
}
inline void BloomFilter::set_n_tweak(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_n_tweak(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.BloomFilter.n_tweak)
}

// uint32 n_flags = 4;
inline void BloomFilter::clear_n_flags() {
  n_flags_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BloomFilter::_internal_n_flags() const {
  return n_flags_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BloomFilter::n_flags() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.BloomFilter.n_flags)
  return _internal_n_flags();
}
inline void BloomFilter::_internal_set_n_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  n_flags_ = value;
}
inline void BloomFilter::set_n_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_n_flags(value);
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.BloomFilter.n_flags)
}

// -------------------------------------------------------------------

// TransactionsWithProofsResponse

// .org.dash.platform.dapi.v0.RawTransactions raw_transactions = 1;
inline bool TransactionsWithProofsResponse::_internal_has_raw_transactions() const {
  return responses_case() == kRawTransactions;
}
inline bool TransactionsWithProofsResponse::has_raw_transactions() const {
  return _internal_has_raw_transactions();
}
inline void TransactionsWithProofsResponse::set_has_raw_transactions() {
  _oneof_case_[0] = kRawTransactions;
}
inline void TransactionsWithProofsResponse::clear_raw_transactions() {
  if (_internal_has_raw_transactions()) {
    if (GetArenaForAllocation() == nullptr) {
      delete responses_.raw_transactions_;
    }
    clear_has_responses();
  }
}
inline ::org::dash::platform::dapi::v0::RawTransactions* TransactionsWithProofsResponse::release_raw_transactions() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.TransactionsWithProofsResponse.raw_transactions)
  if (_internal_has_raw_transactions()) {
    clear_has_responses();
      ::org::dash::platform::dapi::v0::RawTransactions* temp = responses_.raw_transactions_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    responses_.raw_transactions_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::org::dash::platform::dapi::v0::RawTransactions& TransactionsWithProofsResponse::_internal_raw_transactions() const {
  return _internal_has_raw_transactions()
      ? *responses_.raw_transactions_
      : reinterpret_cast< ::org::dash::platform::dapi::v0::RawTransactions&>(::org::dash::platform::dapi::v0::_RawTransactions_default_instance_);
}
inline const ::org::dash::platform::dapi::v0::RawTransactions& TransactionsWithProofsResponse::raw_transactions() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.TransactionsWithProofsResponse.raw_transactions)
  return _internal_raw_transactions();
}
inline ::org::dash::platform::dapi::v0::RawTransactions* TransactionsWithProofsResponse::unsafe_arena_release_raw_transactions() {
  // @@protoc_insertion_point(field_unsafe_arena_release:org.dash.platform.dapi.v0.TransactionsWithProofsResponse.raw_transactions)
  if (_internal_has_raw_transactions()) {
    clear_has_responses();
    ::org::dash::platform::dapi::v0::RawTransactions* temp = responses_.raw_transactions_;
    responses_.raw_transactions_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TransactionsWithProofsResponse::unsafe_arena_set_allocated_raw_transactions(::org::dash::platform::dapi::v0::RawTransactions* raw_transactions) {
  clear_responses();
  if (raw_transactions) {
    set_has_raw_transactions();
    responses_.raw_transactions_ = raw_transactions;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:org.dash.platform.dapi.v0.TransactionsWithProofsResponse.raw_transactions)
}
inline ::org::dash::platform::dapi::v0::RawTransactions* TransactionsWithProofsResponse::_internal_mutable_raw_transactions() {
  if (!_internal_has_raw_transactions()) {
    clear_responses();
    set_has_raw_transactions();
    responses_.raw_transactions_ = CreateMaybeMessage< ::org::dash::platform::dapi::v0::RawTransactions >(GetArenaForAllocation());
  }
  return responses_.raw_transactions_;
}
inline ::org::dash::platform::dapi::v0::RawTransactions* TransactionsWithProofsResponse::mutable_raw_transactions() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.TransactionsWithProofsResponse.raw_transactions)
  return _internal_mutable_raw_transactions();
}

// .org.dash.platform.dapi.v0.InstantSendLockMessages instant_send_lock_messages = 2;
inline bool TransactionsWithProofsResponse::_internal_has_instant_send_lock_messages() const {
  return responses_case() == kInstantSendLockMessages;
}
inline bool TransactionsWithProofsResponse::has_instant_send_lock_messages() const {
  return _internal_has_instant_send_lock_messages();
}
inline void TransactionsWithProofsResponse::set_has_instant_send_lock_messages() {
  _oneof_case_[0] = kInstantSendLockMessages;
}
inline void TransactionsWithProofsResponse::clear_instant_send_lock_messages() {
  if (_internal_has_instant_send_lock_messages()) {
    if (GetArenaForAllocation() == nullptr) {
      delete responses_.instant_send_lock_messages_;
    }
    clear_has_responses();
  }
}
inline ::org::dash::platform::dapi::v0::InstantSendLockMessages* TransactionsWithProofsResponse::release_instant_send_lock_messages() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.TransactionsWithProofsResponse.instant_send_lock_messages)
  if (_internal_has_instant_send_lock_messages()) {
    clear_has_responses();
      ::org::dash::platform::dapi::v0::InstantSendLockMessages* temp = responses_.instant_send_lock_messages_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    responses_.instant_send_lock_messages_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::org::dash::platform::dapi::v0::InstantSendLockMessages& TransactionsWithProofsResponse::_internal_instant_send_lock_messages() const {
  return _internal_has_instant_send_lock_messages()
      ? *responses_.instant_send_lock_messages_
      : reinterpret_cast< ::org::dash::platform::dapi::v0::InstantSendLockMessages&>(::org::dash::platform::dapi::v0::_InstantSendLockMessages_default_instance_);
}
inline const ::org::dash::platform::dapi::v0::InstantSendLockMessages& TransactionsWithProofsResponse::instant_send_lock_messages() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.TransactionsWithProofsResponse.instant_send_lock_messages)
  return _internal_instant_send_lock_messages();
}
inline ::org::dash::platform::dapi::v0::InstantSendLockMessages* TransactionsWithProofsResponse::unsafe_arena_release_instant_send_lock_messages() {
  // @@protoc_insertion_point(field_unsafe_arena_release:org.dash.platform.dapi.v0.TransactionsWithProofsResponse.instant_send_lock_messages)
  if (_internal_has_instant_send_lock_messages()) {
    clear_has_responses();
    ::org::dash::platform::dapi::v0::InstantSendLockMessages* temp = responses_.instant_send_lock_messages_;
    responses_.instant_send_lock_messages_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TransactionsWithProofsResponse::unsafe_arena_set_allocated_instant_send_lock_messages(::org::dash::platform::dapi::v0::InstantSendLockMessages* instant_send_lock_messages) {
  clear_responses();
  if (instant_send_lock_messages) {
    set_has_instant_send_lock_messages();
    responses_.instant_send_lock_messages_ = instant_send_lock_messages;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:org.dash.platform.dapi.v0.TransactionsWithProofsResponse.instant_send_lock_messages)
}
inline ::org::dash::platform::dapi::v0::InstantSendLockMessages* TransactionsWithProofsResponse::_internal_mutable_instant_send_lock_messages() {
  if (!_internal_has_instant_send_lock_messages()) {
    clear_responses();
    set_has_instant_send_lock_messages();
    responses_.instant_send_lock_messages_ = CreateMaybeMessage< ::org::dash::platform::dapi::v0::InstantSendLockMessages >(GetArenaForAllocation());
  }
  return responses_.instant_send_lock_messages_;
}
inline ::org::dash::platform::dapi::v0::InstantSendLockMessages* TransactionsWithProofsResponse::mutable_instant_send_lock_messages() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.TransactionsWithProofsResponse.instant_send_lock_messages)
  return _internal_mutable_instant_send_lock_messages();
}

// bytes raw_merkle_block = 3;
inline bool TransactionsWithProofsResponse::_internal_has_raw_merkle_block() const {
  return responses_case() == kRawMerkleBlock;
}
inline bool TransactionsWithProofsResponse::has_raw_merkle_block() const {
  return _internal_has_raw_merkle_block();
}
inline void TransactionsWithProofsResponse::set_has_raw_merkle_block() {
  _oneof_case_[0] = kRawMerkleBlock;
}
inline void TransactionsWithProofsResponse::clear_raw_merkle_block() {
  if (_internal_has_raw_merkle_block()) {
    responses_.raw_merkle_block_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
    clear_has_responses();
  }
}
inline const std::string& TransactionsWithProofsResponse::raw_merkle_block() const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.TransactionsWithProofsResponse.raw_merkle_block)
  return _internal_raw_merkle_block();
}
template <typename ArgT0, typename... ArgT>
inline void TransactionsWithProofsResponse::set_raw_merkle_block(ArgT0&& arg0, ArgT... args) {
  if (!_internal_has_raw_merkle_block()) {
    clear_responses();
    set_has_raw_merkle_block();
    responses_.raw_merkle_block_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  responses_.raw_merkle_block_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.TransactionsWithProofsResponse.raw_merkle_block)
}
inline std::string* TransactionsWithProofsResponse::mutable_raw_merkle_block() {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.TransactionsWithProofsResponse.raw_merkle_block)
  return _internal_mutable_raw_merkle_block();
}
inline const std::string& TransactionsWithProofsResponse::_internal_raw_merkle_block() const {
  if (_internal_has_raw_merkle_block()) {
    return responses_.raw_merkle_block_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void TransactionsWithProofsResponse::_internal_set_raw_merkle_block(const std::string& value) {
  if (!_internal_has_raw_merkle_block()) {
    clear_responses();
    set_has_raw_merkle_block();
    responses_.raw_merkle_block_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  responses_.raw_merkle_block_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* TransactionsWithProofsResponse::_internal_mutable_raw_merkle_block() {
  if (!_internal_has_raw_merkle_block()) {
    clear_responses();
    set_has_raw_merkle_block();
    responses_.raw_merkle_block_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  return responses_.raw_merkle_block_.Mutable(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* TransactionsWithProofsResponse::release_raw_merkle_block() {
  // @@protoc_insertion_point(field_release:org.dash.platform.dapi.v0.TransactionsWithProofsResponse.raw_merkle_block)
  if (_internal_has_raw_merkle_block()) {
    clear_has_responses();
    return responses_.raw_merkle_block_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
  } else {
    return nullptr;
  }
}
inline void TransactionsWithProofsResponse::set_allocated_raw_merkle_block(std::string* raw_merkle_block) {
  if (has_responses()) {
    clear_responses();
  }
  if (raw_merkle_block != nullptr) {
    set_has_raw_merkle_block();
    responses_.raw_merkle_block_.UnsafeSetDefault(raw_merkle_block);
    ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaForAllocation();
    if (arena != nullptr) {
      arena->Own(raw_merkle_block);
    }
  }
  // @@protoc_insertion_point(field_set_allocated:org.dash.platform.dapi.v0.TransactionsWithProofsResponse.raw_merkle_block)
}

inline bool TransactionsWithProofsResponse::has_responses() const {
  return responses_case() != RESPONSES_NOT_SET;
}
inline void TransactionsWithProofsResponse::clear_has_responses() {
  _oneof_case_[0] = RESPONSES_NOT_SET;
}
inline TransactionsWithProofsResponse::ResponsesCase TransactionsWithProofsResponse::responses_case() const {
  return TransactionsWithProofsResponse::ResponsesCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// RawTransactions

// repeated bytes transactions = 1;
inline int RawTransactions::_internal_transactions_size() const {
  return transactions_.size();
}
inline int RawTransactions::transactions_size() const {
  return _internal_transactions_size();
}
inline void RawTransactions::clear_transactions() {
  transactions_.Clear();
}
inline std::string* RawTransactions::add_transactions() {
  // @@protoc_insertion_point(field_add_mutable:org.dash.platform.dapi.v0.RawTransactions.transactions)
  return _internal_add_transactions();
}
inline const std::string& RawTransactions::_internal_transactions(int index) const {
  return transactions_.Get(index);
}
inline const std::string& RawTransactions::transactions(int index) const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.RawTransactions.transactions)
  return _internal_transactions(index);
}
inline std::string* RawTransactions::mutable_transactions(int index) {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.RawTransactions.transactions)
  return transactions_.Mutable(index);
}
inline void RawTransactions::set_transactions(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.RawTransactions.transactions)
  transactions_.Mutable(index)->assign(value);
}
inline void RawTransactions::set_transactions(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.RawTransactions.transactions)
  transactions_.Mutable(index)->assign(std::move(value));
}
inline void RawTransactions::set_transactions(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  transactions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:org.dash.platform.dapi.v0.RawTransactions.transactions)
}
inline void RawTransactions::set_transactions(int index, const void* value, size_t size) {
  transactions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:org.dash.platform.dapi.v0.RawTransactions.transactions)
}
inline std::string* RawTransactions::_internal_add_transactions() {
  return transactions_.Add();
}
inline void RawTransactions::add_transactions(const std::string& value) {
  transactions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:org.dash.platform.dapi.v0.RawTransactions.transactions)
}
inline void RawTransactions::add_transactions(std::string&& value) {
  transactions_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:org.dash.platform.dapi.v0.RawTransactions.transactions)
}
inline void RawTransactions::add_transactions(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  transactions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:org.dash.platform.dapi.v0.RawTransactions.transactions)
}
inline void RawTransactions::add_transactions(const void* value, size_t size) {
  transactions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:org.dash.platform.dapi.v0.RawTransactions.transactions)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
RawTransactions::transactions() const {
  // @@protoc_insertion_point(field_list:org.dash.platform.dapi.v0.RawTransactions.transactions)
  return transactions_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
RawTransactions::mutable_transactions() {
  // @@protoc_insertion_point(field_mutable_list:org.dash.platform.dapi.v0.RawTransactions.transactions)
  return &transactions_;
}

// -------------------------------------------------------------------

// InstantSendLockMessages

// repeated bytes messages = 1;
inline int InstantSendLockMessages::_internal_messages_size() const {
  return messages_.size();
}
inline int InstantSendLockMessages::messages_size() const {
  return _internal_messages_size();
}
inline void InstantSendLockMessages::clear_messages() {
  messages_.Clear();
}
inline std::string* InstantSendLockMessages::add_messages() {
  // @@protoc_insertion_point(field_add_mutable:org.dash.platform.dapi.v0.InstantSendLockMessages.messages)
  return _internal_add_messages();
}
inline const std::string& InstantSendLockMessages::_internal_messages(int index) const {
  return messages_.Get(index);
}
inline const std::string& InstantSendLockMessages::messages(int index) const {
  // @@protoc_insertion_point(field_get:org.dash.platform.dapi.v0.InstantSendLockMessages.messages)
  return _internal_messages(index);
}
inline std::string* InstantSendLockMessages::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:org.dash.platform.dapi.v0.InstantSendLockMessages.messages)
  return messages_.Mutable(index);
}
inline void InstantSendLockMessages::set_messages(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.InstantSendLockMessages.messages)
  messages_.Mutable(index)->assign(value);
}
inline void InstantSendLockMessages::set_messages(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:org.dash.platform.dapi.v0.InstantSendLockMessages.messages)
  messages_.Mutable(index)->assign(std::move(value));
}
inline void InstantSendLockMessages::set_messages(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  messages_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:org.dash.platform.dapi.v0.InstantSendLockMessages.messages)
}
inline void InstantSendLockMessages::set_messages(int index, const void* value, size_t size) {
  messages_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:org.dash.platform.dapi.v0.InstantSendLockMessages.messages)
}
inline std::string* InstantSendLockMessages::_internal_add_messages() {
  return messages_.Add();
}
inline void InstantSendLockMessages::add_messages(const std::string& value) {
  messages_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:org.dash.platform.dapi.v0.InstantSendLockMessages.messages)
}
inline void InstantSendLockMessages::add_messages(std::string&& value) {
  messages_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:org.dash.platform.dapi.v0.InstantSendLockMessages.messages)
}
inline void InstantSendLockMessages::add_messages(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  messages_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:org.dash.platform.dapi.v0.InstantSendLockMessages.messages)
}
inline void InstantSendLockMessages::add_messages(const void* value, size_t size) {
  messages_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:org.dash.platform.dapi.v0.InstantSendLockMessages.messages)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
InstantSendLockMessages::messages() const {
  // @@protoc_insertion_point(field_list:org.dash.platform.dapi.v0.InstantSendLockMessages.messages)
  return messages_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
InstantSendLockMessages::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:org.dash.platform.dapi.v0.InstantSendLockMessages.messages)
  return &messages_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v0
}  // namespace dapi
}  // namespace platform
}  // namespace dash
}  // namespace org

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode_Status> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode_Status>() {
  return ::org::dash::platform::dapi::v0::GetStatusResponse_Masternode_Status_descriptor();
}
template <> struct is_proto_enum< ::org::dash::platform::dapi::v0::GetStatusResponse_Status> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::org::dash::platform::dapi::v0::GetStatusResponse_Status>() {
  return ::org::dash::platform::dapi::v0::GetStatusResponse_Status_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_core_2eproto
